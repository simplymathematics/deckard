_target_: deckard.base.experiment.Experiment
attack:
  attack_size: 10
  data:
    generate:
      n_features: 20
      n_samples: 2000
      name: classification
      random_state: 0
    sample:
      random_state: 0
      stratify: true
  init:
    batch_size: 64
    init_eval: 10
    max_eval: 10
    max_iter: 10
    model:
      art:
        library: sklearn
        pipeline:
          initialize:
            _target_: deckard.base.model.art_pipeline.ArtPipelineStage
      data:
        generate:
          n_features: 20
          n_samples: 2000
          name: classification
          random_state: 0
        sample:
          random_state: 0
          stratify: true
      init:
        C: 1.0
        kernel: rbf
        name: sklearn.svm.SVC
        probability: true
      library: sklearn
    name: art.attacks.evasion.HopSkipJump
  method: evasion
  model:
    art:
      library: sklearn
      pipeline:
        initialize:
          _target_: deckard.base.model.art_pipeline.ArtPipelineStage
    data:
      generate:
        n_features: 20
        n_samples: 2000
        name: classification
        random_state: 0
      sample:
        random_state: 0
        stratify: true
    init:
      C: 1.0
      kernel: rbf
      name: sklearn.svm.SVC
      probability: true
    library: sklearn
data:
  generate:
    n_features: 20
    n_samples: 2000
    name: classification
    random_state: 0
  sample:
    random_state: 0
    stratify: true
files:
  _target_: deckard.base.files.FileConfig
  adv_losses_file: adv_losses.json
  adv_predictions_file: adv_predictions.json
  adv_probabilities_file: adv_probabilities.json
  attack_dir: attack
  attack_file: attack.pkl
  data_dir: data
  data_file: data.pkl
  directory: ???
  losses_file: losses.json
  model_dir: model
  model_file: model.pkl
  name: evasion
  predictions_file: predictions.json
  probabilities_file: probabilities.json
  report_dir: report
  score_dict_file: score_dict.json
model:
  art:
    library: sklearn
    pipeline:
      initialize:
        _target_: deckard.base.model.art_pipeline.ArtPipelineStage
  data:
    generate:
      n_features: 20
      n_samples: 2000
      name: classification
      random_state: 0
    sample:
      random_state: 0
      stratify: true
  init:
    C: 1.0
    kernel: rbf
    name: sklearn.svm.SVC
    probability: true
  library: sklearn
optimizers:
- accuracy
- train_time
scorers:
  _target_: deckard.base.scorer.ScorerDict
  accuracy:
    direction: maximize
    name: sklearn.metrics.accuracy_score
    normalize: true
  log_loss:
    direction: minimize
    name: sklearn.metrics.log_loss
    normalize: true
