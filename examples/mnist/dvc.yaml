stages:
  prepare_data:
    cmd: 
      - python ../../deckard/layers/prepare.py  -d 'mnist'
    deps: 
      - configs/prepare.yml
      - ../../deckard/base/data.py
    outs: 
      - data/data.pkl
  control:
    cmd: python ../../deckard/layers/art_model.py --input_model "https://www.dropbox.com/s/bv1xwjaf1ov4u7y/mnist_ratio%3D0.h5?dl=1" --output_name "control_model.pb" --model_type "tf1" --dataset "data/data.pkl" --output_folder "data/control"
    deps:
    - data/data.pkl
    outs:
    - data/control/:
        cache: true
  defend:
    cmd: python ../../deckard/layers/defend.py --input_model "control_model.pb" --input_folder "data/control/" --model_type "tf1" --data_file "data/data.pkl" --output_folder "data/defenses/" --output_name "defended_model"
    deps:
    - data/data.pkl
    - data/control/
    outs:
    - data/defenses/:
        cache: true
  attack:
    cmd: python ../../deckard/layers/attack.py --input_model "defended_model" --input_folder "data/defenses/" --model_type "tf1" --data_file "data/data.pkl" --output_folder "data/attacks/" --output_name "attacked_model"
    deps:
    - ../../deckard/base/
    - ../../deckard/layers/
    - data/data.pkl
    - data/defenses/
    outs:
    - data/attacks/:
        cache: true
  # attack:
  #   cmd: python ../../deckard/layers/attack.py  -f data -s f1 -b False --name attack --experiment best_defense
  #   deps:
  #   - configs/attack.yml
  #   - ../../deckard/layers/attack.py
  #   - data/best_defense/model.h5
  #   - data/data.pkl
  #   outs:
  #   - data/best_attack/model.h5:
  #       cache: true
  #   - data/best_attack/data_params.json:
  #       cache: true
  #   - data/best_attack/model_params.json:
  #       cache: true
  #   metrics:
  #   - data/best_attack/results.json:
  #       cache: true
  # evaluate:
  #   cmd: python ../../deckard/layers/evaluate.py -f data -s mse -d mnist --experiment best_attack
  #   deps: 
  #     - data/best_attack/model.h5




