stages:
  prepare:
    cmd: python -m deckard.layers.runner prepare
    params:
      - prepare.config
    outs:
      - ${prepare.outputs.folder}/${prepare.outputs.file}
    # deps:
    #   -
    # metrics:
    #   - prepare.scores
    # plots:
    #   - prepare.plots
  art_model:
    cmd:  python  -m deckard.layers.art_model --layer_name art_model
    deps:
    - ${prepare.outputs.folder}/${prepare.outputs.file}
    params:
    - art_model
    outs:
    - art_model/:
        cache: true
  defend:
    cmd:  python  -m deckard.layers.defend --layer_name defend
    deps:
    - ${prepare.outputs.folder}/${prepare.outputs.file}
    - art_model/
    params:
    - defend.config
    - defend.inputs
    outs:
    - defend/:
        cache: true
  attack:
    cmd:  python  -m deckard.layers.attack --layer_name attack
    deps:
    - ${prepare.outputs.folder}/${prepare.outputs.file}
    - defend
    params:
    - attack
    outs:
    - attack/:
        cache: true
  # visualise:
  #   cmd: python  -m deckard.layers.visualise --layer_name visualise
  #   deps:
  #     - ${prepare.outputs.folder}/${prepare.outputs.file}
  #     - art_model/
  #   params:
  #     - visualise
  #   outs:
  #     - plots/:
  #         cache: true
  evaluate:
    cmd: python  -m deckard.layers.evaluate --layer_name evaluate
    deps:
      - ${prepare.outputs.folder}/${prepare.outputs.file}
      - art_model/
      - attack/
      - defend/
    params:
      - evaluate
    outs:
      - evaluate/
