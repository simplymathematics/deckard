stages:
  prepare_data:
    cmd: 
      - python ../../deckard/layers/prepare.py  -d 'mnist'
    deps: 
      - configs/prepare.yml
      - ../../deckard/base/data.py
    outs: 
      - data/data.pkl
  train:
    cmd: python ../../deckard/layers/art_model.py --model_path "https://www.dropbox.com/s/bv1xwjaf1ov4u7y/mnist_ratio%3D0.h5?dl=1" --model_name "model.h5" --model_type "tf1" --dataset "data/data.pkl" --output_folder "data"
    deps:
    - ../../deckard/base/utils.py
    - ../../deckard/layers/train.py
    - ../../deckard/base/experiment.py
    - data/data.pkl
    outs:
    - data/best_train/data_params.json:
        cache: true
    - data/best_train/model.h5:
        cache: true
    metrics:
    - data/best_train/results.json:
        cache: true
  # defend:
  #   cmd: python ../../deckard/layers/defend.py  -f data -s f1 -b False --name defense --experiment best_train
  #   deps:
  #   - configs/defend.yml
  #   - ../../deckard/layers/defend.py
  #   - data/best_train/model.h5
  #   outs:
  #   - data/best_defense/model.h5:
  #       cache: true
  #   - data/best_defense/data_params.json:
  #       cache: true
  #   - data/best_defense/model_params.json:
  #       cache: true
  #   metrics:
  #   - data/best_defense/results.json:
  #       cache: true
  # attack:
  #   cmd: python ../../deckard/layers/attack.py  -f data -s f1 -b False --name attack --experiment best_defense
  #   deps:
  #   - configs/attack.yml
  #   - ../../deckard/layers/attack.py
  #   - data/best_defense/model.h5
  #   - data/data.pkl
  #   outs:
  #   - data/best_attack/model.h5:
  #       cache: true
  #   - data/best_attack/data_params.json:
  #       cache: true
  #   - data/best_attack/model_params.json:
  #       cache: true
  #   metrics:
  #   - data/best_attack/results.json:
  #       cache: true
  # evaluate:
  #   cmd: python ../../deckard/layers/evaluate.py -f data -s mse -d mnist --experiment best_attack
  #   deps: 
  #     - data/best_attack/model.h5




