schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train --config_file cifar100.yaml
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          generate:
            name: torch_cifar100
            path: original_data
          sample:
            random_state: 0
            stratify: true
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: cifar100
          model_dir: models
          model_file: model
          model_type: .pt
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar100
                path: original_data
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            initialize:
              clip_values:
              - 0
              - 255
              criterion:
                name: torch.nn.CrossEntropyLoss
              optimizer:
                lr: 0.01
                momentum: 0.9
                name: torch.optim.SGD
            library: pytorch
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar100
              path: original_data
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.model.ModelInitializer
            name: torch_example.ResNet18
            num_channels: 3
            num_classes: 100
          library: pytorch
          trainer:
            batch_size: 1024
            nb_epoch: 10
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: cifar100/data/data.pkl
      md5: 1070854e6c00fc787bc0fdfc82792fd6
      size: 761280311
    - path: cifar100/models/model.optimizer.pt
      md5: dead7ac200960668972932049a2695cb
      size: 44989261
    - path: cifar100/models/model.pt
      md5: ac30436350a0765a65ab535299e93103
      size: 44998157
    - path: cifar100/reports/train/default/predictions.json
      md5: 960c0bcc9c969d9218ae3a5f4256d337
      size: 24436522
    - path: cifar100/reports/train/default/score_dict.json
      md5: d5d237be531584dab39c38b994c9ed1f
      size: 411
  attack:
    cmd: python -m deckard.layers.experiment attack --config_file cifar100.yaml
    deps:
    - path: cifar100/data/data.pkl
      md5: 1070854e6c00fc787bc0fdfc82792fd6
      size: 761280311
    - path: cifar100/models/model.pt
      md5: ac30436350a0765a65ab535299e93103
      size: 44998157
    params:
      params.yaml:
        attack:
          _target_: deckard.base.attack.Attack
          attack_size: 10
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar100
              path: original_data
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.attack.AttackInitializer
            model:
              _target_: deckard.base.model.Model
              art:
                _target_: deckard.base.model.art_pipeline.ArtPipeline
                data:
                  _target_: deckard.base.data.Data
                  generate:
                    name: torch_cifar100
                    path: original_data
                  sample:
                    random_state: 0
                    stratify: true
                  sklearn_pipeline:
                    preprocessor:
                      name: sklearn.preprocessing.StandardScaler
                      with_mean: true
                      with_std: true
                initialize:
                  clip_values:
                  - 0
                  - 255
                  criterion:
                    name: torch.nn.CrossEntropyLoss
                  optimizer:
                    lr: 0.01
                    momentum: 0.9
                    name: torch.optim.SGD
                library: pytorch
              data:
                _target_: deckard.base.data.Data
                generate:
                  name: torch_cifar100
                  path: original_data
                sample:
                  random_state: 0
                  stratify: true
                sklearn_pipeline:
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              init:
                _target_: deckard.base.model.ModelInitializer
                name: torch_example.ResNet18
                num_channels: 3
                num_classes: 100
              library: pytorch
              trainer:
                batch_size: 1024
                nb_epoch: 10
            name: art.attacks.evasion.HopSkipJump
          method: evasion
          model:
            _target_: deckard.base.model.Model
            art:
              _target_: deckard.base.model.art_pipeline.ArtPipeline
              data:
                _target_: deckard.base.data.Data
                generate:
                  name: torch_cifar100
                  path: original_data
                sample:
                  random_state: 0
                  stratify: true
                sklearn_pipeline:
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              initialize:
                clip_values:
                - 0
                - 255
                criterion:
                  name: torch.nn.CrossEntropyLoss
                optimizer:
                  lr: 0.01
                  momentum: 0.9
                  name: torch.optim.SGD
              library: pytorch
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar100
                path: original_data
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            init:
              _target_: deckard.base.model.ModelInitializer
              name: torch_example.ResNet18
              num_channels: 3
              num_classes: 100
            library: pytorch
            trainer:
              batch_size: 1024
              nb_epoch: 10
        data:
          _target_: deckard.base.data.Data
          generate:
            name: torch_cifar100
            path: original_data
          sample:
            random_state: 0
            stratify: true
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: cifar100
          model_dir: models
          model_file: model
          model_type: .pt
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            data:
              _target_: deckard.base.data.Data
              generate:
                name: torch_cifar100
                path: original_data
              sample:
                random_state: 0
                stratify: true
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            initialize:
              clip_values:
              - 0
              - 255
              criterion:
                name: torch.nn.CrossEntropyLoss
              optimizer:
                lr: 0.01
                momentum: 0.9
                name: torch.optim.SGD
            library: pytorch
          data:
            _target_: deckard.base.data.Data
            generate:
              name: torch_cifar100
              path: original_data
            sample:
              random_state: 0
              stratify: true
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.model.ModelInitializer
            name: torch_example.ResNet18
            num_channels: 3
            num_classes: 100
          library: pytorch
          trainer:
            batch_size: 1024
            nb_epoch: 10
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: cifar100/attacks/attack.pkl
      md5: 18be96acfa0eae64fac63405bd53cac1
      size: 123046
    - path: cifar100/reports/attack/default/adv_predictions.json
      md5: 98ceb6604311d2273da8b11e49e4150d
      size: 21402
    - path: cifar100/reports/attack/default/score_dict.json
      md5: f21ab891918c857171941e84dcc1b09a
      size: 561
  attacks@ResNet18:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet18
      stage=attack ++hydra.sweeper.storage=sqlite:///cifar100/reports/attack/ResNet18.db
      --config-name cifar100.yaml
    deps:
    - path: attacks.sh
      md5: 963c858a322d7a4990a92a25d5684c57
      size: 2907
    - path: cifar100/reports/attack/default/score_dict.json
      md5: f21ab891918c857171941e84dcc1b09a
      size: 561
    - path: models.sh
      md5: 1937e58bedac027034aea7d4a5712407
      size: 1380
    outs:
    - path: cifar100/reports/attack/ResNet18.db
      md5: 89fd1d229465cb1c49d1fd99cacbad33
      size: 475136
  attacks@ResNet152:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet152
      stage=attack ++hydra.sweeper.storage=sqlite:///cifar100/reports/attack/ResNet152.db
      --config-name cifar100.yaml
    deps:
    - path: attacks.sh
      md5: 963c858a322d7a4990a92a25d5684c57
      size: 2907
    - path: cifar100/reports/attack/default/score_dict.json
      md5: f21ab891918c857171941e84dcc1b09a
      size: 561
    - path: models.sh
      md5: 1937e58bedac027034aea7d4a5712407
      size: 1380
    outs:
    - path: cifar100/reports/attack/ResNet152.db
      md5: 5561d1c232b35787d315ebc17c28386d
      size: 249856
  attacks@ResNet34:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet34
      stage=attack ++hydra.sweeper.storage=sqlite:///cifar100/reports/attack/ResNet34.db
      --config-name cifar100.yaml
    deps:
    - path: attacks.sh
      md5: 963c858a322d7a4990a92a25d5684c57
      size: 2907
    - path: cifar100/reports/attack/default/score_dict.json
      md5: f21ab891918c857171941e84dcc1b09a
      size: 561
    - path: models.sh
      md5: 1937e58bedac027034aea7d4a5712407
      size: 1380
    outs:
    - path: cifar100/reports/attack/ResNet34.db
      md5: 5cd8e5a0e50fe7ef759c6c04fc430863
      size: 475136
  attacks@ResNet50:
    cmd: bash attacks.sh ++attack.attack_size=100 ++model.init.name=torch_example.ResNet50
      stage=attack ++hydra.sweeper.storage=sqlite:///cifar100/reports/attack/ResNet50.db
      --config-name cifar100.yaml
    deps:
    - path: attacks.sh
      md5: 963c858a322d7a4990a92a25d5684c57
      size: 2907
    - path: cifar100/reports/attack/default/score_dict.json
      md5: f21ab891918c857171941e84dcc1b09a
      size: 561
    - path: models.sh
      md5: 1937e58bedac027034aea7d4a5712407
      size: 1380
    outs:
    - path: cifar100/reports/attack/ResNet50.db
      md5: 5556f78590f52e7879cb434450ab78c8
      size: 745472
