schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          generate:
            _target_: deckard.base.data.generator.DataGenerator
            name: torch_mnist
          sample:
            _target_: deckard.base.data.sampler.SklearnDataSampler
            random_state: 0
            stratify: true
          sklearn_pipeline:
            _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pt
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            data:
              _target_: deckard.base.data.Data
              generate:
                _target_: deckard.base.data.generator.DataGenerator
                name: torch_mnist
              sample:
                _target_: deckard.base.data.sampler.SklearnDataSampler
                random_state: 0
                stratify: true
              sklearn_pipeline:
                _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            initialize:
              clip_values:
              - 0.0
              - 1.0
              criterion:
                name: torch.nn.CrossEntropyLoss
              optimizer:
                lr: 0.01
                momentum: 0.9
                name: torch.optim.SGD
            library: pytorch
          data:
            _target_: deckard.base.data.Data
            generate:
              _target_: deckard.base.data.generator.DataGenerator
              name: torch_mnist
            sample:
              _target_: deckard.base.data.sampler.SklearnDataSampler
              random_state: 0
              stratify: true
            sklearn_pipeline:
              _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.model.ModelInitializer
            name: torch_example.MNISTNet
          library: pytorch
          trainer:
            batch_size: 1024
            nb_epoch: 20
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/data/data.pkl
      md5: de934a5f5157970e5f30b8f3f1856a68
      size: 222320311
    - path: output/models/model.pt
      md5: ab52613772e3f17e7e8deb93ce5616ee
      size: 76923
    - path: output/reports/train/default/params.yaml
      md5: 84f5a8b255a03d6fb1c1d2e04ed235de
      size: 2118
    - path: output/reports/train/default/predictions.json
      md5: 9a23b6679c6fe05ee3ffca2a398beb69
      size: 2829336
    - path: output/reports/train/default/score_dict.json
      md5: 4c13d76a966ea4a18c11c8b94c92da86
      size: 406
  attack:
    cmd: python -m deckard.layers.experiment attack
    deps:
    - path: output/data/data.pkl
      md5: de934a5f5157970e5f30b8f3f1856a68
      size: 222320311
    - path: output/models/model.pt
      md5: ab52613772e3f17e7e8deb93ce5616ee
      size: 76923
    params:
      params.yaml:
        attack:
          _target_: deckard.base.attack.Attack
          attack_size: 100
          data:
            _target_: deckard.base.data.Data
            generate:
              _target_: deckard.base.data.generator.DataGenerator
              name: torch_mnist
            sample:
              _target_: deckard.base.data.sampler.SklearnDataSampler
              random_state: 0
              stratify: true
            sklearn_pipeline:
              _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.attack.AttackInitializer
            model:
              _target_: deckard.base.model.Model
              art:
                _target_: deckard.base.model.art_pipeline.ArtPipeline
                data:
                  _target_: deckard.base.data.Data
                  generate:
                    _target_: deckard.base.data.generator.DataGenerator
                    name: torch_mnist
                  sample:
                    _target_: deckard.base.data.sampler.SklearnDataSampler
                    random_state: 0
                    stratify: true
                  sklearn_pipeline:
                    _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
                    preprocessor:
                      name: sklearn.preprocessing.StandardScaler
                      with_mean: true
                      with_std: true
                initialize:
                  clip_values:
                  - 0.0
                  - 1.0
                  criterion:
                    name: torch.nn.CrossEntropyLoss
                  optimizer:
                    lr: 0.01
                    momentum: 0.9
                    name: torch.optim.SGD
                library: pytorch
              data:
                _target_: deckard.base.data.Data
                generate:
                  _target_: deckard.base.data.generator.DataGenerator
                  name: torch_mnist
                sample:
                  _target_: deckard.base.data.sampler.SklearnDataSampler
                  random_state: 0
                  stratify: true
                sklearn_pipeline:
                  _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              init:
                _target_: deckard.base.model.ModelInitializer
                name: torch_example.MNISTNet
              library: pytorch
              trainer:
                batch_size: 1024
                nb_epoch: 20
            name: art.attacks.evasion.HopSkipJump
          method: evasion
          model:
            _target_: deckard.base.model.Model
            art:
              _target_: deckard.base.model.art_pipeline.ArtPipeline
              data:
                _target_: deckard.base.data.Data
                generate:
                  _target_: deckard.base.data.generator.DataGenerator
                  name: torch_mnist
                sample:
                  _target_: deckard.base.data.sampler.SklearnDataSampler
                  random_state: 0
                  stratify: true
                sklearn_pipeline:
                  _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              initialize:
                clip_values:
                - 0.0
                - 1.0
                criterion:
                  name: torch.nn.CrossEntropyLoss
                optimizer:
                  lr: 0.01
                  momentum: 0.9
                  name: torch.optim.SGD
              library: pytorch
            data:
              _target_: deckard.base.data.Data
              generate:
                _target_: deckard.base.data.generator.DataGenerator
                name: torch_mnist
              sample:
                _target_: deckard.base.data.sampler.SklearnDataSampler
                random_state: 0
                stratify: true
              sklearn_pipeline:
                _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            init:
              _target_: deckard.base.model.ModelInitializer
              name: torch_example.MNISTNet
            library: pytorch
            trainer:
              batch_size: 1024
              nb_epoch: 20
        data.generate:
          _target_: deckard.base.data.generator.DataGenerator
          name: torch_mnist
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pt
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            data:
              _target_: deckard.base.data.Data
              generate:
                _target_: deckard.base.data.generator.DataGenerator
                name: torch_mnist
              sample:
                _target_: deckard.base.data.sampler.SklearnDataSampler
                random_state: 0
                stratify: true
              sklearn_pipeline:
                _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            initialize:
              clip_values:
              - 0.0
              - 1.0
              criterion:
                name: torch.nn.CrossEntropyLoss
              optimizer:
                lr: 0.01
                momentum: 0.9
                name: torch.optim.SGD
            library: pytorch
          data:
            _target_: deckard.base.data.Data
            generate:
              _target_: deckard.base.data.generator.DataGenerator
              name: torch_mnist
            sample:
              _target_: deckard.base.data.sampler.SklearnDataSampler
              random_state: 0
              stratify: true
            sklearn_pipeline:
              _target_: deckard.base.data.sklearn_pipeline.SklearnDataPipeline
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            _target_: deckard.base.model.ModelInitializer
            name: torch_example.MNISTNet
          library: pytorch
          trainer:
            batch_size: 1024
            nb_epoch: 20
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/attacks/attack.pkl
      md5: e583848d62e80cc3e73aba6c82ba379c
      size: 313766
    - path: output/reports/attack/default/adv_predictions.json
      md5: d68e347485e63ca56ea124bf9893da60
      size: 22151
    - path: output/reports/attack/default/params.yaml
      md5: 6fdf322889e45e61af0a130252d91844
      size: 4863
    - path: output/reports/attack/default/score_dict.json
      md5: cdd16437e69b5d49a9cd26b17ecdf6eb
      size: 542
  models:
    cmd: bash models.sh --config-name grid.yaml
    deps:
    - path: output/data/data.pkl
      md5: de934a5f5157970e5f30b8f3f1856a68
      size: 222320311
    - path: output/models/model.pt
      md5: ab52613772e3f17e7e8deb93ce5616ee
      size: 76923
    outs:
    - path: model.db
      md5: a577ce18f5a95b7f48a8966d5ea3abdd
      size: 217088
  attacks:
    cmd: bash attacks.sh ++stage=attack
    deps:
    - path: model.db
      md5: ebd66436fc38a1bb192b5e2007c5b518
      size: 131072
    - path: output/data/data.pkl
      md5: de934a5f5157970e5f30b8f3f1856a68
      size: 222320311
    - path: output/models/model.pt
      md5: e5f7d84082d2ceb7b9249f16bf57384f
      size: 76923
    outs:
    - path: attack.db
      md5: 0d0f87fe4110e9338b111ffe052385b4
      size: 368640
  compile_train:
    cmd: python -m deckard.layers.compile --report_folder output/reports/train/ --results_file
      output/reports/train.csv
    deps:
    - path: model.db
      md5: ebd66436fc38a1bb192b5e2007c5b518
      size: 131072
    - path: output/data/
      md5: 837a1c3acf188d7955e48419b38d8135.dir
      size: 2445523421
      nfiles: 11
    - path: output/models/
      md5: aa7e2fab941318174bafd6020a707c3d.dir
      size: 105756804
      nfiles: 1376
    outs:
    - path: output/reports/train.csv
      md5: 06e3d0464b51e00864d997e71eeb37de
      size: 303205
  compile_attack:
    cmd: python -m deckard.layers.compile --report_folder output/reports/attack/ --results_file
      output/reports/attack.csv
    deps:
    - path: attack.db
      md5: 0d0f87fe4110e9338b111ffe052385b4
      size: 368640
    - path: output/attacks/
      md5: a3cc9f207932bb9ba83fbff54a1f8f96.dir
      size: 194845864
      nfiles: 604
    - path: output/data/
      md5: 837a1c3acf188d7955e48419b38d8135.dir
      size: 2445523421
      nfiles: 11
    - path: output/models/
      md5: aa7e2fab941318174bafd6020a707c3d.dir
      size: 105756804
      nfiles: 1376
    outs:
    - path: output/reports/attack.csv
      md5: 82d9942ccd27c9295a254572eeece86b
      size: 1888668
