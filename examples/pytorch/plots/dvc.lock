schema: '2.0'
stages:
  clean@cifar:
    cmd: python -m deckard.layers.clean_data -i data/attack_cifar.csv  -o data/cifar.csv  -c
      ../conf/clean_cifar.yaml --drop_if_empty adv_fit_time accuracy train_time predict_time
      adv_accuracy
    deps:
    - path: ../conf/clean_cifar.yaml
      hash: md5
      md5: 64150a388252f623fd67838ed36ca670
      size: 873
    - path: data/attack_cifar.csv
      hash: md5
      md5: 9fb240676d1ba7faea366fad55931a01
      size: 26090605
    outs:
    - path: data/cifar.csv
      hash: md5
      md5: 93572521018214433674bcc3256bba0c
      size: 20644834
  clean@mnist:
    cmd: python -m deckard.layers.clean_data -i data/attack_mnist.csv  -o data/mnist.csv  -c
      ../conf/clean_mnist.yaml --drop_if_empty adv_fit_time accuracy train_time predict_time
      adv_accuracy
    deps:
    - path: ../conf/clean_mnist.yaml
      hash: md5
      md5: b5ee8305cb0c9daa6ff09d6a096c5a34
      size: 869
    - path: data/attack_mnist.csv
      hash: md5
      md5: 5b422f124272c3b012f023a354ba2737
      size: 189644858
    outs:
    - path: data/mnist.csv
      hash: md5
      md5: 994d1bcab57756d6d7aa112c464cd13d
      size: 23238114
  clean@cifar100:
    cmd: python -m deckard.layers.clean_data -i data/attack_cifar100.csv  -o data/cifar100.csv  -c
      ../conf/clean_cifar100.yaml --drop_if_empty adv_fit_time accuracy train_time
      predict_time adv_accuracy
    deps:
    - path: ../conf/clean_cifar100.yaml
      hash: md5
      md5: c5e8689321f99fd2f691ef7f9d8b5e4f
      size: 897
    - path: data/attack_cifar100.csv
      hash: md5
      md5: 8f508ea00d964ebb838f5ad4e678dc44
      size: 36167717
    outs:
    - path: data/cifar100.csv
      hash: md5
      md5: 898bb3154def96e0ee20fe3041b2bbff
      size: 30522799
  merge:
    cmd: python -m deckard.layers.merge --smaller_file data/cifar.csv data/cifar100.csv
      data/mnist.csv  --output_folder data --output_file merged.csv
    deps:
    - path: data/cifar.csv
      hash: md5
      md5: 93572521018214433674bcc3256bba0c
      size: 20644834
    - path: data/cifar100.csv
      hash: md5
      md5: 898bb3154def96e0ee20fe3041b2bbff
      size: 30522799
    - path: data/mnist.csv
      hash: md5
      md5: 994d1bcab57756d6d7aa112c464cd13d
      size: 23238114
    outs:
    - path: data/merged.csv
      hash: md5
      md5: 8d1038b925e7229ed5756e5f8df972a2
      size: 75922957
  afr:
    cmd: python -m deckard.layers.afr  --data_file data/merged.csv  --target adv_failures
      --duration_col adv_fit_time_per_sample  --config_file afr.yaml --plots_folder
      plots/
    deps:
    - path: data/merged.csv
      hash: md5
      md5: ebca17142f7fbfc920b37824ea1c480e
      size: 85713970
    params:
      afr.yaml:
        covariates:
        - adv_fit_time_per_sample
        - accuracy
        - train_time_per_sample
        - atk_value
        - def_value
        - data.sample.random_state
        - Epochs
        - model_layers
        - id
        - atk_gen
        - def_gen
        - adv_failures
        - adv_accuracy
        - predict_time_per_sample
        cox:
          plot:
            file: cox_aft.pdf
            title: Cox Model
            qq_title: Cox QQ Plot
          t0: 0.3
          model:
            penalizer: 0.1
          labels:
            data.sample.random_state: Random State
            atk_value: Attack Strength
            train_time_per_sample: $t_{train}$
            predict_time_per_sample: $t_{predict}$
            adv_accuracy: Adv. Accuracy
            def_value: Defence Strength
            accuracy: Ben. Accuracy
            model_layers: Layers
            adv_fit_time_per_sample: $t_{attack}$
            adv_failure_rate: $f_{adv.}(t;\theta)$
            failure_rate: $f_{ben.}(t;\theta)$
            Epochs: No. of Epochs
            model.trainer.batch_size: Batch Size
            def_gen: Defence
        dummies:
          atk_gen: 'Atk:'
          def_gen: 'Def:'
          id: 'Data:'
        exponential:
          plot:
            file: exponential_aft.pdf
            title: Exponential Model
            qq_title: Exponential QQ Plot
          t0: 0.1
          model:
            breakpoints:
            - 0.1
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'def_value: lambda_': Defence Strength
            'model_layers: lambda_': Layers
            'train_time_per_sample: lambda_': $t_{train}$
            'predict_time_per_sample: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time_per_sample: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $f_{adv.}(t;\theta)$
            'failure_rate: lambda_': $f_{ben.}(t;\theta)$
            'Epochs: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
            ': lambda_': ''
        gamma:
          plot:
            file: gamma_aft.pdf
            title: Generalized Gamma Model
            qq_title: Gamma QQ Plot
          t0: 0.3
          model:
            penalizer: 0.4
          labels:
            'Intercept: alpha_': $\alpha$
            'Intercept: beta_': $\beta$
            'data.sample.random_state: beta_': Random State
            'def_value: beta_': Defence Strength
            'atk_value: beta_': Attack Strength
            'train_time_per_sample: beta_': $t_{train}$
            'model_layers: beta_': Layers
            'predict_time_per_sample: beta_': $t_{predict}$
            'adv_accuracy: beta_': Adv. Accuracy
            'accuracy: beta_': Ben. Accuracy
            'adv_fit_time_per_sample: beta_': $t_{attack}$
            'adv_failure_rate: beta_': $h_{adv.}(t;\theta)$
            'failure_rate: beta_': $h_{ben.}(t;\theta)$
            'Epochs: beta_': No. of Epochs
            'model.trainer.batch_size: beta_': Batch Size
            def_gen: Defence
            'attack.init.eps: beta_': $\varepsilon$
        log_logistic:
          plot:
            file: log_logistic_aft.pdf
            title: Log logistic AFR Model
            qq_title: Log Logistic QQ Plot
          t0: 1
          model:
            penalizer: 0.2
          labels:
            'Intercept: beta_': $\beta$
            'Intercept: alpha_': $\alpha$
            'data.sample.random_state: alpha_': Random State
            'atk_value: alpha_': Attack Strength
            'def_value: alpha_': Defence Strength
            'model_layers: alpha_': Layers
            'train_time_per_sample: alpha_': $t_{train}$
            'predict_time_per_sample: alpha_': $t_{predict}$
            'adv_accuracy: alpha_': Adv. Accuracy
            'accuracy: alpha_': Ben. Accuracy
            'adv_fit_time_per_sample: alpha_': $t_{attack}$
            'adv_failure_rate: alpha_': $h_{adv.}(t;\theta)$
            'failure_rate: alpha_': $h_{ben.}(t;\theta)$
            'Epochs: alpha_': No. of Epochs
            'model.trainer.batch_size: alpha_': Batch Size
            def_gen: Defence
            'attack.init.eps: alpha_': $\varepsilon$
        log_normal:
          plot:
            file: log_normal_aft.pdf
            title: Log Normal AFR Model
            qq_title: Log Normal QQ Plot
          t0: 2
          model:
            penalizer: 0.5
          labels:
            'Intercept: sigma_': $\sigma$
            'Intercept: mu_': $\mu$
            'atk_value: mu_': Attack Strength
            'def_value: mu_': Defence Strength
            'model_layers: mu_': Layers
            'train_time_per_sample: mu_': $t_{train}$
            'predict_time_per_sample: mu_': $t_{predict}$
            'adv_accuracy: mu_': Adv. Accuracy
            'accuracy: mu_': Ben. Accuracy
            'adv_fit_time_per_sample: mu_': $t_{attack}$
            'adv_failure_rate: mu_': $h_{adv.}(t;\theta)$
            'failure_rate: mu_': $h_{ben.}(t;\theta)$
            'Epochs: mu_': No. of Epochs
            'model.trainer.batch_size: mu_': Batch Size
            def_gen: Defence
            'attack.init.eps: mu_': $\varepsilon$
            'data.sample.random_state: mu_': Random State
        weibull:
          plot:
            file: weibull_aft.pdf
            title: Weibull AFR Model
            qq_title: Weibull QQ Plot
          t0: 0.3
          model:
            penalizer: 0.1
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'model_layers: lambda_': Layers
            'train_time_per_sample: lambda_': $t_{train}$
            'predict_time_per_sample: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time_per_sample: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $f_{adv.}(t;\theta)$
            'failure_rate: lambda_': $f_{ben.}(t;\theta)$
            'Epochs: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
            'def_value: lambda_': Defence Strength
            ': lambda_': ''
    outs:
    - path: plots/aft_comparison.csv
      hash: md5
      md5: d73ecadc5fa94fef2549e63280343bcd
      size: 339
    - path: plots/aft_comparison.tex
      hash: md5
      md5: 91fb7cb7394fd71f7e817a34af87315a
      size: 631
    - path: plots/cox_aft.pdf
      hash: md5
      md5: ed27d1978e06ae05dd5d35ddecdd6dc4
      size: 30876
    - path: plots/cox_aft_dummies.pdf
      hash: md5
      md5: 3124eb6beac82d84772d5bd49ba9e503
      size: 28856
    - path: plots/cox_qq.pdf
      hash: md5
      md5: 5d1a38624404554f04677a952d03a839
      size: 20181
    - path: plots/cox_summary.csv
      hash: md5
      md5: 39903e136f766f9840cbe1cc0154a39b
      size: 4529
    - path: plots/exponential_aft.pdf
      hash: md5
      md5: 66a13486cd114e4cc8267b69a4dd2f04
      size: 33155
    - path: plots/exponential_aft_dummies.pdf
      hash: md5
      md5: 6b506006f830ce108dde579d640e1d37
      size: 32185
    - path: plots/exponential_qq.pdf
      hash: md5
      md5: 4093a29d709ad92aedf846b50dcab965
      size: 20240
    - path: plots/exponential_summary.csv
      hash: md5
      md5: 90b7e50b371d5f54a5fa7b0c4c5743b3
      size: 9022
    - path: plots/gamma_aft.pdf
      hash: md5
      md5: 4c0368cb06e211c7d0c2905481701901
      size: 29572
    - path: plots/gamma_aft_dummies.pdf
      hash: md5
      md5: 48381e11d6eb87065cccc2179d0e19e6
      size: 35152
    - path: plots/gamma_qq.pdf
      hash: md5
      md5: 2c7a027149f292d78f7d4886751413e0
      size: 11343
    - path: plots/gamma_summary.csv
      hash: md5
      md5: 1150bbfaebb81f5ea9651766a1f868f7
      size: 13975
    - path: plots/log_logistic_aft.pdf
      hash: md5
      md5: 31260174c6af90e4b748d7e06a36f81e
      size: 32733
    - path: plots/log_logistic_aft_dummies.pdf
      hash: md5
      md5: dd120a0385f2d4341c54f2a8476b7d2e
      size: 31885
    - path: plots/log_logistic_qq.pdf
      hash: md5
      md5: cd2f80c1444b3420c1c7dfdc066e4fab
      size: 18830
    - path: plots/log_logistic_summary.csv
      hash: md5
      md5: 55ff092ab00e5cc45860c11caee59024
      size: 4898
    - path: plots/log_normal_aft.pdf
      hash: md5
      md5: 11fa430feb2cf96730b85d930541d0ab
      size: 32716
    - path: plots/log_normal_aft_dummies.pdf
      hash: md5
      md5: 9031ebb8918e71be9c68e7db68c59497
      size: 32241
    - path: plots/log_normal_qq.pdf
      hash: md5
      md5: 4410d657b6fe927cb0ca47909f6504b1
      size: 19875
    - path: plots/log_normal_summary.csv
      hash: md5
      md5: 6d49d9f09a9aeca15846bcc74a0906fc
      size: 5002
    - path: plots/weibull_aft.pdf
      hash: md5
      md5: 91ec661dd0ef73b03dbac81292522c92
      size: 32493
    - path: plots/weibull_aft_dummies.pdf
      hash: md5
      md5: 54de898f6abcd858bfa0da07d8db002a
      size: 31439
    - path: plots/weibull_qq.pdf
      hash: md5
      md5: 07b89dc4f873a61bd45a9f4ac580f276
      size: 18007
    - path: plots/weibull_summary.csv
      hash: md5
      md5: c77df236abf393dbf50fc58629886dbd
      size: 4952
  predict_survival_time:
    cmd: python predict_with_best.py  --data data/merged.csv  --config_file afr.yaml  --model
      weibull  --target adv_failures  --duration_col adv_fit_time_per_sample --output
      data/merged_afr.csv
    deps:
    - path: afr.yaml
      hash: md5
      md5: 1e39b01abdaf8c823a25379f6ce391d4
      size: 6349
    - path: data/merged.csv
      hash: md5
      md5: ebca17142f7fbfc920b37824ea1c480e
      size: 85713970
    - path: plots/aft_comparison.tex
      hash: md5
      md5: 91fb7cb7394fd71f7e817a34af87315a
      size: 631
    - path: predict_with_best.py
      hash: md5
      md5: e60a437ab37d2ee22256268a207f2431
      size: 2571
    outs:
    - path: data/merged_afr.csv
      hash: md5
      md5: f366cd694109920b498c8cf876440050
      size: 86609777
  plot:
    cmd: python -m deckard.layers.plots --path plots/ --file data/merged_afr.csv -c
      plots.yaml
    deps:
    - path: data/merged_afr.csv
      hash: md5
      md5: f366cd694109920b498c8cf876440050
      size: 86609777
    - path: plots.yaml
      hash: md5
      md5: a0c5c100248543bb5f0de8949b459bc5
      size: 3815
    params:
      afr.yaml:
        covariates:
        - adv_fit_time_per_sample
        - accuracy
        - train_time_per_sample
        - atk_value
        - def_value
        - data.sample.random_state
        - Epochs
        - model_layers
        - id
        - atk_gen
        - def_gen
        - adv_failures
        - adv_accuracy
        - predict_time_per_sample
        weibull:
          plot:
            file: weibull_aft.pdf
            title: Weibull AFR Model
            qq_title: Weibull QQ Plot
          t0: 0.3
          model:
            penalizer: 0.1
          labels:
            'Intercept: rho_': $\rho$
            'Intercept: lambda_': $\lambda$
            'data.sample.random_state: lambda_': Random State
            'atk_value: lambda_': Attack Strength
            'model_layers: lambda_': Layers
            'train_time_per_sample: lambda_': $t_{train}$
            'predict_time_per_sample: lambda_': $t_{predict}$
            'adv_accuracy: lambda_': Adv. Accuracy
            'accuracy: lambda_': Ben. Accuracy
            'adv_fit_time_per_sample: lambda_': $t_{attack}$
            'adv_failure_rate: lambda_': $f_{adv.}(t;\theta)$
            'failure_rate: lambda_': $f_{ben.}(t;\theta)$
            'Epochs: lambda_': No. of Epochs
            'model.trainer.batch_size: lambda_': Batch Size
            def_gen: Defence
            'def_value: lambda_': Defence Strength
            ': lambda_': ''
      plots.yaml:
        cat_plot:
        - file: adv_accuracy_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: linear
          x: def_gen
          xlabels: Defence Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title: Model
        - file: ben_accuracy_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          x: def_gen
          xlabels: Defence Type
          y: accuracy
          ylabels: Ben. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title: Model
        - file: trash_score_vs_defence_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: log
          x: def_gen
          xlabels: Defence Type
          y: c_adv
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title: Model
        - file: trash_score_vs_attack_type.pdf
          hue: model_name
          kind: boxen
          set:
            yscale: log
          x: atk_gen
          xlabels: Attack Type
          y: c_adv
          ylabels: $\bar{C}_{adv.}$
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title: Model
        - file: adv_accuracy_vs_attack_type.pdf
          hue: model_name
          kind: boxen
          x: atk_gen
          xlabels: Attack Type
          y: adv_accuracy
          ylabels: Adv. Accuracy
          rotation: 90
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
          legend_title: Model
        line_plot:
        - file: def_param_vs_accuracy.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Ben. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: accuracy
          y_scale:
          ylabel: Ben. Accuracy
          hue_order:
          - Control
          - Conf
          - Gauss-in
          - Gauss-out
          - FSQ
          errorbar: se
          err_style: bars
        - file: def_param_vs_adv_accuracy.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: Adv. Accuracy vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
          hue_order:
          - Control
          - Conf
          - Gauss-in
          - Gauss-out
          - FSQ
          errorbar: se
          err_style: bars
        - file: def_param_vs_adv_failure_rate.pdf
          hue: def_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
            title: Defence
          title: $f_{adv}$ vs Defence Strength
          x: def_value
          x_scale: linear
          xlabel: Defence Control Parameter
          y: adv_failure_rate
          y_scale: linear
          ylabel: $f_{adv.}$
          hue_order:
          - Control
          - Conf
          - Gauss-in
          - Gauss-out
          - FSQ
          errorbar: se
          err_style: bars
        - file: atk_param_vs_accuracy.pdf
          hue: atk_gen
          legend:
            bbox_to_anchor:
            - 1.05
            - 1
          title: Adv. Accuracy vs Attack Strength
          x: atk_value
          x_scale: linear
          xlabel: Attack Control Parameter
          y: adv_accuracy
          y_scale:
          ylabel: Adv. Accuracy
          hue_order:
          - FGM
          - PGD
          - Deep
          - HSJ
          - Pixel
          - Thresh
          errorbar: se
          err_style: bars
        scatter_plot:
        - x: train_time_per_sample
          y: adv_failure_rate
          hue: model_name
          xlabel: $t_{train}$
          ylabel: $f_{adv}$
          title: $f_{adv}$ vs $t_{train}$
          file: adv_failure_rate_vs_train_time.pdf
          x_scale: log
          legend:
            title: Model Name
            bbox_to_anchor:
            - 1.05
            - 1
          hue_order:
          - ResNet18
          - ResNet34
          - ResNet50
          - ResNet101
          - ResNet152
    outs:
    - path: plots/adv_accuracy_vs_attack_type.pdf
      hash: md5
      md5: d98e39efcf123c924edb8d76afd9d9ad
      size: 36004
    - path: plots/adv_accuracy_vs_defence_type.pdf
      hash: md5
      md5: 0eb6d612c6bc0c7dd9843922b7a85cf5
      size: 32374
    - path: plots/adv_failure_rate_vs_train_time.pdf
      hash: md5
      md5: b4045f90c0849d5f28cd3519872c636e
      size: 211056
    - path: plots/atk_param_vs_accuracy.pdf
      hash: md5
      md5: e27401d8b9ade96e516c954cc5ca916c
      size: 20341
    - path: plots/ben_accuracy_vs_defence_type.pdf
      hash: md5
      md5: 323231eb1f498228dbd22caf2efc4c86
      size: 35108
    - path: plots/def_param_vs_accuracy.pdf
      hash: md5
      md5: 5640f125ea5212ed7018cd2535c20206
      size: 18670
    - path: plots/def_param_vs_adv_accuracy.pdf
      hash: md5
      md5: 64404302bc5acf53d54a6e1ec50a8085
      size: 18499
    - path: plots/def_param_vs_adv_failure_rate.pdf
      hash: md5
      md5: 4a9e2f937c5a0c5fada95d8e5eb0144c
      size: 22357
    - path: plots/trash_score_vs_attack_type.pdf
      hash: md5
      md5: 7c976e25527e965c383d8cbe1379e151
      size: 43833
    - path: plots/trash_score_vs_defence_type.pdf
      hash: md5
      md5: 9043e42e1a1af3b4823197c69e67625b
      size: 39732
  copy_results:
    cmd: mkdir -p ~/ml_afr/plots &&  cp -r plots/* ~/ml_afr/plots/
    deps:
    - path: plots/
      hash: md5
      md5: e533f85afb78e6228b2e11037932a9c5.dir
      size: 1013121
      nfiles: 37
