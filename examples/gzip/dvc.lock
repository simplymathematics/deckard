schema: '2.0'
stages:
  data:
    cmd: python data_prep.py
    deps:
    - path: data_prep.py
      hash: md5
      md5: 18244c921ed2d7cbf25b8362b3ca33aa
      size: 5146
    outs:
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
  parse_params:
    cmd: python -m deckard.layers.parse  --config_file knn
    deps:
    - path: conf/data
      hash: md5
      md5: f3240133a7600eb397104469b96d7852.dir
      size: 991
      nfiles: 5
    - path: conf/files
      hash: md5
      md5: 5ce5a986b24d05c4ccfe58907e0a9158.dir
      size: 490
      nfiles: 1
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: conf/model
      hash: md5
      md5: 32ed7d5847fc277714191e97fd144b3c.dir
      size: 1806
      nfiles: 4
    - path: conf/scorers
      hash: md5
      md5: e3e4a85af427799284ed28f899af4a90.dir
      size: 376
      nfiles: 2
    outs:
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
  train:
    cmd: python -m deckard.layers.experiment train
    deps:
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      params.yaml:
        algorithm: Vanilla
        data:
          alias: kdd_nsl
          drop:
          - id
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            fold: 0
            n_splits: 5
            random_state: 0
            stratify: true
            test_size: 200
            train_size: 1000
          target: label
        dataset: kdd_nsl
        files:
          data_dir: data
          data_file: kdd_nsl-0-1000-200
          data_type: .pkl
          directory: output/kdd_nsl
          model_dir: models
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          data:
            alias: kdd_nsl
            drop:
            - id
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              fold: 0
              n_splits: 5
              random_state: 0
              stratify: true
              test_size: 200
              train_size: 1000
            target: label
          init:
            distance_matrix_test: output/kdd_nsl/distance_matrix/gzip/Vanilla/test-1000-200-00.npz
            distance_matrix_train: output/kdd_nsl/distance_matrix/gzip/Vanilla/train-1000-200-00.npz
            k: 1
            metric: gzip
            modified: false
            name: gzip_classifier.GzipKNN
            symmetric: false
            transform: None
          library: sklearn
        model_name: knn
        scorers:
          accuracy:
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/kdd_nsl/data/kdd_nsl-0-1000-200.pkl/
      hash: md5
      md5: f07bb5e39d2b12e3bfeca145e098f859
      size: 194549
    - path: output/kdd_nsl/reports/train/default/predictions.json
      hash: md5
      md5: 4dd6352d680997655583907b2fb2978c
      size: 3308
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 5b86d6ab26b2cd692e457ecb57e09a95
      size: 479
  grid_search@100-ddos-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=100
      ++algorithm="Vanilla" data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false hydra.sweeper.study_name=knn_ddos_Vanilla hydra.sweep.dir=output/ddos/logs/knn/gzip/Vanilla/100/
      files.directory=output/ddos files.reports=reports/knn/gzip/Vanilla/100/ hydra.launcher.n_jobs=-1
      ++model.init.metric=gzip ~model.init.distance_matrix ++raise_exception=True
      --config-name knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: c93d3280ae0f504515b44552033e6267
      size: 1983
    - path: params.yaml
      hash: md5
      md5: e2e13718a682e140e5d84a544aab7a7f
      size: 1235
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_JOBS,8}
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_JOBS,8}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs//knn/gzip/Vanilla/100/
      hash: md5
      md5: 91657fc426202fe375dfd88bb06622d4.dir
      size: 1000092
      nfiles: 385
    - path: output/ddos/reports//knn/gzip/Vanilla/100/
      hash: md5
      md5: a7d089460e90ba3081b9fba8fc5c55ee.dir
      size: 82299
      nfiles: 72
  grid_search@1000-ddos-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/gzip/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 4fa9398b1ade256b96a015761d0ba7f5
      size: 2922768
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 50a4d817eaf48bcaac308d7b05d823b4.dir
      size: 13234207
      nfiles: 2305
    - path: output/ddos/reports/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 68f67c56bf955b10b88c2a094a6ef4c0.dir
      size: 254644
      nfiles: 95
  grid_search@1000-ddos-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/gzip/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: ad0f54674da2c0ed53f3947d7e66f72e
      size: 2918476
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: 629f6ec1ea4982bc009ef7e827e2ddbd.dir
      size: 11564723
      nfiles: 2305
    - path: output/ddos/reports/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: 7255e3d59093a66c79d6d6edb538f4f9.dir
      size: 256061
      nfiles: 96
  grid_search_precompute@1000-ddos-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 4fa9398b1ade256b96a015761d0ba7f5
      size: 2922768
    - path: output/ddos/logs/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 974760baff000cabad41fdd20ec6e9be.dir
      size: 24607
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 65825aa5579073ab033a6d016f4985cf.dir
      size: 17312
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: ad0f54674da2c0ed53f3947d7e66f72e
      size: 2918476
    - path: output/ddos/logs/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: f79f667122d1d30d4387db5ebe71cfaa.dir
      size: 21606
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: 51c9cfe62999ce193549a9a7ad8215b8.dir
      size: 17303
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 4c0df9cecac1566a1e1a8eecb5d4b048
      size: 1170215
    - path: output/ddos/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: aaf49660eebadf1be99cf3f69a378028
      size: 2897484
    - path: output/ddos/logs/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: 584f5d686d00e202644fdd035845994e.dir
      size: 21832
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: ae10d2580b454a438c779955eac062d4.dir
      size: 17314
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 8d602c84aa4790618b473a24fedd41c3
      size: 1371119
    - path: output/ddos/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: d750a2db8bc42fc202782e3869f2f25b
      size: 3400593
    - path: output/ddos/logs/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: 10fb2d989fc4409bd9e4f9f7e45b918b.dir
      size: 21600
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: b724b06ea9f37e2b8acf8a132c8f00a4.dir
      size: 17309
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: 6d64cc539e71285f3d8f46b74ea6324b.dir
      size: 21800
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: 5f8fa7dedd5625ddb3203e3826c5f5ed.dir
      size: 17303
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: b067692138ac279a1ebe466c00148a37.dir
      size: 21587
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: 9b9d18303b1bdfc7688d0c32071c0ed0.dir
      size: 17302
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: 8e53d209720859404322661996b1e05f.dir
      size: 21810
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: fd7cf0578d9997087466b83571c0bc9e.dir
      size: 17307
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: b80e9a6cae2212066d1233b6efa3f7ac.dir
      size: 21576
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: e5065acd63cdc3905d88cb6853a2ce92.dir
      size: 17300
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2fba7a69395876e7c2c43db3eb29a22
      size: 3143767
    - path: output/ddos/logs/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 1c46594b6e108d304b394c274613b224.dir
      size: 21887
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: de124a1432b181908a36a7b19453d651.dir
      size: 17328
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2c29a1b45cd1f52bba5493b7e237a88
      size: 3148759
    - path: output/ddos/logs/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: eccbbd344227c7cf95d2bc4febea897b.dir
      size: 21674
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: 24e96699f186edbcb7433d8e735f4522.dir
      size: 17328
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 487abf71a0940532a5c24e02e8281d80
      size: 1270664
    - path: output/ddos/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5e9ebdff0710028e10620954b6023aef
      size: 3148735
    - path: output/ddos/logs/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: 051d64371f0390fd69157b7a94eee377.dir
      size: 21884
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: eefcbafdf46685d7be11bdb25c339c3a.dir
      size: 17326
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 3b154b98e933d3bd532dc710f8927f5c
      size: 1460796
    - path: output/ddos/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: af1f730f6966eb52c30bca10b3ffa675
      size: 3622500
    - path: output/ddos/logs/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: ae14607a7ff9e1b4cdfb531b268ff682.dir
      size: 21649
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: c7117406bac6e5f025f2638723ba0dec.dir
      size: 17320
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dac930e8eccab543e7f4a650691154ab
      size: 1664240
    - path: output/ddos/logs/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 071177b70b928862ffa91cc6c962eebe.dir
      size: 22018
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: c0209e7e7a31d9336172d455668acafa.dir
      size: 17367
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 68a56b0669b1a5139f0d437135811734.dir
      size: 21803
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: e8a3a60ac1e60bedf9d9fbe1213023f7.dir
      size: 17358
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: c0d14857875b0b733d4ff42fbb816741.dir
      size: 22028
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: dbf64b21fb21db74d26fbc1aaed3b3a3.dir
      size: 17362
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5ce75f11bc0521c7c7043b998baff55f
      size: 655767
    - path: output/ddos/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: 341cd24088296c8f8c0426fe29dd2ecc.dir
      size: 21794
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: bcd070a46c6d68d36bda7ddb8252152d.dir
      size: 17363
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: output/ddos/logs/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: f739531fbc04ad3173fd55d9b572bf5e.dir
      size: 21851
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 9168b6c16ec3ed80f04650283fdf94b3.dir
      size: 17318
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: output/ddos/logs/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: 1a6cd06800f5c120803fc0c722ca5558.dir
      size: 21638
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: 757c953b2bf570251abb39fdff782fce.dir
      size: 17314
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: output/ddos/logs/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: e297dbac4e67b92a72e3b38bd86e77d2.dir
      size: 21862
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: b61cea7cfe3528bd4f887dab9773e62b.dir
      size: 17317
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: output/ddos/logs/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: 273090acea24fea378cf4aca0ded1d2b.dir
      size: 21626
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: 9505ed050f78742c96ddb06c34cd0855.dir
      size: 17308
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dde06e736d6d94095cf9a2a79163e098
      size: 1662982
    - path: output/ddos/logs/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: e0f8dc6fd6693395fddb502e7d47e6b2.dir
      size: 21902
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: ffa40cb764c270d34627e25d91dbf375.dir
      size: 17330
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: fb5ac869fcd9e6abdbffa72663f41f8b.dir
      size: 21689
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: 7b6a60915d07c05451c9b3382509fdaf.dir
      size: 17331
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: 2b14664b4e25c1b7ecb91f1eb7c38c3c.dir
      size: 21913
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: fc7529b5a225d95600143049c0375d8e.dir
      size: 17330
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 536877e01ba5b19b9f21dbdbeb45e1c3
      size: 2348
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 95d998d5ca67aecf9f3adb517d8bffc2
      size: 671342
    - path: output/ddos/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 10194cda72369cb2534ca9de6f248087.dir
      size: 21678
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 99aa23ea4dc5b5069f04abd41252d137.dir
      size: 17327
      nfiles: 6
  grid_search_precompute@1000-ddos-svc-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/svc/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 4fa9398b1ade256b96a015761d0ba7f5
      size: 2922768
    - path: output/ddos/logs/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 38c28a204e4d95ff69f9fd44e47b8922.dir
      size: 18255
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 23e57288dd85e2753372b09029dbfa17.dir
      size: 8704
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/svc/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: ad0f54674da2c0ed53f3947d7e66f72e
      size: 2918476
    - path: output/ddos/logs/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 741226caaa6465a2038612683d6ba03f.dir
      size: 18254
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 0b3bdeaf4561bf0c088fd3ae7aa375ee.dir
      size: 8703
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 4c0df9cecac1566a1e1a8eecb5d4b048
      size: 1170215
    - path: output/ddos/distance_matrix/svc/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: aaf49660eebadf1be99cf3f69a378028
      size: 2897484
    - path: output/ddos/logs/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: 0786ba38dc8f26803a376b38a6de773c.dir
      size: 18268
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: b45f903c09db2794932e6ab413c55408.dir
      size: 8707
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 8d602c84aa4790618b473a24fedd41c3
      size: 1371119
    - path: output/ddos/distance_matrix/svc/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: d750a2db8bc42fc202782e3869f2f25b
      size: 3400593
    - path: output/ddos/logs/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: 8e2aaf0e1f78a5ad1c1822ba2277b6c0.dir
      size: 18248
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: 4e536f2449372972b065247f595cf61c.dir
      size: 8705
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/svc/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: 43196fdb93f27b53378aaf10c1c7c8f1.dir
      size: 18236
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: fecb137fbbf05ecbbed729e3bbbb6c69.dir
      size: 8703
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/svc/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: b173d7594d3a08b8037469236e2d03dd.dir
      size: 18234
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: 998c2f15313ef3d1200e935e07288e00.dir
      size: 8699
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/svc/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: 43626f3e77976622705957e1d81229e9.dir
      size: 18244
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: 1b64ab2db60fe91a40d6c3c90522af42.dir
      size: 8705
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/svc/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: 82ab60f0eead483d5e8d2a65f55f5072.dir
      size: 18226
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: 70cafc3c4f2aa5eb684a6d5d92915e04.dir
      size: 8701
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/svc/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2fba7a69395876e7c2c43db3eb29a22
      size: 3143767
    - path: output/ddos/logs/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: 019d6bb44ed36a085c29d2526162d24e.dir
      size: 18299
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: 49b526823eaf7e669b602793d5b82128.dir
      size: 8707
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/svc/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2c29a1b45cd1f52bba5493b7e237a88
      size: 3148759
    - path: output/ddos/logs/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: c002e940b5d96d04ca904ef7f343e0f1.dir
      size: 18296
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: 5d2a7bae9b8781e3a41850fc266e9274.dir
      size: 8710
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 487abf71a0940532a5c24e02e8281d80
      size: 1270664
    - path: output/ddos/distance_matrix/svc/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5e9ebdff0710028e10620954b6023aef
      size: 3148735
    - path: output/ddos/logs/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: bbdf6854e2bdfcc3622305a8b287a936.dir
      size: 18311
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: c4ccaab46eaa9b31eff517cb82e27e89.dir
      size: 8714
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 3b154b98e933d3bd532dc710f8927f5c
      size: 1460796
    - path: output/ddos/distance_matrix/svc/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: af1f730f6966eb52c30bca10b3ffa675
      size: 3622500
    - path: output/ddos/logs/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 08433448b9f365385f185582bee5dafa.dir
      size: 18289
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 8bb8fa8112a5a8120ffec228903665eb.dir
      size: 8706
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/svc/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dac930e8eccab543e7f4a650691154ab
      size: 1664240
    - path: output/ddos/logs/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: 387818e69f1e64674f2a3e49c7285812.dir
      size: 18428
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: e7cf0eca6f758c106510417231771dcb.dir
      size: 8733
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/svc/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: 3ef95fbc20c2ed9cb6d8a1a9549fa0aa.dir
      size: 18427
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: 0bd3b4b7975bc84c2678a38d01400d57.dir
      size: 8731
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/svc/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: 447b5efb44d88bc42aabef6e669616ee.dir
      size: 18435
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: 49be06411b020cac41f254191284c544.dir
      size: 8734
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: db4162748faf8d7974e9a8218a584582
      size: 2436
    - path: params.yaml
      hash: md5
      md5: 27aa8450a04d095ba533f9cb10190a3c
      size: 1287
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder:
  grid_search_precompute@1000-ddos-gzip-0-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/0/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-00.npz
      hash: md5
      md5: 553cce4e5334e2d7246f5c4b64f9fc90
      size: 482610
    - path: output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-00.npz
      hash: md5
      md5: f28d61862b1f780d1015a1f612be90ac
      size: 1884103
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/0/gzip/
      hash: md5
      md5: 32374e280d1fc6f7b700263587e4db45.dir
      size: 12655
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/0/gzip/
      hash: md5
      md5: 687b46c1a7b9b52cce06d7179c36f0b9.dir
      size: 5287
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-0-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Assumed/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Assumed/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/0/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Assumed/test-1000-200-00.npz
      hash: md5
      md5: 553cce4e5334e2d7246f5c4b64f9fc90
      size: 482610
    - path: output/ddos/distance_matrix/gzip/Assumed/train-1000-200-00.npz
      hash: md5
      md5: dd10c8f3fe68d04d44d524597b42607d
      size: 1882458
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/0/gzip/
      hash: md5
      md5: 6714732729bc5d475e116b81df02849e.dir
      size: 12656
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/0/gzip/
      hash: md5
      md5: ad48007905375a127ac49447b9989ada.dir
      size: 5289
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-0-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Enforced/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Enforced/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/0/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Enforced/test-1000-200-00.npz
      hash: md5
      md5: 5754925e6455a87abbe3b7eadb053844
      size: 478250
    - path: output/ddos/distance_matrix/gzip/Enforced/train-1000-200-00.npz
      hash: md5
      md5: 07b80acefc3eac0d6c40601d24a11769
      size: 1878814
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/0/gzip/
      hash: md5
      md5: 60f3f161b92901cf8173d813d7ae00eb.dir
      size: 12673
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/0/gzip/
      hash: md5
      md5: 5e5130d1586f2b880f9d6185dc832050.dir
      size: 5289
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-0-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Average/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Average/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/0/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Average/test-1000-200-00.npz
      hash: md5
      md5: f6533d1e6fde0610f1e4cbd19e4c6508
      size: 565184
    - path: output/ddos/distance_matrix/gzip/Average/train-1000-200-00.npz
      hash: md5
      md5: e5854151b85fd2726e0a659b7f8b440d
      size: 2205825
    - path: output/ddos/logs/precomputed/knn/Average/1000/0/gzip/
      hash: md5
      md5: 789ad90a3b0090f0bde61782b5d17311.dir
      size: 12651
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/0/gzip/
      hash: md5
      md5: f8347c69a39b8f7626d5ba07743705cf.dir
      size: 5290
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-1-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/1/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-01.npz
      hash: md5
      md5: 6e01ae2321e8031ff29aea29ba2d5da9
      size: 478950
    - path: output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-01.npz
      hash: md5
      md5: f9c19d2cade23fec667a07e056472f09
      size: 1900794
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/1/gzip/
      hash: md5
      md5: cda0bf99bc6d03b05e6edeba19ff9e55.dir
      size: 12654
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/1/gzip/
      hash: md5
      md5: 69abddaaf6fd2acb40f58de8020fa7ae.dir
      size: 5290
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-1-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Assumed/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Assumed/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/1/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Assumed/test-1000-200-01.npz
      hash: md5
      md5: 6e01ae2321e8031ff29aea29ba2d5da9
      size: 478950
    - path: output/ddos/distance_matrix/gzip/Assumed/train-1000-200-01.npz
      hash: md5
      md5: 5c94526ffa65e813de32c6f5cc144eb2
      size: 1898265
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/1/gzip/
      hash: md5
      md5: cff709e16388d2ec81ba423b7ac9d902.dir
      size: 12654
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/1/gzip/
      hash: md5
      md5: 6858d07d868fced872be5811fd6e8357.dir
      size: 5290
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-1-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Enforced/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Enforced/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/1/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Enforced/test-1000-200-01.npz
      hash: md5
      md5: b323d09959bb408cb3c2ffc7b1ed4a94
      size: 474517
    - path: output/ddos/distance_matrix/gzip/Enforced/train-1000-200-01.npz
      hash: md5
      md5: 218944e1b0269f5ecfb03f4c5f9ef8f9
      size: 1890442
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/1/gzip/
      hash: md5
      md5: 98a42e5124d7622ff0876d5f45473bb3.dir
      size: 12671
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/1/gzip/
      hash: md5
      md5: 98ac0ebece934dedb8574bf1ab96a5a3.dir
      size: 5293
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-1-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Average/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Average/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/1/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Average/test-1000-200-01.npz
      hash: md5
      md5: ed8f97be96585bd8b20c1f4912f1acb5
      size: 558502
    - path: output/ddos/distance_matrix/gzip/Average/train-1000-200-01.npz
      hash: md5
      md5: 42a1c8b50b5d92f646e79a292b368f06
      size: 2223609
    - path: output/ddos/logs/precomputed/knn/Average/1000/1/gzip/
      hash: md5
      md5: 2ecaa59d66bbcddeb705e6910dc7323e.dir
      size: 18395
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/1/gzip/
      hash: md5
      md5: 34621663c638f9285ad38c1856d42802.dir
      size: 5290
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/2/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-02.npz
      hash: md5
      md5: 66f85c867c742f8a9155dd6aa9d660e3
      size: 469147
    - path: output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-02.npz
      hash: md5
      md5: 6f676efb490d700263be0a387e5c438d
      size: 1889540
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/2/gzip/
      hash: md5
      md5: 23e3d87e57c19c34abc55e0e550786a1.dir
      size: 21270
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/2/gzip/
      hash: md5
      md5: 4ac95806fd39bb27bfafa96602497aaf.dir
      size: 5289
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Assumed/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Assumed/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/2/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Assumed/test-1000-200-02.npz
      hash: md5
      md5: 66f85c867c742f8a9155dd6aa9d660e3
      size: 469147
    - path: output/ddos/distance_matrix/gzip/Assumed/train-1000-200-02.npz
      hash: md5
      md5: 85494a325f56f2843e1c741bd8f2d48d
      size: 1889070
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/2/gzip/
      hash: md5
      md5: 807aa787d1d8b543071f9da5e3047a08.dir
      size: 18396
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/2/gzip/
      hash: md5
      md5: 1571fa9f248cd0b953076fd998e8780c.dir
      size: 5288
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Enforced/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Enforced/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/2/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Enforced/test-1000-200-02.npz
      hash: md5
      md5: a2ffdc66477b5bc1ee7dfe53d83d55af
      size: 467824
    - path: output/ddos/distance_matrix/gzip/Enforced/train-1000-200-02.npz
      hash: md5
      md5: e9772f927936fda67d3aa660c624d418
      size: 1880771
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/2/gzip/
      hash: md5
      md5: 645dc2275691ececbe96982bfd921cb5.dir
      size: 18424
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/2/gzip/
      hash: md5
      md5: 89d77d88919abdd59da2e160cd81d51e.dir
      size: 5291
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Average/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Average/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/2/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Average/test-1000-200-02.npz
      hash: md5
      md5: 4085b0de860ce7c086f7a4fbc178a669
      size: 548945
    - path: output/ddos/distance_matrix/gzip/Average/train-1000-200-02.npz
      hash: md5
      md5: ede5bfc78b8eb1d5363b1bbc09e87f49
      size: 2211703
    - path: output/ddos/logs/precomputed/knn/Average/1000/2/gzip/
      hash: md5
      md5: 2bb3ee57ffccd26f33ed3cd496f80a32.dir
      size: 18395
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/2/gzip/
      hash: md5
      md5: 55499406e2d25ee80ef593eead03dba2.dir
      size: 5292
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-3-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/3/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-03.npz
      hash: md5
      md5: fee25e9abaaa2cef0c7de2de34a13276
      size: 484420
    - path: output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-03.npz
      hash: md5
      md5: 420a203e68e555b37d3fca447cac4e6f
      size: 1895413
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/3/gzip/
      hash: md5
      md5: 020606002f82031bbc85799eed7a6d7d.dir
      size: 21269
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/3/gzip/
      hash: md5
      md5: 1e86730787f97021291b76755e266618.dir
      size: 5288
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-3-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Assumed/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Assumed/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/3/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Assumed/test-1000-200-03.npz
      hash: md5
      md5: fee25e9abaaa2cef0c7de2de34a13276
      size: 484420
    - path: output/ddos/distance_matrix/gzip/Assumed/train-1000-200-03.npz
      hash: md5
      md5: e685b1776c6ed152f2dba65b54b539b5
      size: 1892504
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/3/gzip/
      hash: md5
      md5: fa0d57cb7b055728eda0acb2938b7d33.dir
      size: 18396
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/3/gzip/
      hash: md5
      md5: 292e0d9afba51023a5887f4dcf554bda.dir
      size: 5288
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-3-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Enforced/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Enforced/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/3/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Enforced/test-1000-200-03.npz
      hash: md5
      md5: 80664e9e41ac2c68480fb1da9e155eba
      size: 482733
    - path: output/ddos/distance_matrix/gzip/Enforced/train-1000-200-03.npz
      hash: md5
      md5: 302c4ef642abc877ad8e31de519e0f07
      size: 1883204
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/3/gzip/
      hash: md5
      md5: 4eed1bbb60dc6440eaf716610f430738.dir
      size: 18421
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/3/gzip/
      hash: md5
      md5: 5799620b6ff3e6023539bca03d132b11.dir
      size: 5291
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-3-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Average/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Average/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/3/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Average/test-1000-200-03.npz
      hash: md5
      md5: 2f36b066839dbb998fa738c7b1549f5c
      size: 566896
    - path: output/ddos/distance_matrix/gzip/Average/train-1000-200-03.npz
      hash: md5
      md5: 262eed55fd6f9795795ecab4964a82db
      size: 2214604
    - path: output/ddos/logs/precomputed/knn/Average/1000/3/gzip/
      hash: md5
      md5: ffa33d783ce1f76e52cdd1c309774c23.dir
      size: 18391
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/3/gzip/
      hash: md5
      md5: a6afb38593a0c94d66bb1cd61b81390e.dir
      size: 5289
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-4-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/4/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Vanilla/test-1000-200-04.npz
      hash: md5
      md5: ec68a3734d0c2856f12218972cd2467c
      size: 461966
    - path: output/ddos/distance_matrix/gzip/Vanilla/train-1000-200-04.npz
      hash: md5
      md5: 33435dc67d65e3a2568c651145767163
      size: 1891388
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/4/gzip/
      hash: md5
      md5: 274e5a903eb3d84fd28ccb78f62df275.dir
      size: 18394
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/4/gzip/
      hash: md5
      md5: 4c016507052cb296a6c4633db16e9213.dir
      size: 5291
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-4-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Assumed/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Assumed/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/4/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Assumed/test-1000-200-04.npz
      hash: md5
      md5: ec68a3734d0c2856f12218972cd2467c
      size: 461966
    - path: output/ddos/distance_matrix/gzip/Assumed/train-1000-200-04.npz
      hash: md5
      md5: fc246851c24fc175cbd053353e0a1ab8
      size: 1888732
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/4/gzip/
      hash: md5
      md5: 9f6d0cc24747f1f556446f7e8fcd5e28.dir
      size: 18392
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/4/gzip/
      hash: md5
      md5: 196cb828e11bd2a4031177f4af648cca.dir
      size: 5287
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-4-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Enforced/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Enforced/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/4/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Enforced/test-1000-200-04.npz
      hash: md5
      md5: 235373e97466090b259c2fe403cc7192
      size: 461077
    - path: output/ddos/distance_matrix/gzip/Enforced/train-1000-200-04.npz
      hash: md5
      md5: f2486ea57d4cc8f328b50517cfe95898
      size: 1878800
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/4/gzip/
      hash: md5
      md5: 48317e00296012597c488e591c4f3f6f.dir
      size: 18417
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/4/gzip/
      hash: md5
      md5: c9d4eb596adfd11ce2059ef1a8582de3.dir
      size: 5293
      nfiles: 3
  grid_search_precompute@1000-ddos-gzip-4-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=gzip model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/gzip/Average/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/gzip/Average/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/4/gzip/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/gzip/Average/test-1000-200-04.npz
      hash: md5
      md5: 466f34ce07cf2cbe7f9b6ff85e258208
      size: 541127
    - path: output/ddos/distance_matrix/gzip/Average/train-1000-200-04.npz
      hash: md5
      md5: 8f434a12bf5debb4d3d6d53c80a480e1
      size: 2213694
    - path: output/ddos/logs/precomputed/knn/Average/1000/4/gzip/
      hash: md5
      md5: b7485a36f41a5f64791aebb8d5d4ee0a.dir
      size: 18386
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/4/gzip/
      hash: md5
      md5: d6304aebe5031907e43a79e380a77947.dir
      size: 5289
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-0-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/0/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-00.npz
      hash: md5
      md5: f94ba2ab2c3cd3371b97458a7dc032d1
      size: 530970
    - path: output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-00.npz
      hash: md5
      md5: 339663fe717e79a8748a3d450e17d858
      size: 2079305
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/0/bz2/
      hash: md5
      md5: 62d58bc9789ef37767148f153884b1b4.dir
      size: 21232
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/0/bz2/
      hash: md5
      md5: 5bbf8a92982f75a574b9c68e302da794.dir
      size: 5285
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-0-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Assumed/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Assumed/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/0/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Assumed/test-1000-200-00.npz
      hash: md5
      md5: f94ba2ab2c3cd3371b97458a7dc032d1
      size: 530970
    - path: output/ddos/distance_matrix/bz2/Assumed/train-1000-200-00.npz
      hash: md5
      md5: 339663fe717e79a8748a3d450e17d858
      size: 2079305
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/0/bz2/
      hash: md5
      md5: 0b9948866d47b330b8bea5c5b3c4dff6.dir
      size: 18364
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/0/bz2/
      hash: md5
      md5: 324e2b2c7f625be1c5d7e53dd6918c69.dir
      size: 5285
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-0-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Enforced/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Enforced/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/0/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Enforced/test-1000-200-00.npz
      hash: md5
      md5: f94ba2ab2c3cd3371b97458a7dc032d1
      size: 530970
    - path: output/ddos/distance_matrix/bz2/Enforced/train-1000-200-00.npz
      hash: md5
      md5: 3c0f6f1292cccd1be515879ae7d10fef
      size: 2077291
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/0/bz2/
      hash: md5
      md5: 35bf4c273f573f77e932cfe750481e56.dir
      size: 18389
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/0/bz2/
      hash: md5
      md5: 7109c27a6fcb43e84f60cbd167fb069f.dir
      size: 5290
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-0-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Average/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Average/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/0/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Average/test-1000-200-00.npz
      hash: md5
      md5: f94ba2ab2c3cd3371b97458a7dc032d1
      size: 530970
    - path: output/ddos/distance_matrix/bz2/Average/train-1000-200-00.npz
      hash: md5
      md5: 3c0f6f1292cccd1be515879ae7d10fef
      size: 2077291
    - path: output/ddos/logs/precomputed/knn/Average/1000/0/bz2/
      hash: md5
      md5: 29e0883f2cbcedabe9aea3ce71a21818.dir
      size: 18359
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/0/bz2/
      hash: md5
      md5: 9a821a76cda387772534f5519d4292ab.dir
      size: 5283
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-1-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/1/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-01.npz
      hash: md5
      md5: 5be663212d919cf13234167792b0683d
      size: 527678
    - path: output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-01.npz
      hash: md5
      md5: d3263c7f41201ee51253e2125a841b2b
      size: 2110694
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/1/bz2/
      hash: md5
      md5: 27acfbdc247a0abcfad3c71513f5ddec.dir
      size: 18370
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/1/bz2/
      hash: md5
      md5: 7bed40e32b1c62a830414fb9ce4c56ba.dir
      size: 5288
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-1-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Assumed/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Assumed/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/1/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Assumed/test-1000-200-01.npz
      hash: md5
      md5: 5be663212d919cf13234167792b0683d
      size: 527678
    - path: output/ddos/distance_matrix/bz2/Assumed/train-1000-200-01.npz
      hash: md5
      md5: d3263c7f41201ee51253e2125a841b2b
      size: 2110694
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/1/bz2/
      hash: md5
      md5: 4943a5bdcf96feedfbb324e9bb59abec.dir
      size: 18368
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/1/bz2/
      hash: md5
      md5: a0da71ddb958cefdd545dfc6135cc345.dir
      size: 5284
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-1-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Enforced/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Enforced/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/1/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Enforced/test-1000-200-01.npz
      hash: md5
      md5: 5be663212d919cf13234167792b0683d
      size: 527678
    - path: output/ddos/distance_matrix/bz2/Enforced/train-1000-200-01.npz
      hash: md5
      md5: d5001c9089bf1db56c5d591a5fab7a36
      size: 2108493
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/1/bz2/
      hash: md5
      md5: 4e0bac28e8f12d025acbe8ad2b9687af.dir
      size: 18392
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/1/bz2/
      hash: md5
      md5: 89c691b4cfc06301cd1e0766a7bf2dde.dir
      size: 5287
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-1-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Average/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Average/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/1/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Average/test-1000-200-01.npz
      hash: md5
      md5: 5be663212d919cf13234167792b0683d
      size: 527678
    - path: output/ddos/distance_matrix/bz2/Average/train-1000-200-01.npz
      hash: md5
      md5: d5001c9089bf1db56c5d591a5fab7a36
      size: 2108493
    - path: output/ddos/logs/precomputed/knn/Average/1000/1/bz2/
      hash: md5
      md5: 09f0c13a86bf212826c647dd3bb94501.dir
      size: 18363
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/1/bz2/
      hash: md5
      md5: c817f6eaa7467e21642ea2f943a32a87.dir
      size: 5285
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/2/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-02.npz
      hash: md5
      md5: 63c9cdf47f8751841f3fdd1c4527eef0
      size: 521792
    - path: output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-02.npz
      hash: md5
      md5: 8ddee33798efce3f4c75e450e0f9e17d
      size: 2094444
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/2/bz2/
      hash: md5
      md5: 8facfb538ac99da05fb565aaf83c9e7e.dir
      size: 18366
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/2/bz2/
      hash: md5
      md5: 4b7365a871f5e7b2f0d41a0de4109d0e.dir
      size: 5286
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Assumed/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Assumed/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/2/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Assumed/test-1000-200-02.npz
      hash: md5
      md5: 63c9cdf47f8751841f3fdd1c4527eef0
      size: 521792
    - path: output/ddos/distance_matrix/bz2/Assumed/train-1000-200-02.npz
      hash: md5
      md5: 8ddee33798efce3f4c75e450e0f9e17d
      size: 2094444
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/2/bz2/
      hash: md5
      md5: 31231403eeb6b25236577e290cb2eb83.dir
      size: 18364
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/2/bz2/
      hash: md5
      md5: 7120907223a05b39ab0c2c665aeeea0e.dir
      size: 5284
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Enforced/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Enforced/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/2/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Enforced/test-1000-200-02.npz
      hash: md5
      md5: 63c9cdf47f8751841f3fdd1c4527eef0
      size: 521792
    - path: output/ddos/distance_matrix/bz2/Enforced/train-1000-200-02.npz
      hash: md5
      md5: f2b62b453b4aca9912a360aaee0a04dc
      size: 2092745
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/2/bz2/
      hash: md5
      md5: 872558dd87c6f0588ac29f0e7c7478ef.dir
      size: 18388
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/2/bz2/
      hash: md5
      md5: 06763219e8c078fd662f5dc86ddf9da7.dir
      size: 5284
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Average/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Average/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/2/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Average/test-1000-200-02.npz
      hash: md5
      md5: 63c9cdf47f8751841f3fdd1c4527eef0
      size: 521792
    - path: output/ddos/distance_matrix/bz2/Average/train-1000-200-02.npz
      hash: md5
      md5: f2b62b453b4aca9912a360aaee0a04dc
      size: 2092745
    - path: output/ddos/logs/precomputed/knn/Average/1000/2/bz2/
      hash: md5
      md5: 4585fe37cac701ec9d64d457711138c8.dir
      size: 18359
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/2/bz2/
      hash: md5
      md5: 68010968591198c6fe006cced95219a0.dir
      size: 5283
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-3-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/3/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-03.npz
      hash: md5
      md5: a0704babe9145ea099c26d5bb0ca500d
      size: 535232
    - path: output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-03.npz
      hash: md5
      md5: 7cca35e347a13b4d5be97f2f2f898899
      size: 2093333
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/3/bz2/
      hash: md5
      md5: 39181024d461a1d16518529bd1f90643.dir
      size: 18366
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/3/bz2/
      hash: md5
      md5: 4756cb940bf35ae545c2967c7bb974db.dir
      size: 5286
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-3-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Assumed/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Assumed/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/3/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Assumed/test-1000-200-03.npz
      hash: md5
      md5: a0704babe9145ea099c26d5bb0ca500d
      size: 535232
    - path: output/ddos/distance_matrix/bz2/Assumed/train-1000-200-03.npz
      hash: md5
      md5: 7cca35e347a13b4d5be97f2f2f898899
      size: 2093333
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/3/bz2/
      hash: md5
      md5: 5856f9298d786be98587caa9a46355f6.dir
      size: 18364
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/3/bz2/
      hash: md5
      md5: 6f0f83b9065d47b0f07331461e43905b.dir
      size: 5285
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-3-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Enforced/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Enforced/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/3/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Enforced/test-1000-200-03.npz
      hash: md5
      md5: a0704babe9145ea099c26d5bb0ca500d
      size: 535232
    - path: output/ddos/distance_matrix/bz2/Enforced/train-1000-200-03.npz
      hash: md5
      md5: 53086e9f9323b8edb571136bf8164835
      size: 2091330
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/3/bz2/
      hash: md5
      md5: 4614586c880c61167a5b27bbad6cca7f.dir
      size: 18389
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/3/bz2/
      hash: md5
      md5: 8420cb3163687ba15b926733e0973005.dir
      size: 5289
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-3-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Average/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Average/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/3/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Average/test-1000-200-03.npz
      hash: md5
      md5: a0704babe9145ea099c26d5bb0ca500d
      size: 535232
    - path: output/ddos/distance_matrix/bz2/Average/train-1000-200-03.npz
      hash: md5
      md5: 53086e9f9323b8edb571136bf8164835
      size: 2091330
    - path: output/ddos/logs/precomputed/knn/Average/1000/3/bz2/
      hash: md5
      md5: f7feb7bb5f7c5117612899f1f17767a8.dir
      size: 18359
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/3/bz2/
      hash: md5
      md5: c91573d6011f5ea2c533c77fb2954daa.dir
      size: 5282
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-4-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/4/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Vanilla/test-1000-200-04.npz
      hash: md5
      md5: 926ba581dd0d30d9dced2e163086a4e7
      size: 507909
    - path: output/ddos/distance_matrix/bz2/Vanilla/train-1000-200-04.npz
      hash: md5
      md5: c2e3d754faf70997f9d5123334c85927
      size: 2080491
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/4/bz2/
      hash: md5
      md5: a54c37272a9bc85d1a210c2b9a615c60.dir
      size: 18362
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/4/bz2/
      hash: md5
      md5: 0af23594c6bc21dd933a3ad46582a04c.dir
      size: 5287
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-4-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Assumed/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Assumed/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/4/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Assumed/test-1000-200-04.npz
      hash: md5
      md5: 926ba581dd0d30d9dced2e163086a4e7
      size: 507909
    - path: output/ddos/distance_matrix/bz2/Assumed/train-1000-200-04.npz
      hash: md5
      md5: c2e3d754faf70997f9d5123334c85927
      size: 2080491
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/4/bz2/
      hash: md5
      md5: b39cf1d0e2a97f83b1a396ccfe24423e.dir
      size: 18360
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/4/bz2/
      hash: md5
      md5: e737d495b73ed299ce8e633e02b02427.dir
      size: 5288
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-4-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Enforced/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Enforced/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/4/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Enforced/test-1000-200-04.npz
      hash: md5
      md5: 926ba581dd0d30d9dced2e163086a4e7
      size: 507909
    - path: output/ddos/distance_matrix/bz2/Enforced/train-1000-200-04.npz
      hash: md5
      md5: e13e178d09d263ed92c064a044e590ea
      size: 2078390
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/4/bz2/
      hash: md5
      md5: 093588c103b9abe6da10d434d4a1628d.dir
      size: 18385
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/4/bz2/
      hash: md5
      md5: ee350f1e44bda0e15ee4d713fe01fbb5.dir
      size: 5287
      nfiles: 3
  grid_search_precompute@1000-ddos-bz2-4-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=bz2 model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/bz2/Average/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/bz2/Average/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/4/bz2/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/bz2/Average/test-1000-200-04.npz
      hash: md5
      md5: 926ba581dd0d30d9dced2e163086a4e7
      size: 507909
    - path: output/ddos/distance_matrix/bz2/Average/train-1000-200-04.npz
      hash: md5
      md5: e13e178d09d263ed92c064a044e590ea
      size: 2078390
    - path: output/ddos/logs/precomputed/knn/Average/1000/4/bz2/
      hash: md5
      md5: 36d99860b911668626896b467c1c75e3.dir
      size: 18355
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/4/bz2/
      hash: md5
      md5: 12e945ec65bc6a5b65614cec1fa80d55.dir
      size: 5287
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-0-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/0/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-00.npz
      hash: md5
      md5: 3045e373ee60b26af680a8359666b0a6
      size: 519005
    - path: output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-00.npz
      hash: md5
      md5: 12249a2c503b80a18737c3f97615082e
      size: 2026430
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/0/brotli/
      hash: md5
      md5: e33bf867b5dd1dbb853a7295f6d6999f.dir
      size: 18464
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/0/brotli/
      hash: md5
      md5: 259e3ed1d6fa021226d759e8ef45986d.dir
      size: 5296
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-0-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Assumed/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Assumed/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/0/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Assumed/test-1000-200-00.npz
      hash: md5
      md5: 3045e373ee60b26af680a8359666b0a6
      size: 519005
    - path: output/ddos/distance_matrix/brotli/Assumed/train-1000-200-00.npz
      hash: md5
      md5: 12d29b7b4d01e0f7b3d1889270dcd1c6
      size: 2029485
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/0/brotli/
      hash: md5
      md5: 168c8ab2e0571b34fcfbf20af97e9d80.dir
      size: 18465
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/0/brotli/
      hash: md5
      md5: cceb1ce94a59d3eedd48ca40d0fdf27d.dir
      size: 5300
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-0-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Enforced/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Enforced/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/0/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Enforced/test-1000-200-00.npz
      hash: md5
      md5: 05f7c312740db7a2da7ed5ac0b85757c
      size: 519251
    - path: output/ddos/distance_matrix/brotli/Enforced/train-1000-200-00.npz
      hash: md5
      md5: 44ac28f7e6e68022aaee6a7b5819cbb3
      size: 2028714
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/0/brotli/
      hash: md5
      md5: add83e9a1fc278d54b62046c942c8018.dir
      size: 18486
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/0/brotli/
      hash: md5
      md5: 8e65f38e55ad56d7ed5efd84db87b7c0.dir
      size: 5303
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-0-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Average/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Average/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/0/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Average/test-1000-200-00.npz
      hash: md5
      md5: 2c9f72fb26858094eaf374d87be7f8fa
      size: 600091
    - path: output/ddos/distance_matrix/brotli/Average/train-1000-200-00.npz
      hash: md5
      md5: 9084ae46c975db9825205176c7a1edc7
      size: 2345619
    - path: output/ddos/logs/precomputed/knn/Average/1000/0/brotli/
      hash: md5
      md5: 3c8231d4693cb3b4da57f6501ec08860.dir
      size: 18460
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/0/brotli/
      hash: md5
      md5: 2fd97c68fa8024475d384b1eb1ee83ee.dir
      size: 5298
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-1-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/1/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-01.npz
      hash: md5
      md5: 2f0f81573a16b5bea648b1a60e9b2075
      size: 510119
    - path: output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-01.npz
      hash: md5
      md5: c029ef403bbc46058a546bedffc6eb3d
      size: 2041990
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/1/brotli/
      hash: md5
      md5: 9dae583bacee96832f2b5a0fdc2f0888.dir
      size: 18466
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/1/brotli/
      hash: md5
      md5: e8d2c74aae71cbb1d066d6fc771026ee.dir
      size: 5298
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-1-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Assumed/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Assumed/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/1/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Assumed/test-1000-200-01.npz
      hash: md5
      md5: 2f0f81573a16b5bea648b1a60e9b2075
      size: 510119
    - path: output/ddos/distance_matrix/brotli/Assumed/train-1000-200-01.npz
      hash: md5
      md5: b9e8aaee9b722772408c065294679682
      size: 2042641
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/1/brotli/
      hash: md5
      md5: 3831116be0972c0a73392e7a3ef0a21d.dir
      size: 18464
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/1/brotli/
      hash: md5
      md5: cbd6dffe2cb9bcbb8b556b272b812eba.dir
      size: 5295
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-1-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Enforced/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Enforced/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/1/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Enforced/test-1000-200-01.npz
      hash: md5
      md5: eaa485c4056590e18fa7601b24f49ecb
      size: 510597
    - path: output/ddos/distance_matrix/brotli/Enforced/train-1000-200-01.npz
      hash: md5
      md5: 21eeb9d6489b2dad8554e2295910104c
      size: 2042415
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/1/brotli/
      hash: md5
      md5: 7f4e00b7f06de04510338a8a10bba328.dir
      size: 15602
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/1/brotli/
      hash: md5
      md5: d24378d432db54136a950e82a890a7f2.dir
      size: 5295
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-1-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Average/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Average/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/1/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Average/test-1000-200-01.npz
      hash: md5
      md5: af4d80414751b21cb5acc433cbc738e0
      size: 589416
    - path: output/ddos/distance_matrix/brotli/Average/train-1000-200-01.npz
      hash: md5
      md5: 0647462d0d041fb5948edc453fcf268c
      size: 2359332
    - path: output/ddos/logs/precomputed/knn/Average/1000/1/brotli/
      hash: md5
      md5: 38b9890c6947c041697ac543355b7407.dir
      size: 15578
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/1/brotli/
      hash: md5
      md5: 0651650d3a4c391288666ee5753d22ff.dir
      size: 5299
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/2/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-02.npz
      hash: md5
      md5: 22f20996f0f28daf254cea241d5b2f4f
      size: 503800
    - path: output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-02.npz
      hash: md5
      md5: d9c8d671b25d5f99ad2c2fa34d7d8c27
      size: 2033800
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/2/brotli/
      hash: md5
      md5: 24fd1ec710c80ecaccb7c65b9ba931c2.dir
      size: 15580
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/2/brotli/
      hash: md5
      md5: 6a33e9108ae5847ce53980e98d1dadea.dir
      size: 5297
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Assumed/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Assumed/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/2/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Assumed/test-1000-200-02.npz
      hash: md5
      md5: 22f20996f0f28daf254cea241d5b2f4f
      size: 503800
    - path: output/ddos/distance_matrix/brotli/Assumed/train-1000-200-02.npz
      hash: md5
      md5: 2c33849dfe5b48480e6554435be9162f
      size: 2036076
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/2/brotli/
      hash: md5
      md5: b78f2ff7e0ad92e89f1d7db1134daf6f.dir
      size: 15579
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/2/brotli/
      hash: md5
      md5: 317a325640b96d8114e88fee93852f53.dir
      size: 5298
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Enforced/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Enforced/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/2/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Enforced/test-1000-200-02.npz
      hash: md5
      md5: cebd28d822a5a30a780e2ed5b4443890
      size: 503629
    - path: output/ddos/distance_matrix/brotli/Enforced/train-1000-200-02.npz
      hash: md5
      md5: 741a3392c2667f7553eb86eec67e3c81
      size: 2033398
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/2/brotli/
      hash: md5
      md5: 96626272951cb0937ee40f1be573944d.dir
      size: 15601
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/2/brotli/
      hash: md5
      md5: 4466419e507598f209e8238901433743.dir
      size: 5301
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Average/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Average/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/2/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Average/test-1000-200-02.npz
      hash: md5
      md5: 10bfe2d191626dd8fc506d43dd6da95d
      size: 581370
    - path: output/ddos/distance_matrix/brotli/Average/train-1000-200-02.npz
      hash: md5
      md5: 1aaf5ce96dd9bd2138ce20b2c4b62233
      size: 2346813
    - path: output/ddos/logs/precomputed/knn/Average/1000/2/brotli/
      hash: md5
      md5: b83fba56182d3f3ffa6fe80a8d2044d2.dir
      size: 15578
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/2/brotli/
      hash: md5
      md5: 6721b44e0ac4c4d847f6ddccc6ea676e.dir
      size: 5298
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-3-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/3/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-03.npz
      hash: md5
      md5: e5d513b80fc14ce98f4d21e200418c9b
      size: 517895
    - path: output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-03.npz
      hash: md5
      md5: 27a1c75a360e2fe4ce6a7e04ec900f8a
      size: 2026779
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/3/brotli/
      hash: md5
      md5: a2d9af8611bdaad2ff5a8e1c4d9419a6.dir
      size: 15579
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/3/brotli/
      hash: md5
      md5: 944c40145cd3d38ee94fd7319ac4e66c.dir
      size: 5296
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-3-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Assumed/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Assumed/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/3/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Assumed/test-1000-200-03.npz
      hash: md5
      md5: e5d513b80fc14ce98f4d21e200418c9b
      size: 517895
    - path: output/ddos/distance_matrix/brotli/Assumed/train-1000-200-03.npz
      hash: md5
      md5: 79a78d0cc94aaf73daa4ba2b7f4b4ecf
      size: 2029547
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/3/brotli/
      hash: md5
      md5: 3a31c4f7e0b48eca3bffcdbd4e9f7346.dir
      size: 15580
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/3/brotli/
      hash: md5
      md5: 29cca7ddff2ca0a1c23231fba6fbc077.dir
      size: 5298
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-3-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Enforced/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Enforced/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/3/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Enforced/test-1000-200-03.npz
      hash: md5
      md5: 2ebb17bd7a938a790f941bdf5f102b0a
      size: 518649
    - path: output/ddos/distance_matrix/brotli/Enforced/train-1000-200-03.npz
      hash: md5
      md5: 44abf9ea1f4942c4d75255f4aa69a49b
      size: 2027449
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/3/brotli/
      hash: md5
      md5: 5e9658ae3941ba23767a616fc5f4926d.dir
      size: 15603
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/3/brotli/
      hash: md5
      md5: c1f412f809ef8423cd30f964f2a7d7fd.dir
      size: 5302
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-3-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Average/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Average/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/3/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Average/test-1000-200-03.npz
      hash: md5
      md5: 1bea42fceb5ace9d0a088fd101d0fc20
      size: 600740
    - path: output/ddos/distance_matrix/brotli/Average/train-1000-200-03.npz
      hash: md5
      md5: e1205182246cd1ee6df0f530b7d4d61d
      size: 2346925
    - path: output/ddos/logs/precomputed/knn/Average/1000/3/brotli/
      hash: md5
      md5: 8c1ce3f884e5f94fedecc5d1cf7accff.dir
      size: 15578
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/3/brotli/
      hash: md5
      md5: f2fe1333b708bc5747d4b5167a888366.dir
      size: 5297
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-4-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/4/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Vanilla/test-1000-200-04.npz
      hash: md5
      md5: 91af038b6b3b0d7f4a35d7025d434967
      size: 495661
    - path: output/ddos/distance_matrix/brotli/Vanilla/train-1000-200-04.npz
      hash: md5
      md5: 3294086116cf2c64eb5ba6e0b65dba05
      size: 2018924
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/4/brotli/
      hash: md5
      md5: 59463857851226e0c6bd9c03a638717a.dir
      size: 15577
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/4/brotli/
      hash: md5
      md5: d3e85c3ccd225b5b896e2df295377f40.dir
      size: 5301
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-4-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Assumed/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Assumed/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/4/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Assumed/test-1000-200-04.npz
      hash: md5
      md5: 91af038b6b3b0d7f4a35d7025d434967
      size: 495661
    - path: output/ddos/distance_matrix/brotli/Assumed/train-1000-200-04.npz
      hash: md5
      md5: 154f4b6ab2bf1005227444363f5ef0ce
      size: 2022505
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/4/brotli/
      hash: md5
      md5: b9990a29ff64a85fe3528b843c7a8067.dir
      size: 15577
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/4/brotli/
      hash: md5
      md5: 871cc4d869293fde64d9bfbcc1eba2fc.dir
      size: 5299
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-4-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Enforced/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Enforced/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/4/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Enforced/test-1000-200-04.npz
      hash: md5
      md5: f7aec532a87283f724a2e7f62fa25dbb
      size: 497066
    - path: output/ddos/distance_matrix/brotli/Enforced/train-1000-200-04.npz
      hash: md5
      md5: 374168487d91a0dad62cd3769ffa5df6
      size: 2018145
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/4/brotli/
      hash: md5
      md5: d91a7ebe921e450252486e49eeb3e523.dir
      size: 15603
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/4/brotli/
      hash: md5
      md5: ab0eb0b20298b72a7414b19f9d7e08ea.dir
      size: 5298
      nfiles: 3
  grid_search_precompute@1000-ddos-brotli-4-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=brotli model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/brotli/Average/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/brotli/Average/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/4/brotli/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/brotli/Average/test-1000-200-04.npz
      hash: md5
      md5: 2e53dd30321c7bbad855d2b05e21d043
      size: 574718
    - path: output/ddos/distance_matrix/brotli/Average/train-1000-200-04.npz
      hash: md5
      md5: c1dd1c43312b0e257cd1de74eabc5fc3
      size: 2337711
    - path: output/ddos/logs/precomputed/knn/Average/1000/4/brotli/
      hash: md5
      md5: d5978db8bc010f31ada9032a908d68b2.dir
      size: 15577
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/4/brotli/
      hash: md5
      md5: 35fdf11cb5900552ad8ebd3fed106789.dir
      size: 5297
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-0-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/0/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-00.npz
      hash: md5
      md5: 583795af4a870c8e430a162611590fd7
      size: 268541
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-00.npz
      hash: md5
      md5: f61ce6720a928a17242c82fa10a0fded
      size: 1066379
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/0/levenshtein/
      hash: md5
      md5: d82e7632aaecff8379a23ff5ed20aa89.dir
      size: 26117
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/0/levenshtein/
      hash: md5
      md5: 4178d973b8836a4cb95da7dbfa7b2e85.dir
      size: 5317
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-0-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/0/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-00.npz
      hash: md5
      md5: 583795af4a870c8e430a162611590fd7
      size: 268541
    - path: output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-00.npz
      hash: md5
      md5: 0269cb94654ec7101b70a226c5060143
      size: 1046542
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/0/levenshtein/
      hash: md5
      md5: 9e2dcd55522c04e74155e6c9a7ca308e.dir
      size: 15714
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/0/levenshtein/
      hash: md5
      md5: 6877c0cdbc48aeaf0f05cd4c390351e5.dir
      size: 5314
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-0-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/0/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-00.npz
      hash: md5
      md5: 583795af4a870c8e430a162611590fd7
      size: 268541
    - path: output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-00.npz
      hash: md5
      md5: 0269cb94654ec7101b70a226c5060143
      size: 1046542
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/0/levenshtein/
      hash: md5
      md5: bd828a8ddf7b3f0a976750169234e6df.dir
      size: 15735
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/0/levenshtein/
      hash: md5
      md5: cfac10f55acab32170a1e2b67de4303e.dir
      size: 5320
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-0-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Average/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Average/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/0/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Average/test-1000-200-00.npz
      hash: md5
      md5: 05866232ab2ad5929e7c1679e9df5353
      size: 263738
    - path: output/ddos/distance_matrix/levenshtein/Average/train-1000-200-00.npz
      hash: md5
      md5: 0269cb94654ec7101b70a226c5060143
      size: 1046542
    - path: output/ddos/logs/precomputed/knn/Average/1000/0/levenshtein/
      hash: md5
      md5: fd09cb85f06393daba091963b57e3f27.dir
      size: 15708
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/0/levenshtein/
      hash: md5
      md5: 7456f98479af97b400afc0c669bba43c.dir
      size: 5316
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-1-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/1/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-01.npz
      hash: md5
      md5: ce105f58f3b549f12ea1274ac1b7bd86
      size: 266633
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-01.npz
      hash: md5
      md5: 36a74610797963a1a6703bfdca486af7
      size: 1066312
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/1/levenshtein/
      hash: md5
      md5: b7f3ce82a3882ca7b7c3ada23c14a5a5.dir
      size: 15718
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/1/levenshtein/
      hash: md5
      md5: 722230979994fb9b0e93369c7a01bf37.dir
      size: 5319
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-1-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/1/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-01.npz
      hash: md5
      md5: ce105f58f3b549f12ea1274ac1b7bd86
      size: 266633
    - path: output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-01.npz
      hash: md5
      md5: f36e741c38bb753f67836bd32f220565
      size: 1046135
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/1/levenshtein/
      hash: md5
      md5: ffe794e0c52c025980dd2048f94c4806.dir
      size: 15716
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/1/levenshtein/
      hash: md5
      md5: 6bb54c890b140893feca88baecbbe488.dir
      size: 5312
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-1-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/1/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-01.npz
      hash: md5
      md5: ce105f58f3b549f12ea1274ac1b7bd86
      size: 266633
    - path: output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-01.npz
      hash: md5
      md5: f36e741c38bb753f67836bd32f220565
      size: 1046135
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/1/levenshtein/
      hash: md5
      md5: b153cf4e22436117e2f97d7882b5681e.dir
      size: 15738
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/1/levenshtein/
      hash: md5
      md5: b4465b854a151fe7dc3b1a730b3c13b7.dir
      size: 5322
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-1-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Average/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Average/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/1/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Average/test-1000-200-01.npz
      hash: md5
      md5: 7bb6e2966a04c0ce5920e00fc498be86
      size: 261800
    - path: output/ddos/distance_matrix/levenshtein/Average/train-1000-200-01.npz
      hash: md5
      md5: f36e741c38bb753f67836bd32f220565
      size: 1046135
    - path: output/ddos/logs/precomputed/knn/Average/1000/1/levenshtein/
      hash: md5
      md5: 213e2cf2faed04c98e6954de7bd9a896.dir
      size: 15712
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/1/levenshtein/
      hash: md5
      md5: 7561e6060681528c5d834e8b631cd311.dir
      size: 5317
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/2/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-02.npz
      hash: md5
      md5: c34beb732517bebc5bfd84ea68b2f41c
      size: 265179
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-02.npz
      hash: md5
      md5: 9bda9f612bd42ae55887effccb9d40c6
      size: 1065890
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/2/levenshtein/
      hash: md5
      md5: 4d2f0cf9879a2dc7c8b59837cbf8ed36.dir
      size: 26125
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/2/levenshtein/
      hash: md5
      md5: 55749c08d09c0c2724bbd868aa2da96a.dir
      size: 5319
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/2/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-02.npz
      hash: md5
      md5: c34beb732517bebc5bfd84ea68b2f41c
      size: 265179
    - path: output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-02.npz
      hash: md5
      md5: e9712130a909cf8471343ec6bcec262e
      size: 1047554
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/2/levenshtein/
      hash: md5
      md5: 673dd8a4c20b78d03d1b1c079e21d776.dir
      size: 15717
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/2/levenshtein/
      hash: md5
      md5: df76fc8353a378f46d7f6c8dd08c3803.dir
      size: 5316
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/2/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-02.npz
      hash: md5
      md5: c34beb732517bebc5bfd84ea68b2f41c
      size: 265179
    - path: output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-02.npz
      hash: md5
      md5: e9712130a909cf8471343ec6bcec262e
      size: 1047554
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/2/levenshtein/
      hash: md5
      md5: 755be1464f976b1f8f172df57f6878b5.dir
      size: 15738
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/2/levenshtein/
      hash: md5
      md5: 9c4e02aaefa0786d2cc7044d886c0124.dir
      size: 5319
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Average/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Average/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/2/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Average/test-1000-200-02.npz
      hash: md5
      md5: 3c7a75981737d121e38069056925bb9b
      size: 260528
    - path: output/ddos/distance_matrix/levenshtein/Average/train-1000-200-02.npz
      hash: md5
      md5: e9712130a909cf8471343ec6bcec262e
      size: 1047554
    - path: output/ddos/logs/precomputed/knn/Average/1000/2/levenshtein/
      hash: md5
      md5: 2470bff6edd5425b734104b63ad95fc1.dir
      size: 15712
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/2/levenshtein/
      hash: md5
      md5: 8ada11cf0bfc933c1e9adf0e6d67067a.dir
      size: 5317
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-3-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/3/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-03.npz
      hash: md5
      md5: ac476c565adf2c59c2f2b4b3e06a096b
      size: 269121
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-03.npz
      hash: md5
      md5: 2a4e50c3350838be1b8dd5b61c6cc222
      size: 1066289
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/3/levenshtein/
      hash: md5
      md5: 70bdeda8794c0bf0a3530307808b0ed9.dir
      size: 33507
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/3/levenshtein/
      hash: md5
      md5: c08afe0c63ec11d354199b1487e788e2.dir
      size: 5310
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-3-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/3/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-03.npz
      hash: md5
      md5: ac476c565adf2c59c2f2b4b3e06a096b
      size: 269121
    - path: output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-03.npz
      hash: md5
      md5: 321855a20c1754437d285b7bd39ddd63
      size: 1047164
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/3/levenshtein/
      hash: md5
      md5: bac01ce53af0b5867d040244834b3867.dir
      size: 15714
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/3/levenshtein/
      hash: md5
      md5: 905d5ff9e201d6a8cfaebf3190f18cd9.dir
      size: 5318
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-3-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/3/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-03.npz
      hash: md5
      md5: ac476c565adf2c59c2f2b4b3e06a096b
      size: 269121
    - path: output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-03.npz
      hash: md5
      md5: 321855a20c1754437d285b7bd39ddd63
      size: 1047164
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/3/levenshtein/
      hash: md5
      md5: b01650b0b5e8af187c82a3b311d54a2e.dir
      size: 15735
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/3/levenshtein/
      hash: md5
      md5: e6646733fb1a56bdfa15834b43cd3c18.dir
      size: 5321
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-3-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Average/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Average/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/3/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Average/test-1000-200-03.npz
      hash: md5
      md5: 8657019f239bc20af91c8ad3c03d381d
      size: 264305
    - path: output/ddos/distance_matrix/levenshtein/Average/train-1000-200-03.npz
      hash: md5
      md5: 321855a20c1754437d285b7bd39ddd63
      size: 1047164
    - path: output/ddos/logs/precomputed/knn/Average/1000/3/levenshtein/
      hash: md5
      md5: 060388a9b96c6ee07ed94779b5c64a31.dir
      size: 15709
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/3/levenshtein/
      hash: md5
      md5: 9f399f795539f8710b862c19c1f3441a.dir
      size: 5318
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-4-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/4/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/test-1000-200-04.npz
      hash: md5
      md5: 136caf716ed9bca89117dfb378db0bc6
      size: 264386
    - path: output/ddos/distance_matrix/levenshtein/Vanilla/train-1000-200-04.npz
      hash: md5
      md5: 52388cd2ad8086ea0c2c01cbf8ffa4b8
      size: 1067652
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/4/levenshtein/
      hash: md5
      md5: 6b97cf00a582cc5e0b9f398d1ed0db40.dir
      size: 15711
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/4/levenshtein/
      hash: md5
      md5: 05a88624527bcb9c4d266ade6d054caa.dir
      size: 5317
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-4-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/4/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Assumed/test-1000-200-04.npz
      hash: md5
      md5: 136caf716ed9bca89117dfb378db0bc6
      size: 264386
    - path: output/ddos/distance_matrix/levenshtein/Assumed/train-1000-200-04.npz
      hash: md5
      md5: 42b8aa37574498f30ad75e6679c83d2b
      size: 1048411
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/4/levenshtein/
      hash: md5
      md5: c8852af3e3b7f20586c5216b6232ea24.dir
      size: 15710
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/4/levenshtein/
      hash: md5
      md5: fef86f108e81bd9bc0a93d30257e1559.dir
      size: 5318
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-4-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/4/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Enforced/test-1000-200-04.npz
      hash: md5
      md5: 136caf716ed9bca89117dfb378db0bc6
      size: 264386
    - path: output/ddos/distance_matrix/levenshtein/Enforced/train-1000-200-04.npz
      hash: md5
      md5: 42b8aa37574498f30ad75e6679c83d2b
      size: 1048411
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/4/levenshtein/
      hash: md5
      md5: 291b8d8dded0b614d2f9db4e76481aca.dir
      size: 15732
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/4/levenshtein/
      hash: md5
      md5: 42cdfaa0000e597fefde93ae22db9de5.dir
      size: 5322
      nfiles: 3
  grid_search_precompute@1000-ddos-levenshtein-4-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=levenshtein model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/levenshtein/Average/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/levenshtein/Average/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/4/levenshtein/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/levenshtein/Average/test-1000-200-04.npz
      hash: md5
      md5: b1bc2b0cebc6bb3f647838fef56ef275
      size: 259537
    - path: output/ddos/distance_matrix/levenshtein/Average/train-1000-200-04.npz
      hash: md5
      md5: 42b8aa37574498f30ad75e6679c83d2b
      size: 1048411
    - path: output/ddos/logs/precomputed/knn/Average/1000/4/levenshtein/
      hash: md5
      md5: a61ef26e12c5b8a55153055d35eb6927.dir
      size: 15706
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/4/levenshtein/
      hash: md5
      md5: 82841f4e1798ea32413cf97eb5520c4a.dir
      size: 5320
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-0-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/0/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-00.npz
      hash: md5
      md5: 8ad646f4231b469483adffd4763244f0
      size: 989804
    - path: output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-00.npz
      hash: md5
      md5: bbb78cde88f8994ab084e64f388f00cf
      size: 3954278
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/0/ratio/
      hash: md5
      md5: b246744a94a3ecfa9d916994607c57cc.dir
      size: 15555
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/0/ratio/
      hash: md5
      md5: ca9fb741ee3e14ea72b15dc9dd267922.dir
      size: 5293
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-0-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Assumed/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Assumed/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/0/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Assumed/test-1000-200-00.npz
      hash: md5
      md5: 8ad646f4231b469483adffd4763244f0
      size: 989804
    - path: output/ddos/distance_matrix/ratio/Assumed/train-1000-200-00.npz
      hash: md5
      md5: bbb78cde88f8994ab084e64f388f00cf
      size: 3954278
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/0/ratio/
      hash: md5
      md5: f61e505bba7b72a965bd6ef07a6df396.dir
      size: 15555
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/0/ratio/
      hash: md5
      md5: 51ebd2677581eefac585fbcfd96cc7ba.dir
      size: 5292
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-0-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Enforced/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Enforced/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/0/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Enforced/test-1000-200-00.npz
      hash: md5
      md5: 8ad646f4231b469483adffd4763244f0
      size: 989804
    - path: output/ddos/distance_matrix/ratio/Enforced/train-1000-200-00.npz
      hash: md5
      md5: add58151680784f5f1443cfa85f3c8d5
      size: 3954343
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/0/ratio/
      hash: md5
      md5: 25fc9a2c85427c4798ccddb20bc39cbd.dir
      size: 15576
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/0/ratio/
      hash: md5
      md5: 4e74d77d4874f1ddabc29b702fc63df7.dir
      size: 5293
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-0-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Average/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Average/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/0/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Average/test-1000-200-00.npz
      hash: md5
      md5: 8ad646f4231b469483adffd4763244f0
      size: 989804
    - path: output/ddos/distance_matrix/ratio/Average/train-1000-200-00.npz
      hash: md5
      md5: add58151680784f5f1443cfa85f3c8d5
      size: 3954343
    - path: output/ddos/logs/precomputed/knn/Average/1000/0/ratio/
      hash: md5
      md5: 997d2397b19b1200feb524b40c027714.dir
      size: 15550
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/0/ratio/
      hash: md5
      md5: 1f19f0feaac6cbd327d56be9309f2470.dir
      size: 5291
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-1-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/1/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-01.npz
      hash: md5
      md5: dfbe3e9472946994e46ada4892fe85dc
      size: 993548
    - path: output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-01.npz
      hash: md5
      md5: c3792a131d3d4722947d597bf3447959
      size: 3951527
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/1/ratio/
      hash: md5
      md5: 2a6d4bdf71397baa1875de7ccc378c20.dir
      size: 15553
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/1/ratio/
      hash: md5
      md5: 3957b7df8cb4c88e3158bedba692c9ea.dir
      size: 5293
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-1-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Assumed/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Assumed/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/1/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Assumed/test-1000-200-01.npz
      hash: md5
      md5: dfbe3e9472946994e46ada4892fe85dc
      size: 993548
    - path: output/ddos/distance_matrix/ratio/Assumed/train-1000-200-01.npz
      hash: md5
      md5: c3792a131d3d4722947d597bf3447959
      size: 3951527
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/1/ratio/
      hash: md5
      md5: 9db15c182f902314ba0a269a1a125e79.dir
      size: 15552
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/1/ratio/
      hash: md5
      md5: 28b53416880f452ccbfdac5027568610.dir
      size: 5291
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-1-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Enforced/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Enforced/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/1/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Enforced/test-1000-200-01.npz
      hash: md5
      md5: dfbe3e9472946994e46ada4892fe85dc
      size: 993548
    - path: output/ddos/distance_matrix/ratio/Enforced/train-1000-200-01.npz
      hash: md5
      md5: ba72473497fdab0802eeae28fe744a96
      size: 3951581
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/1/ratio/
      hash: md5
      md5: 63f94a567ecace33f71eb435c19d9a5c.dir
      size: 15572
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/1/ratio/
      hash: md5
      md5: 308c7526d7a1c4b936f65ee3ab09fb82.dir
      size: 5294
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-1-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Average/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Average/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/1/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Average/test-1000-200-01.npz
      hash: md5
      md5: dfbe3e9472946994e46ada4892fe85dc
      size: 993548
    - path: output/ddos/distance_matrix/ratio/Average/train-1000-200-01.npz
      hash: md5
      md5: ba72473497fdab0802eeae28fe744a96
      size: 3951581
    - path: output/ddos/logs/precomputed/knn/Average/1000/1/ratio/
      hash: md5
      md5: 66010614a2f0014dfcf9df8be74fb5dd.dir
      size: 15547
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/1/ratio/
      hash: md5
      md5: 56388a1a745ce04daa2bb8db1949f602.dir
      size: 5292
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/2/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-02.npz
      hash: md5
      md5: 2de3a5df3d88b4dae6b2bf130daa2afa
      size: 986686
    - path: output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-02.npz
      hash: md5
      md5: f8591ff1b4d2106e74b44324af522829
      size: 17319
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/2/ratio/
      hash: md5
      md5: a19aa8204581c68d5b5517277f445cb3.dir
      size: 18434
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/2/ratio/
      hash: md5
      md5: 67e4e8fd6208e33a8448f8657d483656.dir
      size: 5297
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Assumed/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Assumed/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/2/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Assumed/test-1000-200-02.npz
      hash: md5
      md5: 2de3a5df3d88b4dae6b2bf130daa2afa
      size: 986686
    - path: output/ddos/distance_matrix/ratio/Assumed/train-1000-200-02.npz
      hash: md5
      md5: 6d18c16be4c3a1c68342e04b8672ffaa
      size: 3933227
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/2/ratio/
      hash: md5
      md5: a9eed0a3895d34b276a80d09cf3337ba.dir
      size: 15555
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/2/ratio/
      hash: md5
      md5: 1c0fffb54f415977f2e7ac1fd952653f.dir
      size: 5294
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Enforced/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Enforced/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/2/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Enforced/test-1000-200-02.npz
      hash: md5
      md5: 2de3a5df3d88b4dae6b2bf130daa2afa
      size: 986686
    - path: output/ddos/distance_matrix/ratio/Enforced/train-1000-200-02.npz
      hash: md5
      md5: 57174415e45f3588edfffa4009ebbf26
      size: 3933285
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/2/ratio/
      hash: md5
      md5: d946b0d5f6e04cc914c58c3844570ed3.dir
      size: 15576
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/2/ratio/
      hash: md5
      md5: 3d04587d8856a7b753d5ac598b46cbbf.dir
      size: 5296
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Average/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Average/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/2/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Average/test-1000-200-02.npz
      hash: md5
      md5: 2de3a5df3d88b4dae6b2bf130daa2afa
      size: 986686
    - path: output/ddos/distance_matrix/ratio/Average/train-1000-200-02.npz
      hash: md5
      md5: 57174415e45f3588edfffa4009ebbf26
      size: 3933285
    - path: output/ddos/logs/precomputed/knn/Average/1000/2/ratio/
      hash: md5
      md5: 8763a2d5a42563c1a780a2cacefea4ab.dir
      size: 15550
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/2/ratio/
      hash: md5
      md5: d0daf596db0cc6e7df596cd19018acaa.dir
      size: 5291
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-3-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/3/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-03.npz
      hash: md5
      md5: 35ea9ef3bee7a5c11fd3855cbb4075db
      size: 989717
    - path: output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-03.npz
      hash: md5
      md5: 89efd6bfb681bcb48db7ef27383a475e
      size: 3942516
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/3/ratio/
      hash: md5
      md5: 7a490f87e97218d0b54ae993378d0360.dir
      size: 15556
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/3/ratio/
      hash: md5
      md5: 9de2bba510f3d4112924624499f46570.dir
      size: 5295
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-3-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Assumed/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Assumed/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/3/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Assumed/test-1000-200-03.npz
      hash: md5
      md5: 35ea9ef3bee7a5c11fd3855cbb4075db
      size: 989717
    - path: output/ddos/distance_matrix/ratio/Assumed/train-1000-200-03.npz
      hash: md5
      md5: 89efd6bfb681bcb48db7ef27383a475e
      size: 3942516
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/3/ratio/
      hash: md5
      md5: 4d44cb97dd74886e4e81a95f4f68379a.dir
      size: 15554
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/3/ratio/
      hash: md5
      md5: d73c39bb8580234a4fff2fe5ec3e821a.dir
      size: 5290
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-3-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Enforced/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Enforced/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/3/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Enforced/test-1000-200-03.npz
      hash: md5
      md5: 35ea9ef3bee7a5c11fd3855cbb4075db
      size: 989717
    - path: output/ddos/distance_matrix/ratio/Enforced/train-1000-200-03.npz
      hash: md5
      md5: a2b96e6750c5ec5accdf61abf19ee923
      size: 3942588
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/3/ratio/
      hash: md5
      md5: 67f264fac8a88cb7658e3dc08e16815e.dir
      size: 15576
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/3/ratio/
      hash: md5
      md5: 9a90699c51ad5f71246b741822986f90.dir
      size: 5299
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-3-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Average/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Average/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/3/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Average/test-1000-200-03.npz
      hash: md5
      md5: 35ea9ef3bee7a5c11fd3855cbb4075db
      size: 989717
    - path: output/ddos/distance_matrix/ratio/Average/train-1000-200-03.npz
      hash: md5
      md5: a2b96e6750c5ec5accdf61abf19ee923
      size: 3942588
    - path: output/ddos/logs/precomputed/knn/Average/1000/3/ratio/
      hash: md5
      md5: 3e9ea5e5e7d2891df4c4fc86de0ab05c.dir
      size: 15550
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/3/ratio/
      hash: md5
      md5: d4bf99153da62bb89fe4bb569ddafe8e.dir
      size: 5296
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-4-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/4/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Vanilla/test-1000-200-04.npz
      hash: md5
      md5: 85e3d7ea578643289d5e4c541ade36fd
      size: 987777
    - path: output/ddos/distance_matrix/ratio/Vanilla/train-1000-200-04.npz
      hash: md5
      md5: ec804685ad5443601db2abaad60edbe6
      size: 3927500
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/4/ratio/
      hash: md5
      md5: 522ea46292e9f465f230810768fe68f4.dir
      size: 15556
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/4/ratio/
      hash: md5
      md5: 682753a1651e654a5a6c5f2c9f0a798b.dir
      size: 5295
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-4-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Assumed/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Assumed/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/4/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Assumed/test-1000-200-04.npz
      hash: md5
      md5: 85e3d7ea578643289d5e4c541ade36fd
      size: 987777
    - path: output/ddos/distance_matrix/ratio/Assumed/train-1000-200-04.npz
      hash: md5
      md5: ec804685ad5443601db2abaad60edbe6
      size: 3927500
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/4/ratio/
      hash: md5
      md5: 59f174f332027843d136242e6c1e0cd9.dir
      size: 15554
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/4/ratio/
      hash: md5
      md5: 6ea600663b224964be3a37104ac830e4.dir
      size: 5293
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-4-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Enforced/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Enforced/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/4/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Enforced/test-1000-200-04.npz
      hash: md5
      md5: 85e3d7ea578643289d5e4c541ade36fd
      size: 987777
    - path: output/ddos/distance_matrix/ratio/Enforced/train-1000-200-04.npz
      hash: md5
      md5: af4f0c9a12a83e520c788e6d35dace55
      size: 3927564
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/4/ratio/
      hash: md5
      md5: ff682aba93d93d3624101d5e1ab84704.dir
      size: 15575
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/4/ratio/
      hash: md5
      md5: 1f48e7d96bd929e3297706beb644d097.dir
      size: 5294
      nfiles: 3
  grid_search_precompute@1000-ddos-ratio-4-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=ratio model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/ratio/Average/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/ratio/Average/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/4/ratio/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/ratio/Average/test-1000-200-04.npz
      hash: md5
      md5: 85e3d7ea578643289d5e4c541ade36fd
      size: 987777
    - path: output/ddos/distance_matrix/ratio/Average/train-1000-200-04.npz
      hash: md5
      md5: af4f0c9a12a83e520c788e6d35dace55
      size: 3927564
    - path: output/ddos/logs/precomputed/knn/Average/1000/4/ratio/
      hash: md5
      md5: dd99f9254f34c75d74fa22036595e10b.dir
      size: 15548
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/4/ratio/
      hash: md5
      md5: b1b64b050e5807e8d51c912f1c8cde19.dir
      size: 5292
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-0-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/0/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-00.npz
      hash: md5
      md5: e7bc3210c6411523c76e4c9a0c50a49c
      size: 268298
    - path: output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-00.npz
      hash: md5
      md5: 47a2ebe44b8c60d34daa6afadc0be973
      size: 1064217
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/0/hamming/
      hash: md5
      md5: f0aa78a12df193f8a1a1f31df27cf192.dir
      size: 15610
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/0/hamming/
      hash: md5
      md5: bd85d02060c8b6c7d49a60881c30f5bd.dir
      size: 5302
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-0-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Assumed/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Assumed/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/0/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Assumed/test-1000-200-00.npz
      hash: md5
      md5: e7bc3210c6411523c76e4c9a0c50a49c
      size: 268298
    - path: output/ddos/distance_matrix/hamming/Assumed/train-1000-200-00.npz
      hash: md5
      md5: 1bf7334780bc693ef06a3c7b0d7d32b6
      size: 1072571
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/0/hamming/
      hash: md5
      md5: f5ac3b696ba6d3aba4c777a7b4ccbdca.dir
      size: 15609
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/0/hamming/
      hash: md5
      md5: c0786f478bf7b9f406fb36f381d51454.dir
      size: 5297
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-0-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Enforced/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Enforced/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/0/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Enforced/test-1000-200-00.npz
      hash: md5
      md5: e7bc3210c6411523c76e4c9a0c50a49c
      size: 268298
    - path: output/ddos/distance_matrix/hamming/Enforced/train-1000-200-00.npz
      hash: md5
      md5: 1bf7334780bc693ef06a3c7b0d7d32b6
      size: 1072571
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/0/hamming/
      hash: md5
      md5: bae352235ac8d1fee058c65a71d72a6e.dir
      size: 15630
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/0/hamming/
      hash: md5
      md5: 856788808ce4067466745cb6ad0c9e0a.dir
      size: 5302
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-0-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=0
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Average/train-1000-200-00.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Average/test-1000-200-00.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/0/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Average/test-1000-200-00.npz
      hash: md5
      md5: 5bbd66824fba18e6bca87404f3e24208
      size: 269940
    - path: output/ddos/distance_matrix/hamming/Average/train-1000-200-00.npz
      hash: md5
      md5: 1bf7334780bc693ef06a3c7b0d7d32b6
      size: 1072571
    - path: output/ddos/logs/precomputed/knn/Average/1000/0/hamming/
      hash: md5
      md5: 9b516a620def3a1222a20f5d6aa5a05d.dir
      size: 15603
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/0/hamming/
      hash: md5
      md5: 1be41523c0f17074107200cf77aed30d.dir
      size: 5299
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-1-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/1/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-01.npz
      hash: md5
      md5: 3e0006bc86234b8a5fd7df164bf36208
      size: 266713
    - path: output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-01.npz
      hash: md5
      md5: ffa29e4726d2e1b7b536575af93eef69
      size: 1065097
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/1/hamming/
      hash: md5
      md5: 3d89e5f0610400565ddf794195c677da.dir
      size: 26054
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/1/hamming/
      hash: md5
      md5: c182a33d76983454ccaac5f6d7694dc2.dir
      size: 5300
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-1-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Assumed/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Assumed/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/1/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Assumed/test-1000-200-01.npz
      hash: md5
      md5: 3e0006bc86234b8a5fd7df164bf36208
      size: 266713
    - path: output/ddos/distance_matrix/hamming/Assumed/train-1000-200-01.npz
      hash: md5
      md5: 8f7c562fc894eebbe04b6f45e98ffd7c
      size: 1072701
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/1/hamming/
      hash: md5
      md5: 6af43b9ac647af31a61fe1c104224478.dir
      size: 15606
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/1/hamming/
      hash: md5
      md5: a228a594ee7635193dfdc2de38f3cfb0.dir
      size: 5298
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-1-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Enforced/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Enforced/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/1/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Enforced/test-1000-200-01.npz
      hash: md5
      md5: 3e0006bc86234b8a5fd7df164bf36208
      size: 266713
    - path: output/ddos/distance_matrix/hamming/Enforced/train-1000-200-01.npz
      hash: md5
      md5: 8f7c562fc894eebbe04b6f45e98ffd7c
      size: 1072701
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/1/hamming/
      hash: md5
      md5: 2b34419fb5819596f05ea8810e8d8333.dir
      size: 15626
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/1/hamming/
      hash: md5
      md5: 5bf182e21ba10e1d31d6f35d84bf4c0e.dir
      size: 5302
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-1-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=1
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Average/train-1000-200-01.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Average/test-1000-200-01.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/1/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Average/test-1000-200-01.npz
      hash: md5
      md5: 85898e909331fa5495bbd5af6689203c
      size: 268381
    - path: output/ddos/distance_matrix/hamming/Average/train-1000-200-01.npz
      hash: md5
      md5: 8f7c562fc894eebbe04b6f45e98ffd7c
      size: 1072701
    - path: output/ddos/logs/precomputed/knn/Average/1000/1/hamming/
      hash: md5
      md5: 785548eb41722717a5fe3f004dd2a9f6.dir
      size: 15601
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/1/hamming/
      hash: md5
      md5: d6898292e87fe977bdd556243e4efc33.dir
      size: 5301
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/2/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-02.npz
      hash: md5
      md5: 0897e4baf81b5c95636dc0c03c053463
      size: 264883
    - path: output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-02.npz
      hash: md5
      md5: 8abf3aadc2aa604d513bbadeb724bc50
      size: 1064294
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/2/hamming/
      hash: md5
      md5: ac8dc376186aa7966f21f22e81ef1846.dir
      size: 15610
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/2/hamming/
      hash: md5
      md5: 141dabc3580184e3e403ac467a8b528e.dir
      size: 5304
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Assumed/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Assumed/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/2/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Assumed/test-1000-200-02.npz
      hash: md5
      md5: 0897e4baf81b5c95636dc0c03c053463
      size: 264883
    - path: output/ddos/distance_matrix/hamming/Assumed/train-1000-200-02.npz
      hash: md5
      md5: 3f16deda153d101d9975e3dec6ad1dfc
      size: 1072333
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/2/hamming/
      hash: md5
      md5: cea34fb622711d23da160ce7d01d8d01.dir
      size: 15609
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/2/hamming/
      hash: md5
      md5: a392c78b4949b359886b8cfc7ff24c93.dir
      size: 5303
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Enforced/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Enforced/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/2/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Enforced/test-1000-200-02.npz
      hash: md5
      md5: 0897e4baf81b5c95636dc0c03c053463
      size: 264883
    - path: output/ddos/distance_matrix/hamming/Enforced/train-1000-200-02.npz
      hash: md5
      md5: 3f16deda153d101d9975e3dec6ad1dfc
      size: 1072333
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/2/hamming/
      hash: md5
      md5: fbe8bba20aa77c4e35c70776df4978de.dir
      size: 15630
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/2/hamming/
      hash: md5
      md5: 854c7bf0e9c1690dec6b739910b004bb.dir
      size: 5307
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=2
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Average/train-1000-200-02.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Average/test-1000-200-02.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/2/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Average/test-1000-200-02.npz
      hash: md5
      md5: 461f7713b3aec44540dd522f9046528c
      size: 267067
    - path: output/ddos/distance_matrix/hamming/Average/train-1000-200-02.npz
      hash: md5
      md5: 3f16deda153d101d9975e3dec6ad1dfc
      size: 1072333
    - path: output/ddos/logs/precomputed/knn/Average/1000/2/hamming/
      hash: md5
      md5: ae113b2442379d268fba7987e2419827.dir
      size: 15603
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/2/hamming/
      hash: md5
      md5: 49b2bf67b451431ffea2b0bff145c316.dir
      size: 5300
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-3-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/3/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-03.npz
      hash: md5
      md5: ab94097d4f3dbc62cd5d5757eb1656bb
      size: 268966
    - path: output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-03.npz
      hash: md5
      md5: 2977fe9edbc06eb4fbd1c8822212271f
      size: 1065869
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/3/hamming/
      hash: md5
      md5: 62985008f07f1e38ccb0929549cc6c4b.dir
      size: 15610
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/3/hamming/
      hash: md5
      md5: e9a979ace1ebdd135b6a4897f703545e.dir
      size: 5304
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-3-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Assumed/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Assumed/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/3/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Assumed/test-1000-200-03.npz
      hash: md5
      md5: ab94097d4f3dbc62cd5d5757eb1656bb
      size: 268966
    - path: output/ddos/distance_matrix/hamming/Assumed/train-1000-200-03.npz
      hash: md5
      md5: 2d0d256b224f23ba624433aab3aab969
      size: 1074601
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/3/hamming/
      hash: md5
      md5: cc5347a2c9bd852fc54f3e0849f5c39e.dir
      size: 15609
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/3/hamming/
      hash: md5
      md5: 0d8d336b544a764d12832861da82b29f.dir
      size: 5301
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-3-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Enforced/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Enforced/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/3/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Enforced/test-1000-200-03.npz
      hash: md5
      md5: ab94097d4f3dbc62cd5d5757eb1656bb
      size: 268966
    - path: output/ddos/distance_matrix/hamming/Enforced/train-1000-200-03.npz
      hash: md5
      md5: 2d0d256b224f23ba624433aab3aab969
      size: 1074601
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/3/hamming/
      hash: md5
      md5: a86dd870a02a7e7d3b6b6dbbf0b49025.dir
      size: 15630
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/3/hamming/
      hash: md5
      md5: 1863c9cbfc732b217265964c49fc5041.dir
      size: 5306
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-3-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=3
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Average/train-1000-200-03.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Average/test-1000-200-03.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/3/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Average/test-1000-200-03.npz
      hash: md5
      md5: 016d4e70d391d5a286b0f10b925425e7
      size: 271031
    - path: output/ddos/distance_matrix/hamming/Average/train-1000-200-03.npz
      hash: md5
      md5: 2d0d256b224f23ba624433aab3aab969
      size: 1074601
    - path: output/ddos/logs/precomputed/knn/Average/1000/3/hamming/
      hash: md5
      md5: eaa17ba174aa9d58e359d134c16dc112.dir
      size: 15604
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/3/hamming/
      hash: md5
      md5: 4089dd2d9bfac06a8a2e6d820e6de8fc.dir
      size: 5301
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-4-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Vanilla" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Vanilla/1000/4/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Vanilla/test-1000-200-04.npz
      hash: md5
      md5: 2b1c12bb1c3645b5d10c096ec557c6da
      size: 263494
    - path: output/ddos/distance_matrix/hamming/Vanilla/train-1000-200-04.npz
      hash: md5
      md5: 77bf1a7ec50833db87a1196c92010571
      size: 1066348
    - path: output/ddos/logs/precomputed/knn/Vanilla/1000/4/hamming/
      hash: md5
      md5: 4ada2fe0ce5cb4bd7808e3d061234ecb.dir
      size: 15607
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Vanilla/1000/4/hamming/
      hash: md5
      md5: c21015a3503e51249d7c4141d7fb04e9.dir
      size: 5301
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-4-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Assumed" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=false
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Assumed/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Assumed/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Assumed/1000/4/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Assumed/test-1000-200-04.npz
      hash: md5
      md5: 2b1c12bb1c3645b5d10c096ec557c6da
      size: 263494
    - path: output/ddos/distance_matrix/hamming/Assumed/train-1000-200-04.npz
      hash: md5
      md5: 695221ea3872f7f71eb8dc741b271f8a
      size: 1075057
    - path: output/ddos/logs/precomputed/knn/Assumed/1000/4/hamming/
      hash: md5
      md5: 4bd3a94a8e908d1e9c89b38df2bc5f97.dir
      size: 15606
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Assumed/1000/4/hamming/
      hash: md5
      md5: 7f96b59e0f12fef06041abb29627858d.dir
      size: 5300
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-4-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Enforced" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=true model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Enforced/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Enforced/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Enforced/1000/4/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Enforced/test-1000-200-04.npz
      hash: md5
      md5: 2b1c12bb1c3645b5d10c096ec557c6da
      size: 263494
    - path: output/ddos/distance_matrix/hamming/Enforced/train-1000-200-04.npz
      hash: md5
      md5: 695221ea3872f7f71eb8dc741b271f8a
      size: 1075057
    - path: output/ddos/logs/precomputed/knn/Enforced/1000/4/hamming/
      hash: md5
      md5: 270e5ba0e3f5fbf60e04fe328f8a05e4.dir
      size: 15627
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Enforced/1000/4/hamming/
      hash: md5
      md5: e90b42f157b735b8eedfbd0b14044951.dir
      size: 5302
      nfiles: 3
  grid_search_precompute@1000-ddos-hamming-4-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train algorithm="Average" data=ddos
      data.sample.test_size=200 data.sample.train_size=1000 dataset=ddos data.sample.fold=4
      model_name=knn model=ncd_knn model.init.symmetric=false model.init.modified=true
      model.init.metric=hamming model.init.transform=None 
      model.init.distance_matrix_train=output/ddos/distance_matrix/hamming/Average/train-1000-200-04.npz
      model.init.distance_matrix_test=output/ddos/distance_matrix/hamming/Average/test-1000-200-04.npz
      files.directory=output/ddos files.reports=reports/precomputed/knn/Average/1000/4/hamming/
      hydra.sweeper.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/hamming/Average/test-1000-200-04.npz
      hash: md5
      md5: e6b936c8d02a8a946f0c3c9accf29dcb
      size: 265590
    - path: output/ddos/distance_matrix/hamming/Average/train-1000-200-04.npz
      hash: md5
      md5: 695221ea3872f7f71eb8dc741b271f8a
      size: 1075057
    - path: output/ddos/logs/precomputed/knn/Average/1000/4/hamming/
      hash: md5
      md5: 5dc085c5ee2424d96a32eab3b0bdb880.dir
      size: 15601
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/Average/1000/4/hamming/
      hash: md5
      md5: 52fc793df817611fd84cc7cdfe8cb66a.dir
      size: 5300
      nfiles: 3
  grid_search@1000-ddos-knn-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=200
      data.sample.train_size=1000 dataset=ddos model_name=knn model.init.symmetric=false
      model.init.modified=false files.directory=output/ddos hydra.sweeper.n_jobs=32
      hydra.launcher.n_jobs=1 algorithm="Vanilla" --config-name knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: output/ddos/distance_matrix/
      hash: md5
      md5: 769a35cc25722726774b367a1c46f0ee.dir
      size: 302212666
      nfiles: 240
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/Vanilla/1000/
      hash: md5
      md5: b411879a8fd53c5dfa56fe2c5a2bd88f.dir
      size: 24292619
      nfiles: 8641
    - path: output/ddos/reports/search/knn/Vanilla/1000/
      hash: md5
      md5: 844c54fe94134895f6b67d98357fb732.dir
      size: 2855377
      nfiles: 1602
  grid_search@1000-ddos-knn-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=200
      data.sample.train_size=1000 dataset=ddos model_name=knn model.init.symmetric=true
      model.init.modified=false files.directory=output/ddos hydra.sweeper.n_jobs=32
      hydra.launcher.n_jobs=1 algorithm="Assumed" --config-name knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: output/ddos/distance_matrix/
      hash: md5
      md5: 769a35cc25722726774b367a1c46f0ee.dir
      size: 302212666
      nfiles: 240
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/Assumed/1000/
      hash: md5
      md5: ca6da7e1fc9acc67c8a61fba12d986e4.dir
      size: 24238628
      nfiles: 8641
    - path: output/ddos/reports/search/knn/Assumed/1000/
      hash: md5
      md5: 89d6a835f67d979e34465838fa123f79.dir
      size: 2879758
      nfiles: 1620
  grid_search@1000-ddos-knn-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=200
      data.sample.train_size=1000 dataset=ddos model_name=knn model.init.symmetric=true
      model.init.modified=true files.directory=output/ddos hydra.sweeper.n_jobs=32
      hydra.launcher.n_jobs=1 algorithm="Enforced" --config-name knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: output/ddos/distance_matrix/
      hash: md5
      md5: 769a35cc25722726774b367a1c46f0ee.dir
      size: 302212666
      nfiles: 240
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/Enforced/1000/
      hash: md5
      md5: e4eb380c98fda311c53ca4f4889029ff.dir
      size: 24258160
      nfiles: 8641
    - path: output/ddos/reports/search/knn/Enforced/1000/
      hash: md5
      md5: 9f0c2b9b383d1014ad7019f18fea203e.dir
      size: 2881325
      nfiles: 1620
  grid_search@1000-ddos-knn-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=200
      data.sample.train_size=1000 dataset=ddos model_name=knn model.init.symmetric=false
      model.init.modified=true files.directory=output/ddos hydra.sweeper.n_jobs=32
      hydra.launcher.n_jobs=1 algorithm="Average" --config-name knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 20447dbfcee2701003d2bfb3b98d17a3
      size: 2245
    - path: output/ddos/distance_matrix/
      hash: md5
      md5: 769a35cc25722726774b367a1c46f0ee.dir
      size: 302212666
      nfiles: 240
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.transform: None,abs,square
              data.sample.fold: 0,1,2,3,4
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/Average/1000/
      hash: md5
      md5: f48b999b7b66ac6c2cc61b80d627ad89.dir
      size: 24238728
      nfiles: 8641
    - path: output/ddos/reports/search/knn/Average/1000/
      hash: md5
      md5: 4dbd7fb787f87ba114364c4b3d6c279d.dir
      size: 2879790
      nfiles: 1620
  grid_search@1000-ddos-svc-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=200
      data.sample.train_size=1000 dataset=ddos model_name=svc model.init.symmetric=false
      model.init.modified=false files.directory=output/ddos hydra.sweeper.n_jobs=32
      hydra.launcher.n_jobs=1 algorithm="Vanilla" --config-name svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: c2aeff165d5759dea37b0da7cba5e3fe
      size: 2331
    - path: output/ddos/distance_matrix/
      hash: md5
      md5: 769a35cc25722726774b367a1c46f0ee.dir
      size: 302212666
      nfiles: 240
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              data.sample.fold: 0,1,2,3,4
              model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/svc/Vanilla/1000/
      hash: md5
      md5: 339eb12e0989305f5432b1b4931adf18.dir
      size: 46856821
      nfiles: 16385
    - path: output/ddos/reports/search/svc/Vanilla/1000/
      hash: md5
      md5: 646fe0e8dbc486a692f61366ae32bf10.dir
      size: 9760789
      nfiles: 5499
  grid_search@1000-ddos-svc-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=200
      data.sample.train_size=1000 dataset=ddos model_name=svc model.init.symmetric=true
      model.init.modified=false files.directory=output/ddos hydra.sweeper.n_jobs=32
      hydra.launcher.n_jobs=1 algorithm="Assumed" --config-name svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: c2aeff165d5759dea37b0da7cba5e3fe
      size: 2331
    - path: output/ddos/distance_matrix/
      hash: md5
      md5: 769a35cc25722726774b367a1c46f0ee.dir
      size: 302212666
      nfiles: 240
    - path: params.yaml
      hash: md5
      md5: 49149b2dbddf0c492f157234afcf0330
      size: 1335
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${model.init.metric}/
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              model.init.symmetric: True,False
              model.init.modified: True,False
              model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              data.sample.fold: 0,1,2,3,4
              model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              files.reports: 
                reports/search/${model_name}/${algorithm}/${data.sample.train_size}/${data.sample.fold}/${data.sample.test_size}/${data.sample.random_state}/
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/svc/Assumed/1000/
      hash: md5
      md5: bfa23074556e2e3b1b5cfc15240185de.dir
      size: 46799618
      nfiles: 16385
    - path: output/ddos/reports/search/svc/Assumed/1000/
      hash: md5
      md5: e8727eeba0c66fba9b00d6f25dd634df.dir
      size: 9636328
      nfiles: 5430
  compile@ddos-knn-search:
    cmd: python -m deckard.layers.compile  --report_folder output/ddos/reports/search/knn  --results_file
      output/ddos/reports/search/knn.csv
    deps:
    - path: output/ddos/reports/search/knn/
      hash: md5
      md5: 155e557381114daae22de5dd54298336.dir
      size: 11496250
      nfiles: 6462
    outs:
    - path: output/ddos/reports/search/knn.csv
      hash: md5
      md5: 8e8b902f01dd7619faa02298410448fc
      size: 2931832
  clean@ddos-knn-search:
    cmd: python -m deckard.layers.clean_data  -i output/ddos/reports/search/knn.csv
      -o output/ddos/plots//search/knn.csv -c conf/clean.yaml
    deps:
    - path: output/ddos/reports/search/knn.csv
      hash: md5
      md5: 8e8b902f01dd7619faa02298410448fc
      size: 2931832
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/ddos/plots//search/knn.csv
      hash: md5
      md5: 4a377fde726bad574b0c6019dc448dfb
      size: 2423356
