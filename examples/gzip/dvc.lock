schema: '2.0'
stages:
  data:
    cmd: python data_prep.py
    deps:
    - path: data_prep.py
      hash: md5
      md5: 18244c921ed2d7cbf25b8362b3ca33aa
      size: 5146
    outs:
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
  parse_params:
    cmd: python -m deckard.layers.parse
    deps:
    - path: conf/data
      hash: md5
      md5: d405445aa6668eb8895082ecc2b863c5.dir
      size: 2452
      nfiles: 9
    - path: conf/default.yaml
      hash: md5
      md5: a0a533f84a7ffce197e0db5439219faf
      size: 1504
    - path: conf/files
      hash: md5
      md5: 23716443bd515e95c89a4c698e6e2644.dir
      size: 300
      nfiles: 1
    - path: conf/model
      hash: md5
      md5: 0b241be12ec51816a3d6e2690f09af81.dir
      size: 4955
      nfiles: 16
    - path: conf/scorers
      hash: md5
      md5: e3e4a85af427799284ed28f899af4a90.dir
      size: 376
      nfiles: 2
    outs:
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
  train:
    cmd: python -m deckard.layers.experiment train
    deps:
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      params.yaml:
        data:
          drop:
          - id
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          data_dir: data
          data_file: kdd_nsl-0-100-100
          data_type: .pkl
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          data:
            drop:
            - id
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            condensing_method: None
            distance_matrix: kdd_nsl/model/gzip/100-100/0.npz
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          accuracy:
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/data/kdd_nsl-0-100-100.pkl/
      hash: md5
      md5: e4ba3bf8bf9a5602aa0b3df493f6a438
      size: 39291
    - path: kdd_nsl/reports/train/default/predictions.json
      hash: md5
      md5: 6ec58ba8993f785ba35584876005d298
      size: 697
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 1311d0b0346b6f67fd52e6f3c777f919
      size: 406
  grid_search@20-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/20/symmetry_true hydra.callbacks.study_dump.output_file=null
      files.directory=ddos files.reports=reports/gzip_knn/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: d64c6ff6aed582e87265a58516ffb889.dir
      size: 1318485
      nfiles: 513
    - path: ddos/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: 5afafb49bbb79a94a8ce4dedc0b02852.dir
      size: 875855
      nfiles: 1094
  grid_search@20-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_knn/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: 42134da83f313b40f1cff787c1d83bc1.dir
      size: 1320149
      nfiles: 513
    - path: ddos/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 1a1461903e7dea2741123926430419f5.dir
      size: 814076
      nfiles: 1039
  grid_search@20-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: 150955e630da86ade14fbdff2787b52a.dir
      size: 1685193
      nfiles: 513
    - path: ddos/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 5eacdc59b9a40ba63496935d4f3443bb.dir
      size: 1606008
      nfiles: 1425
  grid_search@20-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: c3102f93e11db4bf08ac9a15f6664fb6.dir
      size: 1684802
      nfiles: 513
    - path: ddos/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: fc73ff46d74a0ecd80874d5c7cf71bc1.dir
      size: 1686348
      nfiles: 1392
  grid_search@20-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/20/symmetry_true hydra.callbacks.study_dump.output_file=null
      files.directory=ddos files.reports=reports/gzip_svc/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: fee504efda651fbc324867fc936775ce.dir
      size: 1378084
      nfiles: 513
    - path: ddos/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: 102d4ac7a514c49752c3cf936c6e1429.dir
      size: 907716
      nfiles: 1152
  grid_search@20-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_svc/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 04e6496c898963513ee9a79c7455fde2.dir
      size: 1379288
      nfiles: 513
    - path: ddos/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: 8dbda1283cbea71c8b5a4e1c0ecc0f66.dir
      size: 908388
      nfiles: 1152
  grid_search@20-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_knn/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: bf5d0d8a49034a675a9700f141d229ad.dir
      size: 1322932
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: 879f3d330667a56585735ec7fb2d0545.dir
      size: 579737
      nfiles: 736
  grid_search@20-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_knn/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: beca0ec7399832fb4f2fc216229d04bc.dir
      size: 1322940
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: b5657af50406fb91c7b5148d6cd57eeb.dir
      size: 577714
      nfiles: 710
  grid_search@20-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: 6ec13ddc977bcb816e70b3e0fd35d2b4.dir
      size: 1660764
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: a22bc134d5fbcb5d23512f1c0cab6b14.dir
      size: 2210411
      nfiles: 1219
  grid_search@20-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: af50e83df9fde4d995cd20b7ac86e572.dir
      size: 1684223
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 861ee8cbb7a01ab9617bf8b332128a8c.dir
      size: 1653840
      nfiles: 1358
  grid_search@20-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_svc/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: e4166b70561003bbc3e8e18c0b24e6ca.dir
      size: 1378272
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: 3815370d628c4b2a7f9c9dfb0581928c.dir
      size: 877349
      nfiles: 1152
  grid_search@20-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_svc/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 263149eb5c31b83f10ef6182c78f9864.dir
      size: 1375238
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: 759b1b20a95e1af1f631c85bf4058268.dir
      size: 900092
      nfiles: 1096
  grid_search@20-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_knn/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: 5ecffc854076ed65b4a19d77a53ac19d.dir
      size: 1326696
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: 7ab212f261dadf1d24583cfc1378ad25.dir
      size: 869539
      nfiles: 849
  grid_search@20-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_knn/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: f47186efcd751d1a344d10173352ee4f.dir
      size: 1328360
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 912f4edb4056e569817ad82a654d372f.dir
      size: 863837
      nfiles: 849
  grid_search@20-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: ba8900e81cb2562d1d745593db4fbc08.dir
      size: 1669308
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 7893a7ffdcec2ee97fd06e7561b395cc.dir
      size: 1658746
      nfiles: 1086
  grid_search@20-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: 6cd3e5b418137a783893d28fd7937694.dir
      size: 1681885
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 070abe4edce5d3268ee9de904e44130a.dir
      size: 1383445
      nfiles: 1131
  grid_search@20-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_svc/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: dd7101a57201e1a753cb1b2c3bb2b559.dir
      size: 1383093
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: ca41ac293aed534c04a3eba13dc25d8a.dir
      size: 880607
      nfiles: 1152
  grid_search@20-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_svc/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 0472d2193746fb1e1d1a860f8830812e.dir
      size: 1378587
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: e8e16105665db551f04fada86d8d4456.dir
      size: 886112
      nfiles: 1139
  grid_search@20-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_knn/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: 0cf3754f698885d7a4798e4955b3f9a3.dir
      size: 1336287
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: def2f97fc3dad405f5b28ae67f0d513e.dir
      size: 874209
      nfiles: 852
  grid_search@20-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_knn/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: 48ddf84839c4582d7b8b429eec7e5448.dir
      size: 1337951
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: cd015044af7d407c1f9046c9a57640f7.dir
      size: 870342
      nfiles: 851
  grid_search@20-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: 31b2d6a2cab1e88a1fb4d567fdea5d34.dir
      size: 1672807
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 1b9b8737b3b730cea379c4981ff45ccf.dir
      size: 1757220
      nfiles: 1058
  grid_search@20-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: 325c9249fac058083ce05d3b4e42740a.dir
      size: 1689052
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 29cdaf260f1103b87dfe791fa84e44e9.dir
      size: 1379082
      nfiles: 1139
  grid_search@20-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/20/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_svc/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: 8c339e6cfa7cbd06c24cee50dd3606cf.dir
      size: 1654085
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: 89d6c4d734c4314c09f68fe6b7504623.dir
      size: 1260091
      nfiles: 1596
  grid_search@20-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/20/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_svc/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: d0e456aadeb1c31886566f8ea9108579.dir
      size: 1391170
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: e07b1b4164e3aff1ab7a98f81bc77578.dir
      size: 899677
      nfiles: 1135
  grid_search@100-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_knn/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: d30058989008693bad08055cad103b28.dir
      size: 1305363
      nfiles: 513
    - path: ddos/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: 9e9c199a7a2bc727560a2aa9746a051d.dir
      size: 84737
      nfiles: 105
  grid_search@100-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_knn/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: 5135bdef90224a8293dbcbd368137d6e.dir
      size: 1304994
      nfiles: 513
    - path: ddos/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: c8c6e1e4af5fbda2157023c96b531bfc.dir
      size: 20024
      nfiles: 16
  grid_search@100-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: eb7e572ed1b1ffbbff8b0fc1b917594b.dir
      size: 1686987
      nfiles: 513
    - path: ddos/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 12397df030f51cf046cf01addea589b9.dir
      size: 1685559
      nfiles: 1401
  grid_search@100-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: 9804b79e6abc3bc060ab28356ae4d2a1.dir
      size: 1683242
      nfiles: 513
    - path: ddos/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 42b6148659f170e3f31c0bf38dab6980.dir
      size: 1727927
      nfiles: 1378
  grid_search@100-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_svc/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: 31a325f6a1f6c36522e7c0b7d014ed2d.dir
      size: 1379128
      nfiles: 513
    - path: ddos/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: ca746e5868d120c27e4044678361d665.dir
      size: 910097
      nfiles: 1152
  grid_search@100-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_svc/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: 279caafe904d4fa0675b46dd8b4c565c.dir
      size: 1381186
      nfiles: 513
    - path: ddos/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: 575c295796f8523c031fb08a86861884.dir
      size: 912529
      nfiles: 1147
  grid_search@100-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_knn/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: d09b470c4e7c5d7043330c16445ea2f7.dir
      size: 1311440
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: 289b707704733ae531daf312170a4345.dir
      size: 197035
      nfiles: 254
  grid_search@100-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_knn/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: c67623d1635b61f4e8cc9f8f87b2364a.dir
      size: 1309796
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: 3d9abfb6dfd3df75b3636b430ba5e49b.dir
      size: 25672
      nfiles: 21
  grid_search@100-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: 43b86124d3ecd98e37fe08507e147257.dir
      size: 1667918
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 46ed803aadc273a9fd27412685b5365c.dir
      size: 2156953
      nfiles: 1237
  grid_search@100-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: db9638a9a288fbf4a06b91ab67669660.dir
      size: 1670229
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 65dd9b9f79e5e20892457ec17d64c4ce.dir
      size: 2026271
      nfiles: 1237
  grid_search@100-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_svc/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: d29ba2f7448b2dfd3e5f2914692b490a.dir
      size: 1281567
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 61714adc07c5fcefdce91695a32a66e0.dir
      size: 720416
      nfiles: 944
  grid_search@100-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_svc/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: 5a5efdad59ec6526ca92ca8941982895.dir
      size: 1177717
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: 8636b8d0018b60b2ac951e7f47594937.dir
      size: 605879
      nfiles: 705
  grid_search@100-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_knn/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: 380f3db39c42a06de0924982aac16179.dir
      size: 1124572
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: f8e2f754abcf05a858f8e1389c1626eb.dir
      size: 152129
      nfiles: 185
  grid_search@100-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_knn/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: 8f2c19f8069a61158b662b4e4ba5980e.dir
      size: 1118634
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: 0b741ec3692067a3687303996d8fe75b.dir
      size: 26072
      nfiles: 23
  grid_search@100-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: 772b8a2e359868dcc295bf9f9011d851.dir
      size: 1469306
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 28fdc32594edd68fd13e7f7dcc6f42e4.dir
      size: 1560954
      nfiles: 946
  grid_search@100-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: d32137ea39df03235fb3b2b8d8d56889.dir
      size: 1481674
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 9792812fc7b7591352889251ef789a7d.dir
      size: 1302312
      nfiles: 1014
  grid_search@100-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_svc/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: b1dc224c093f9357260f021e5b9b9bec.dir
      size: 1184066
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 2cb553999f25d921901a5625e15e0b85.dir
      size: 579753
      nfiles: 768
  grid_search@100-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_svc/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: ce490244be151bcb32535d67eb779c61.dir
      size: 1183785
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: 3718669c66f08860ff279bf8ee39f8ea.dir
      size: 582416
      nfiles: 760
  grid_search@100-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_knn/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: 0c228cb99f9cde0c886b17fb265f45d3.dir
      size: 1145982
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: 96dd4a997d7447349a8601cecfef8d19.dir
      size: 379698
      nfiles: 447
  grid_search@100-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_knn/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: e31331b9c4ee524e0b5903eec398e8d4.dir
      size: 1136731
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: 73ff519bc13353c3b4f6cc1ed2be6abf.dir
      size: 188456
      nfiles: 223
  grid_search@100-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: e3b34543045a2445fe5dd7e1a61f5944.dir
      size: 1477226
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: a3b2638081adf30ea24c125618814e5b.dir
      size: 1613130
      nfiles: 933
  grid_search@100-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: 19101cef3d5a4ccf5750164c8dc7f19f.dir
      size: 1500495
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 08071703c1fbb8ff5e8cd4ca44dec07f.dir
      size: 1142304
      nfiles: 1061
  grid_search@100-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/100/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_svc/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: c6bcd97c16df60e2920e8db39a85cad4.dir
      size: 1196350
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: cac1814ce8e6355a1f4c1f7149dac60d.dir
      size: 588278
      nfiles: 768
  grid_search@100-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/100/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_svc/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: 72c13fbc57ba8609094b17526679be39.dir
      size: 1196318
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: d974fd6603047616c3563098663ed2d1.dir
      size: 593052
      nfiles: 759
  grid_search@300-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_knn/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: 6c35685b4686bd03f3e51f9167424747.dir
      size: 1116328
      nfiles: 513
    - path: ddos/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: 4057c01b297cba27512b36ea2dc567d2.dir
      size: 30725
      nfiles: 24
  grid_search@300-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_knn/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: eabef16f064082fafbe931b3adec3b33.dir
      size: 1117792
      nfiles: 513
    - path: ddos/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: 603b67599da8648692a2b9a6abfaecdb.dir
      size: 18183
      nfiles: 12
  grid_search@300-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: c226cd152ae4cb610a08cce10886696b.dir
      size: 1469780
      nfiles: 513
    - path: ddos/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: 75ed04869f4f5c51fb8df2264957a7d7.dir
      size: 1469373
      nfiles: 987
  grid_search@300-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: ca0656cec48aed83442470a873ae4fff.dir
      size: 1473211
      nfiles: 513
    - path: ddos/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: 25a3313c5912e19cf703a94213e71b7b.dir
      size: 1358513
      nfiles: 1002
  grid_search@300-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_svc/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: 4ef859abe096001b1105b7214c71fe48.dir
      size: 1184973
      nfiles: 513
    - path: ddos/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 797dd175d8c37506aef8cc4c48e08654.dir
      size: 600901
      nfiles: 768
  grid_search@300-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_svc/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: ca83e58789e38654f693f9a936755f3a.dir
      size: 1185329
      nfiles: 513
    - path: ddos/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 4307708e97c561763c6ed88290ad952a.dir
      size: 607642
      nfiles: 755
  grid_search@300-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_knn/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: b19bf6b865d78101854c8ca9700be4f5.dir
      size: 1115117
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: 7eb61e0812aa891e8f0e230e46a659bf.dir
      size: 28255
      nfiles: 28
  grid_search@300-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_knn/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 8bf28a07f6c8ad748e5a058e13851852.dir
      size: 1115963
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: b65b6e68de885c2eb95ae9376d1b04e2.dir
      size: 18241
      nfiles: 15
  grid_search@300-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: 40ffed8af11333b03d32023455524324.dir
      size: 1444582
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: cb2be29451758185e88952f2a838f02a.dir
      size: 2104007
      nfiles: 774
  grid_search@300-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: aa2c9bb96074a4ccbde18cf0c0fcdf5d.dir
      size: 1452882
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: d1ab222c77bc8de1a94a7aa7e2e1f317.dir
      size: 1844905
      nfiles: 823
  grid_search@300-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_svc/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: a7d4212ebf7433efb641eaad97c86172.dir
      size: 1185035
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: dbad160df93b3b98f7e230565fa1322d.dir
      size: 580437
      nfiles: 768
  grid_search@300-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_svc/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: 07b99bcc99392c2d95526f1a97008165.dir
      size: 1174954
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 9d13b7258c8a926814490a8fb1f61809.dir
      size: 613549
      nfiles: 686
  grid_search@300-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_knn/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: f2ec647a996729a7949fee69a37e9655.dir
      size: 1117070
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: c8af9f682e54a85d0718839ba7c0a2f6.dir
      size: 25020
      nfiles: 22
  grid_search@300-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_knn/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 39493f311de0f2b2479f2043ecae015d.dir
      size: 1118453
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: 0e59a5acabae48f41039f9769aff2aab.dir
      size: 24954
      nfiles: 19
  grid_search@300-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: 1c840fce125daac24effed7279e5dbd9.dir
      size: 1456361
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: 2c28223e2243d407dd6ce5743889238a.dir
      size: 1925697
      nfiles: 832
  grid_search@300-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 275ea6d9423db2c195b7ec5b6cde9f38.dir
      size: 1471508
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: 38028ed99fca1fe39fde6451fa64fb4b.dir
      size: 1509304
      nfiles: 944
  grid_search@300-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_svc/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: e8210b99406d1652b0d3ed8ef4f0af66.dir
      size: 1183707
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 271b1335f3035b6da306c099e0be6f47.dir
      size: 580486
      nfiles: 768
  grid_search@300-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_svc/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: 6b6485fcf7327de61db1dfcbdaddd3e0.dir
      size: 1183086
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 25193d30e35b7057ee9b735ec0b1f05b.dir
      size: 586746
      nfiles: 756
  grid_search@300-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_knn/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: aa0996546e75695e5a5d138ea80b3832.dir
      size: 1134690
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: c62afbbbcab0d8aef38817eaba2e956b.dir
      size: 176339
      nfiles: 208
  grid_search@300-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_knn/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 20f4a7e82cf14455f9cd1e716c067dd5.dir
      size: 1128196
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: c5f64578b472aab08c7f78d7fc26b175.dir
      size: 52804
      nfiles: 45
  grid_search@300-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: 64a2aafe198521decd0c40cf9ad6c8a2.dir
      size: 1463707
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: fd100b259183281c810a04b643858752.dir
      size: 2040516
      nfiles: 799
  grid_search@300-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 1f27c868ef430ac001fd861d462483a4.dir
      size: 1482943
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: 9b2d4effa51007493f9b67c489ea0fc7.dir
      size: 1279937
      nfiles: 927
  grid_search@300-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/300/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_svc/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: 2aa3b63344c13e51a99aa88d3909e446.dir
      size: 1196374
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 05e7c2ed1e59dfc971ca59848cf495db.dir
      size: 590541
      nfiles: 768
  grid_search@300-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/300/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_svc/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: 47c750b636993836f233d0e66bb6137e.dir
      size: 1189320
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 04f4758de4000b6740035ccabb891b43.dir
      size: 615203
      nfiles: 708
  grid_search@500-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_knn/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 0779fa5458067a93b15f826f9cf31ff5.dir
      size: 1116021
      nfiles: 513
    - path: ddos/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: 6f18a536f82cf4f8148c3c153b6e6422.dir
      size: 25302
      nfiles: 19
  grid_search@500-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_knn/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: d9bea565ca58e6f90c78fbabf0fe8204.dir
      size: 1117199
      nfiles: 513
    - path: ddos/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: a31ecfb9d4ef850421910fc1b965a4d5.dir
      size: 27996
      nfiles: 23
  grid_search@500-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: 4493d5c4caa242bf7e118bfecb3d3f59.dir
      size: 1467296
      nfiles: 513
    - path: ddos/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 7eeb30ffa75ca889a28259d1aa66419b.dir
      size: 1505226
      nfiles: 975
  grid_search@500-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: d2075f51e629c87493022f2cf8c0b352.dir
      size: 1471249
      nfiles: 513
    - path: ddos/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: 0803981b0a86c16e80c71e8faf8ae990.dir
      size: 1354376
      nfiles: 989
  grid_search@500-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_svc/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: 0cbe5543fcfaf4d55f2b343bd0f0833e.dir
      size: 1185673
      nfiles: 513
    - path: ddos/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: b2c2b2247191f7f39e214cbacd151a8a.dir
      size: 599903
      nfiles: 768
  grid_search@500-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=ddos files.reports=reports/gzip_svc/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: 576c4445bbeccbd34cab9f9f5b2f4056.dir
      size: 1182291
      nfiles: 513
    - path: ddos/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: b127636e625474ca930890bc810ffef8.dir
      size: 617349
      nfiles: 732
  grid_search@500-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_knn/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: c7328d965be29c411ada8d91d048ae45.dir
      size: 1115447
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: b5f98a70d4e553494be277cf002a48e6.dir
      size: 48645
      nfiles: 52
  grid_search@500-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_knn/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: 62efcf3740cb938607be264f737ef535.dir
      size: 1115796
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 7bafd6eb10b7fb0ea7ea3fdf1fe6e45a.dir
      size: 26550
      nfiles: 28
  grid_search@500-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: 74a5c6580414aa0e35d23fffec550d0f.dir
      size: 1444752
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 8e6a4ad208609de5a395d064025eafef.dir
      size: 2098167
      nfiles: 776
  grid_search@500-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: 16d090e957b72317b58f15ea469afbed.dir
      size: 1447920
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: 8ecae57d1468b9e3a6b332a7337b1394.dir
      size: 1944613
      nfiles: 787
  grid_search@500-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_svc/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: 844c1bf8d6b6f4b75dc689ffea7bb06e.dir
      size: 1184827
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: 50fabff7683ab1e20528baa9c432268c.dir
      size: 579226
      nfiles: 768
  grid_search@500-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=kdd_nsl files.reports=reports/gzip_svc/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: 1b93735486982adf702a31032be2defa.dir
      size: 1181325
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 654bda7d5b32b28e3cd3582e4af80464.dir
      size: 594371
      nfiles: 734
  grid_search@500-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_knn/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 8312e76f2650950fea3409c0a6d883cf.dir
      size: 1116779
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: 6b00be55481453b7f876be585ccda373.dir
      size: 20544
      nfiles: 16
  grid_search@500-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_knn/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: 48f39aebd2c12638c9bb18aa21bc6bd5.dir
      size: 1118182
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: a2d3481a5555cea65e4cf9d382617012.dir
      size: 15390
      nfiles: 11
  grid_search@500-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: 2adb31eab4d5a10a24869468165474c4.dir
      size: 1464222
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 0311310eb82922f25c9e226defd65ebf.dir
      size: 1714197
      nfiles: 900
  grid_search@500-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: 5144a634572b4127ef9efafe2ae5d802.dir
      size: 1461838
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: d78374aa357e125fed27b48f55296552.dir
      size: 1728479
      nfiles: 870
  grid_search@500-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_svc/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: b6da2c0228ee715d060eff39bd9a9b6e.dir
      size: 1183735
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: e184a9705a107a4512a112065ecb1b3d.dir
      size: 580197
      nfiles: 768
  grid_search@500-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=sms_spam files.reports=reports/gzip_svc/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: dd7d79bd22c1ce4d4ef48d00b49fdc2c.dir
      size: 1183338
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 4b3f60656e85a00cfb8ca68d20a6f20b.dir
      size: 587298
      nfiles: 754
  grid_search@500-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_knn/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 4bf9dba867841c1f5c1e5e05611702e8.dir
      size: 1141457
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: bd5e542797215b0f21161bf845201d29.dir
      size: 292452
      nfiles: 341
  grid_search@500-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_knn/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 99eecb9e08f7985992d8c8f08b7bc5da
      size: 1931
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: ed909e81092668ec3d9081ca99c0a213.dir
      size: 1132705
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 4f302bea1aad4639278c594450290ff3.dir
      size: 140788
      nfiles: 162
  grid_search@500-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: 97c8579082514e31902f3f1bba8ce85a.dir
      size: 1464915
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 5943f61c1b2812810817f3bc8331a7ee.dir
      size: 2015404
      nfiles: 807
  grid_search@500-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 1c37d0c468a5b420e6667af0e21a5144
      size: 2122
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: 2e98d0d2a4bedb9099cd7b119677ba81.dir
      size: 1473128
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: dd7f605940745060d1af25a170a2fd95.dir
      size: 1414456
      nfiles: 857
  grid_search@500-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/500/symmetry_true
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_svc/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: aabc5b7ee1b35ee1b68f55067dbdc65a.dir
      size: 1196056
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: 77209ca284ffe2b7f7c65e5d70fd396d.dir
      size: 589252
      nfiles: 768
  grid_search@500-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/500/symmetry_false
      hydra.callbacks.study_dump.output_file=null files.directory=truthseeker files.reports=reports/gzip_svc/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: f1a5bc8e6423fd45c6aee5e98eb435de.dir
      size: 1192751
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: ef98175c9033cf32084e4a8780025751.dir
      size: 604519
      nfiles: 732
  precompute_matrices@ddos-knn-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_knn model=gzip_knn ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/symmetry_true/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true
      hash: md5
      md5: faaad34f5b870937a533a595241ed2e4.dir
      size: 9425
      nfiles: 5
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@ddos-knn-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_knn model=gzip_knn ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/symmetry_false/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_false
      hash: md5
      md5: 0146c3e4cf313a18db46f93418f00c90.dir
      size: 9438
      nfiles: 5
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@ddos-svc-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_svc model=gzip_svc ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/symmetry_true/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/svc/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/gzip/symmetry_true
      hash: md5
      md5: 0301482a8e404e04409ad50def62f0f1.dir
      size: 9704
      nfiles: 5
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
  precompute_matrices@ddos-svc-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_svc model=gzip_svc ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/symmetry_false/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/svc/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/gzip/symmetry_false
      hash: md5
      md5: f5bff3522360f243e0dbbf943c60fbe9.dir
      size: 9676
      nfiles: 5
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@ddos-logistic-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_logistic model=gzip_logistic ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/symmetry_true/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/logistic/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/logistic/gzip/symmetry_true
      hash: md5
      md5: 0ed905d519cd041d011c50ba8b5b5d42.dir
      size: 10070
      nfiles: 5
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
  precompute_matrices@ddos-logistic-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_logistic model=gzip_logistic ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/symmetry_false/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/logistic/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/logistic/gzip/symmetry_false
      hash: md5
      md5: 8841033e813aa669e57f579ef362bbbd.dir
      size: 10093
      nfiles: 5
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
  precompute_matrices@kdd_nsl-knn-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_knn_kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true
      hash: md5
      md5: 9012ca0e61d9baca1a4adf7e7e9eab17.dir
      size: 9339
      nfiles: 5
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@kdd_nsl-knn-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_knn_kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_false
      hash: md5
      md5: cb4deca66256c88c7bf3de677d11b4a9.dir
      size: 9351
      nfiles: 5
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@kdd_nsl-svc-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_svc_kdd_nsl
      files.reports=reports/condense/svc/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/svc/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/svc/gzip/symmetry_true
      hash: md5
      md5: 0ebe892168333ec703fd918c32d35886.dir
      size: 9687
      nfiles: 5
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
  precompute_matrices@kdd_nsl-svc-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_svc_kdd_nsl
      files.reports=reports/condense/svc/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/svc/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/svc/gzip/symmetry_false
      hash: md5
      md5: da8795bae71706fc84688751e8bfc733.dir
      size: 9729
      nfiles: 5
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@kdd_nsl-logistic-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      files.reports=reports/condense/logistic/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/logistic/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/logistic/gzip/symmetry_true
      hash: md5
      md5: 3781b55bde7d0355a2c8714cfe7dc3aa.dir
      size: 9989
      nfiles: 5
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
  precompute_matrices@kdd_nsl-logistic-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      files.reports=reports/condense/logistic/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/logistic/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/logistic/gzip/symmetry_false
      hash: md5
      md5: 5c3f56285a772120609f250c70c26225.dir
      size: 10002
      nfiles: 5
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
  precompute_matrices@truthseeker-knn-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_knn_truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true
      hash: md5
      md5: 0d2ef251fc36826cbff18f5e31fb8405.dir
      size: 9437
      nfiles: 5
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@truthseeker-knn-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_knn_truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_false
      hash: md5
      md5: 82c6a417060078bf74e40d978d749d41.dir
      size: 9430
      nfiles: 5
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
  precompute_matrices@truthseeker-logistic-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_logistic_truthseeker
      files.reports=reports/condense/logistic/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/logistic/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/logistic/gzip/symmetry_true
      hash: md5
      md5: 2ba678e2563446d4c7c98473224283d7.dir
      size: 10374
      nfiles: 5
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
  precompute_matrices@truthseeker-logistic-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_logistic_truthseeker
      files.reports=reports/condense/logistic/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/logistic/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/logistic/gzip/symmetry_false
      hash: md5
      md5: ea05d4ef2e26ec11c84bba9f68048c52.dir
      size: 10139
      nfiles: 5
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@sms_spam-knn-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_knn_sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_true
      hash: md5
      md5: 88f731f77fa4183571887701b836b985.dir
      size: 10924
      nfiles: 5
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@sms_spam-knn-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_knn_sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_false
      hash: md5
      md5: af72813ff474411655e85aaff4a2bfcc.dir
      size: 9366
      nfiles: 5
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@sms_spam-svc-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_svc_sms_spam
      files.reports=reports/condense/svc/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/svc/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/svc/gzip/symmetry_true
      hash: md5
      md5: a14b7c226f9d9664ceb383d8ed2f970a.dir
      size: 9712
      nfiles: 5
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
  precompute_matrices@sms_spam-svc-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_svc_sms_spam
      files.reports=reports/condense/svc/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/svc/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/svc/gzip/symmetry_false
      hash: md5
      md5: 6d5f92219b9da1ba5fcf6c210d276e85.dir
      size: 9717
      nfiles: 5
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@sms_spam-logistic-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_logistic_sms_spam
      files.reports=reports/condense/logistic/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/logistic/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/logistic/gzip/symmetry_true
      hash: md5
      md5: 06a1a6f04f83e374cc5974587c9aaa56.dir
      size: 10022
      nfiles: 5
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
  precompute_matrices@sms_spam-logistic-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_logistic_sms_spam
      files.reports=reports/condense/logistic/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/logistic/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/logistic/gzip/symmetry_false
      hash: md5
      md5: 774ad64e22bc585983be657401e4211c.dir
      size: 10035
      nfiles: 5
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
  condense@ddos-knn-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.9/symmetry_true/
      hash: md5
      md5: 4a123d788948ca1b980b7b77abcc889c.dir
      size: 1173776
      nfiles: 513
  condense@ddos-knn-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.9/symmetry_false/
      hash: md5
      md5: 1e972428837615b3cc85e13154e2e49c.dir
      size: 1160076
      nfiles: 513
  condense@ddos-knn-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.8/symmetry_true/
      hash: md5
      md5: 0ee1e4f97ad58dbb1253a88420f7dfa7.dir
      size: 1173811
      nfiles: 513
  condense@ddos-knn-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.8/symmetry_false/
      hash: md5
      md5: 19a678699d64db00ea36298650514405.dir
      size: 1175840
      nfiles: 513
  condense@ddos-knn-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.7/symmetry_true/
      hash: md5
      md5: 7252c16b758711443fb6353538a34a0f.dir
      size: 1170593
      nfiles: 513
  condense@ddos-knn-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.7/symmetry_false/
      hash: md5
      md5: 028d583cc5015622a26206827ea157aa.dir
      size: 1161289
      nfiles: 513
  condense@ddos-knn-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.6/symmetry_true/
      hash: md5
      md5: 89b1cb422918186b0ec0479e0d807480.dir
      size: 1174051
      nfiles: 513
  condense@ddos-knn-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.6/symmetry_false/
      hash: md5
      md5: 3c1687b9281abd5a81e2a8a81bce644e.dir
      size: 1175277
      nfiles: 513
  condense@ddos-knn-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.5/symmetry_true/
      hash: md5
      md5: 35487b7deb0cb24b37004ebf8995dd8b.dir
      size: 1174152
      nfiles: 513
  condense@ddos-knn-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.5/symmetry_false/
      hash: md5
      md5: 7fa018cc5bb15bc22bdb7620841e8be0.dir
      size: 1175536
      nfiles: 513
  condense@ddos-knn-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.4/symmetry_true/
      hash: md5
      md5: 5f5b1f18bc9acdc41f3a5b3807e16a30.dir
      size: 1173805
      nfiles: 513
  condense@ddos-knn-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.4/symmetry_false/
      hash: md5
      md5: 77a11ff580743f10adf93091a452019f.dir
      size: 1175819
      nfiles: 513
  condense@ddos-knn-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.3/symmetry_true/
      hash: md5
      md5: 31348d13111b526a779093e4ca77046d.dir
      size: 1174089
      nfiles: 513
  condense@ddos-knn-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.3/symmetry_false/
      hash: md5
      md5: 4d21b941bba9737c72c5152c2e4dd330.dir
      size: 1175881
      nfiles: 513
  condense@ddos-knn-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.2/symmetry_true/
      hash: md5
      md5: 3f92852396d592fbcde670db06f1f557.dir
      size: 1173846
      nfiles: 513
  condense@ddos-knn-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.2/symmetry_false/
      hash: md5
      md5: c9fb8cbf8a9329d743cc0475e8c59e1a.dir
      size: 1174976
      nfiles: 513
  condense@ddos-knn-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.1/symmetry_true/
      hash: md5
      md5: f2581ee8d9940c428dfd900b7d43f13c.dir
      size: 1173761
      nfiles: 513
  condense@ddos-knn-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.1/symmetry_false/
      hash: md5
      md5: c06977f71062deab4e363f8e26827af1.dir
      size: 1159680
      nfiles: 513
  condense@ddos-svc-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.9/symmetry_true/
      hash: md5
      md5: 9893daa196026aef3c7a503a98628f19.dir
      size: 1446807
      nfiles: 513
  condense@ddos-svc-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.9/symmetry_false/
      hash: md5
      md5: f69b7e8ad9e92bebc326542f27f10a9e.dir
      size: 1266726
      nfiles: 513
  condense@ddos-svc-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.8/symmetry_true/
      hash: md5
      md5: 675b2dfee0e5386853da94cace1a9e88.dir
      size: 1264976
      nfiles: 513
  condense@ddos-svc-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.8/symmetry_false/
      hash: md5
      md5: bb9c0907ccf775caf9a5f0fdd6bd8c5a.dir
      size: 1266525
      nfiles: 513
  condense@ddos-svc-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.7/symmetry_true/
      hash: md5
      md5: 0f425c4ce76b1fb466bcd78e94d80aa6.dir
      size: 1265088
      nfiles: 513
  condense@ddos-svc-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.7/symmetry_false/
      hash: md5
      md5: f488d7ecc864e649d33517328985db18.dir
      size: 1266340
      nfiles: 513
  condense@ddos-svc-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.6/symmetry_true/
      hash: md5
      md5: dda030acde4846a29ce050b069f48963.dir
      size: 1265196
      nfiles: 513
  condense@ddos-svc-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.6/symmetry_false/
      hash: md5
      md5: 97a42fd998b925d78243f70cf1d48c83.dir
      size: 1266740
      nfiles: 513
  condense@ddos-svc-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.5/symmetry_true/
      hash: md5
      md5: aadb5fa2962586e292e51d0ad28974f6.dir
      size: 1264817
      nfiles: 513
  condense@ddos-svc-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.5/symmetry_false/
      hash: md5
      md5: 3388e104c317a3d235af411d63c568fc.dir
      size: 1266315
      nfiles: 513
  condense@ddos-svc-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.4/symmetry_true/
      hash: md5
      md5: c388ddb3fa63a9417ac1cdbf432a3800.dir
      size: 1264991
      nfiles: 513
  condense@ddos-svc-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.4/symmetry_false/
      hash: md5
      md5: e5d4f8699f478d3ed772610e11afa9a5.dir
      size: 1266837
      nfiles: 513
  condense@ddos-svc-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.3/symmetry_true/
      hash: md5
      md5: 62b47a43e6d3fb795f2d8be8fd701ac1.dir
      size: 1264639
      nfiles: 513
  condense@ddos-svc-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.3/symmetry_false/
      hash: md5
      md5: ef6fa402451fbc778cc265530a779d78.dir
      size: 1266610
      nfiles: 513
  condense@ddos-svc-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.2/symmetry_true/
      hash: md5
      md5: 4c9ebd0f45914fbf96497e9fa2f9c165.dir
      size: 1264842
      nfiles: 513
  condense@ddos-svc-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.2/symmetry_false/
      hash: md5
      md5: d46d97871ea4a3f54abccf48af9a739b.dir
      size: 1266953
      nfiles: 513
  condense@ddos-svc-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.1/symmetry_true/
      hash: md5
      md5: 4ccb0adea75d5875fcec813abfd123b0.dir
      size: 1264414
      nfiles: 513
  condense@ddos-svc-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.1/symmetry_false/
      hash: md5
      md5: 4a0a45a159fde66f111a677a1dd48afd.dir
      size: 1266852
      nfiles: 513
  condense@ddos-logistic-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.9
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.9/symmetry_true/
      hash: md5
      md5: 120ece1c2379e3e6a991efb79d290f4f.dir
      size: 1408794
      nfiles: 513
  condense@ddos-logistic-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.9
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.9/symmetry_false/
      hash: md5
      md5: 17ae3a9e99c8ba8b67e8d0735df33c08.dir
      size: 1404057
      nfiles: 513
  condense@ddos-logistic-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.8
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.8/symmetry_true/
      hash: md5
      md5: 06f5885001dac43d0fcd2c2a425a57be.dir
      size: 1316115
      nfiles: 513
  condense@ddos-logistic-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.8
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.8/symmetry_false/
      hash: md5
      md5: 35c9255668d57bc3011b9ab81fd6e751.dir
      size: 1493127
      nfiles: 513
  condense@ddos-logistic-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.7
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.7/symmetry_true/
      hash: md5
      md5: 1018be5cc34d267e3b2e06ab2b16312c.dir
      size: 1406898
      nfiles: 513
  condense@ddos-logistic-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.7
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.7/symmetry_false/
      hash: md5
      md5: ff6814e580be8aebe0652108dd572304.dir
      size: 1414822
      nfiles: 513
  condense@ddos-logistic-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.6
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.6/symmetry_true/
      hash: md5
      md5: 73f6ac4aaec1806ae722526d090292d9.dir
      size: 1408713
      nfiles: 513
  condense@ddos-logistic-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.6
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.6/symmetry_false/
      hash: md5
      md5: 22f9b32a8033250ef5d0b03ff7457108.dir
      size: 1411557
      nfiles: 513
  condense@ddos-logistic-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.5
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.5/symmetry_true/
      hash: md5
      md5: 736b195d2d2df0f616c418e2c3844b90.dir
      size: 1405495
      nfiles: 513
  condense@ddos-logistic-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.5
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.5/symmetry_false/
      hash: md5
      md5: 29623d53a0dea2ab4ba379b22f3372eb.dir
      size: 1404698
      nfiles: 513
  condense@ddos-logistic-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.4
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.4/symmetry_true/
      hash: md5
      md5: f84a44aea111eae29fdbc3ef49d56810.dir
      size: 1412716
      nfiles: 513
  condense@ddos-logistic-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.4
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.4/symmetry_false/
      hash: md5
      md5: 8e47c9cd2446e0c943357b9b893c20f5.dir
      size: 1412721
      nfiles: 513
  condense@ddos-logistic-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.3
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.3/symmetry_true/
      hash: md5
      md5: 6c07b0b7ffc7248cbcb09e7635a0842f.dir
      size: 1405450
      nfiles: 513
  condense@ddos-logistic-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.3
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.3/symmetry_false/
      hash: md5
      md5: 6af0ff66710a5910b14ba3fbde089fd6.dir
      size: 1411532
      nfiles: 513
  condense@ddos-logistic-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.2
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.2/symmetry_true/
      hash: md5
      md5: 85b9272596ab48ea631055ac6f243921.dir
      size: 1408585
      nfiles: 513
  condense@ddos-logistic-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.2
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.2/symmetry_false/
      hash: md5
      md5: 4f3d354213f4b802f014d6fa0b2c1d57.dir
      size: 1411384
      nfiles: 513
  condense@ddos-logistic-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.1
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.1/symmetry_true/
      hash: md5
      md5: fdaccaa8456c9d781ef2f3dc10d1df16.dir
      size: 1413666
      nfiles: 513
  condense@ddos-logistic-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.1
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.1/symmetry_false/
      hash: md5
      md5: 3038984e5543418fa351645b47a27aac.dir
      size: 1412802
      nfiles: 513
  condense@kdd_nsl-knn-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_true/
      hash: md5
      md5: 2afba962f5b852ba0a42ef042d891452.dir
      size: 1237480
      nfiles: 513
  condense@kdd_nsl-knn-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_false/
      hash: md5
      md5: 2c69d36ead4f0c500872404b3992f19d.dir
      size: 1190210
      nfiles: 513
  condense@kdd_nsl-knn-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_true/
      hash: md5
      md5: 01b9f69342017f4d91187df94e471920.dir
      size: 1255031
      nfiles: 513
  condense@kdd_nsl-knn-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_false/
      hash: md5
      md5: ccc861f3000c39de3caf4cc6fa792a29.dir
      size: 1228456
      nfiles: 513
  condense@kdd_nsl-knn-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_true/
      hash: md5
      md5: e32900cef4eeef89d8ceeb548f30ddf5.dir
      size: 1248952
      nfiles: 513
  condense@kdd_nsl-knn-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_false/
      hash: md5
      md5: 2d75232663ae2784e95f89584fecb876.dir
      size: 1242185
      nfiles: 513
  condense@kdd_nsl-knn-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_true/
      hash: md5
      md5: 4675e2e56f039aa3f1bd5df7ffdec60d.dir
      size: 1246053
      nfiles: 513
  condense@kdd_nsl-knn-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_false/
      hash: md5
      md5: b4a1e6ce6dc0115088674261ba0e1ed8.dir
      size: 1248580
      nfiles: 513
  condense@kdd_nsl-knn-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_true/
      hash: md5
      md5: 266348eb0fcf1f29a434310d3a7570d5.dir
      size: 1249899
      nfiles: 513
  condense@kdd_nsl-knn-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_false/
      hash: md5
      md5: 3e4434b7ebbe06d2c319f8eba0a94d99.dir
      size: 1248928
      nfiles: 513
  condense@kdd_nsl-knn-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_true/
      hash: md5
      md5: a46a125f68f49dac139a6269fe47db45.dir
      size: 1253299
      nfiles: 513
  condense@kdd_nsl-knn-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_false/
      hash: md5
      md5: 1d4640f481fffd4f56a4a78e4fc788a3.dir
      size: 1237355
      nfiles: 513
  condense@kdd_nsl-knn-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_true/
      hash: md5
      md5: 2176e1739ea08ebd7fd893ca9edcdbea.dir
      size: 1250453
      nfiles: 513
  condense@kdd_nsl-knn-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_false/
      hash: md5
      md5: b49f584d75f1749719f111de1cc6e350.dir
      size: 1243362
      nfiles: 513
  condense@kdd_nsl-knn-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_true/
      hash: md5
      md5: fdbb7c62fc01858ff57b1c0cc0a8705c.dir
      size: 1243169
      nfiles: 513
  condense@kdd_nsl-knn-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_false/
      hash: md5
      md5: 5cdacf7a9f2ad569f416ec9de9a74f6a.dir
      size: 1256553
      nfiles: 513
  condense@kdd_nsl-knn-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_true/
      hash: md5
      md5: 248f9b6e8225c6a221015c3802f7ea00.dir
      size: 1234717
      nfiles: 513
  condense@kdd_nsl-knn-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_false/
      hash: md5
      md5: 5b257ab195bc2ffca8d134310b3b4c9a.dir
      size: 1253497
      nfiles: 513
  condense@kdd_nsl-svc-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_true/
      hash: md5
      md5: 41566d5cf53eca27946e6f24ead2a91e.dir
      size: 1370992
      nfiles: 513
  condense@kdd_nsl-svc-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_false/
      hash: md5
      md5: 5695b25449234b0e75e32b7565bf4b6a.dir
      size: 1374167
      nfiles: 513
  condense@kdd_nsl-svc-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_true/
      hash: md5
      md5: dcaf4e03fa9180cfb81bd0225ded40f8.dir
      size: 1371875
      nfiles: 513
  condense@kdd_nsl-svc-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_false/
      hash: md5
      md5: 33bb676163f9b11b1c971f9531ae4f94.dir
      size: 1374132
      nfiles: 513
  condense@kdd_nsl-svc-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_true/
      hash: md5
      md5: 62be138a5cb1b151398e944a3b9e5895.dir
      size: 1371845
      nfiles: 513
  condense@kdd_nsl-svc-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_false/
      hash: md5
      md5: f09794bdf8e316e70a51015fd7e00871.dir
      size: 1374242
      nfiles: 513
  condense@kdd_nsl-svc-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_true/
      hash: md5
      md5: d94c7052568f1eaf7f6b2f358f289b00.dir
      size: 1371842
      nfiles: 513
  condense@kdd_nsl-svc-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_false/
      hash: md5
      md5: ce1cfe8a2ce74813a11600b27cff6e28.dir
      size: 1373875
      nfiles: 513
  condense@kdd_nsl-svc-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_true/
      hash: md5
      md5: e5b7f29e624eee174faa6d319267f4b1.dir
      size: 1372059
      nfiles: 513
  condense@kdd_nsl-svc-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_false/
      hash: md5
      md5: 3e961242d3793ab916308a94e73fe8c2.dir
      size: 1374132
      nfiles: 513
  condense@kdd_nsl-svc-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_true/
      hash: md5
      md5: bbb8684982f07916ac56df3ebfdb29ba.dir
      size: 1372035
      nfiles: 513
  condense@kdd_nsl-svc-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_false/
      hash: md5
      md5: 974cdad120d2b964eafa1e6eb3a06412.dir
      size: 1374273
      nfiles: 513
  compile@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_logistic  --results_file
      sms_spam/reports/gzip_logistic.csv
    deps:
    - path: sms_spam/reports/gzip_logistic/
      hash: md5
      md5: e1ab5f338cd1a611cb5b65abc42c5cbf.dir
      size: 12783134
      nfiles: 7723
    outs:
    - path: sms_spam/reports/gzip_logistic.csv
      hash: md5
      md5: 0cb482054d5131fda441b9cba2280737
      size: 3094718
  clean@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_logistic.csv
      -o sms_spam/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_logistic.csv
      hash: md5
      md5: 0cb482054d5131fda441b9cba2280737
      size: 3094718
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 9b32412d5e95b917a65cd2b8a3e3a5cf
      size: 990394
  precompute_matrices@truthseeker-svc-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_svc_truthseeker
      files.reports=reports/condense/svc/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/svc/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/svc/gzip/symmetry_true
      hash: md5
      md5: c75d3265bfaca06ab0ab8d8299821f0e.dir
      size: 9856
      nfiles: 5
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
  precompute_matrices@truthseeker-svc-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_svc_truthseeker
      files.reports=reports/condense/svc/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/svc/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/svc/gzip/symmetry_false
      hash: md5
      md5: 6caaaad96eecd61f53865d9a2e42fd02.dir
      size: 9853
      nfiles: 5
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  condense@kdd_nsl-svc-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_true/
      hash: md5
      md5: f9f366758f0d2bbbac82bb692261a941.dir
      size: 1372342
      nfiles: 513
  condense@kdd_nsl-svc-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_false/
      hash: md5
      md5: 7ce2471af51af73d979de7e81dad216c.dir
      size: 1373956
      nfiles: 513
  condense@kdd_nsl-svc-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_true/
      hash: md5
      md5: 8c6f90d3d540f45899ce1b23b77c1019.dir
      size: 1372357
      nfiles: 513
  condense@kdd_nsl-svc-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_false/
      hash: md5
      md5: a51b1fd78c28fd242602cbf4e36d97ea.dir
      size: 1374130
      nfiles: 513
  condense@kdd_nsl-svc-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_true/
      hash: md5
      md5: 8b576dce50fd54af82d85d1788a8ee02.dir
      size: 1371969
      nfiles: 513
  condense@kdd_nsl-svc-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_false/
      hash: md5
      md5: 5ae2dab64ead2ce7bcc617bdffbc0dcb.dir
      size: 1373655
      nfiles: 513
  condense@kdd_nsl-logistic-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_true/
      hash: md5
      md5: 6898beb5cc957aacbe5581e15656e535.dir
      size: 1307758
      nfiles: 513
  condense@kdd_nsl-logistic-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_false/
      hash: md5
      md5: f01bd811c7dee0bab74564bcb7b4896b.dir
      size: 1311012
      nfiles: 513
  condense@kdd_nsl-logistic-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_true/
      hash: md5
      md5: 18a62a4793e1c88b4fdb44606de43910.dir
      size: 1308432
      nfiles: 513
  condense@kdd_nsl-logistic-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_false/
      hash: md5
      md5: 3c697790e24d1d1ef4f1259d64bd27f1.dir
      size: 1309470
      nfiles: 513
  condense@kdd_nsl-logistic-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_true/
      hash: md5
      md5: a8f3e087eb58f72403693976c1035e24.dir
      size: 1309607
      nfiles: 513
  condense@kdd_nsl-logistic-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_false/
      hash: md5
      md5: e8b296c84804bfc012df3816a226085b.dir
      size: 1313078
      nfiles: 513
  condense@kdd_nsl-logistic-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_true/
      hash: md5
      md5: 8f3ae20b1b8e9b918d78dfa91bcc20ed.dir
      size: 1307927
      nfiles: 513
  condense@kdd_nsl-logistic-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_false/
      hash: md5
      md5: 42c3ecb676aaf2c9c7e0de58bd7cae91.dir
      size: 1310996
      nfiles: 513
  condense@kdd_nsl-logistic-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_true/
      hash: md5
      md5: e6796bdb345730bfef9352ee6c07b720.dir
      size: 1307056
      nfiles: 513
  condense@kdd_nsl-logistic-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_false/
      hash: md5
      md5: 8344ccf6369a9e4e61adfe00900f9653.dir
      size: 1308502
      nfiles: 513
  condense@kdd_nsl-logistic-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_true/
      hash: md5
      md5: 912c280625f51a92647aef96a9405407.dir
      size: 1311970
      nfiles: 513
  condense@kdd_nsl-logistic-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_false/
      hash: md5
      md5: e935ff137104735f8932859d26e33ecb.dir
      size: 1311402
      nfiles: 513
  condense@kdd_nsl-logistic-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_true/
      hash: md5
      md5: 4caf3f13ca2d206aabc8b25acc1e07bd.dir
      size: 1308964
      nfiles: 513
  condense@kdd_nsl-logistic-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_false/
      hash: md5
      md5: 6f08a05cb24298e18d498567faaeb5ec.dir
      size: 1312032
      nfiles: 513
  condense@kdd_nsl-logistic-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_true/
      hash: md5
      md5: 8875891a512eaeae95e42e0b7c73bd4a.dir
      size: 1307202
      nfiles: 513
  condense@kdd_nsl-logistic-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_false/
      hash: md5
      md5: 5dbb016a212394629051a8e00a8cab0c.dir
      size: 1310960
      nfiles: 513
  condense@kdd_nsl-logistic-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_true/
      hash: md5
      md5: 3b288c3b561465b520c912fb1dd67386.dir
      size: 1309711
      nfiles: 513
  condense@kdd_nsl-logistic-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_false/
      hash: md5
      md5: 72812a991ef3c94cfd85b862f4425a21.dir
      size: 1312046
      nfiles: 513
  condense@truthseeker-knn-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.9/symmetry_true/
      hash: md5
      md5: 021171306cdacc72fea12a3bac89955a.dir
      size: 1312792
      nfiles: 513
  condense@truthseeker-knn-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.9/symmetry_false/
      hash: md5
      md5: 17dcd24b1a2551f68eda4c99acd5a570.dir
      size: 1291979
      nfiles: 513
  condense@truthseeker-knn-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.8/symmetry_true/
      hash: md5
      md5: 0562d2f06475f71cdaef602364515fc7.dir
      size: 1294849
      nfiles: 513
  condense@truthseeker-knn-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.8/symmetry_false/
      hash: md5
      md5: f44f0b20bc3b1a42a693508cb0051775.dir
      size: 1292127
      nfiles: 513
  condense@truthseeker-knn-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.7/symmetry_true/
      hash: md5
      md5: f2c5f4c30fb3ff8507e7352cca177466.dir
      size: 1297149
      nfiles: 513
  condense@truthseeker-knn-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.7/symmetry_false/
      hash: md5
      md5: 22463c178ce028d3ba7ebeee4a61718c.dir
      size: 1320683
      nfiles: 513
  condense@truthseeker-knn-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.6/symmetry_true/
      hash: md5
      md5: 3a2162df1b72a549a94aba9373e6e78f.dir
      size: 1313880
      nfiles: 513
  condense@truthseeker-knn-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.6/symmetry_false/
      hash: md5
      md5: e6e52a06d8739c14db2512d3dddd1792.dir
      size: 1315228
      nfiles: 513
  condense@truthseeker-knn-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.5/symmetry_true/
      hash: md5
      md5: 2f775cb798ae83fa0449d9908593438c.dir
      size: 1300043
      nfiles: 513
  condense@truthseeker-knn-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.5/symmetry_false/
      hash: md5
      md5: 73a866fe0c43cc4ceb8ad587d976a459.dir
      size: 1315862
      nfiles: 513
  condense@truthseeker-knn-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.4/symmetry_true/
      hash: md5
      md5: 86dfc00a4c414e9e00de53273a2d811b.dir
      size: 1301594
      nfiles: 513
  condense@truthseeker-knn-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.4/symmetry_false/
      hash: md5
      md5: bb5d2c3647fccdedffafd367097c4611.dir
      size: 1315687
      nfiles: 513
  condense@truthseeker-knn-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.3/symmetry_true/
      hash: md5
      md5: 94243903e6e52c74bba06ecd3481bddc.dir
      size: 1319099
      nfiles: 513
  condense@truthseeker-knn-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.3/symmetry_false/
      hash: md5
      md5: 4de9320e439a7ab743eafffff82d70fd.dir
      size: 1302582
      nfiles: 513
  condense@truthseeker-knn-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.2/symmetry_true/
      hash: md5
      md5: a71b130f7dc444b9ee6e75f91eed23be.dir
      size: 1321367
      nfiles: 513
  condense@truthseeker-knn-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.2/symmetry_false/
      hash: md5
      md5: d997fcf88628ed04689ad31f943c1cca.dir
      size: 1230347
      nfiles: 513
  condense@truthseeker-knn-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.1/symmetry_true/
      hash: md5
      md5: 3bcf648ade40cb41d2e0f14317be2f4f.dir
      size: 1312191
      nfiles: 513
  condense@truthseeker-knn-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.1/symmetry_false/
      hash: md5
      md5: 6cc76f1cec6cbedb7a2f471005bd9c76.dir
      size: 1314344
      nfiles: 513
  condense@truthseeker-svc-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.9/symmetry_true/
      hash: md5
      md5: 500797e929d0aec6fae8be99481207d7.dir
      size: 1379989
      nfiles: 513
  condense@truthseeker-svc-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.9/symmetry_false/
      hash: md5
      md5: 6c7cf95b99d8bf487462851f03791dfe.dir
      size: 1390124
      nfiles: 513
  condense@truthseeker-svc-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.8/symmetry_true/
      hash: md5
      md5: 5b5f1306c19e3ef1069dadf3bf309b67.dir
      size: 1384434
      nfiles: 513
  condense@truthseeker-svc-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.8/symmetry_false/
      hash: md5
      md5: 5c917586bdf2cbeadb1aed7e6a5b8e18.dir
      size: 1390113
      nfiles: 513
  condense@truthseeker-svc-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.7/symmetry_true/
      hash: md5
      md5: 9aaa9fa0aa46a9107adeb009a5e9d618.dir
      size: 1384949
      nfiles: 513
  condense@truthseeker-svc-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.7/symmetry_false/
      hash: md5
      md5: 9393a42d1743e4a3fb96b32dba252316.dir
      size: 1390239
      nfiles: 513
  condense@truthseeker-svc-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.6/symmetry_true/
      hash: md5
      md5: 8c96938a05d907cf67ede22a5a776c02.dir
      size: 1385150
      nfiles: 513
  condense@truthseeker-svc-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.6/symmetry_false/
      hash: md5
      md5: b13cbaa092254db40f0b6062788a01c4.dir
      size: 1390224
      nfiles: 513
  condense@truthseeker-svc-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.5/symmetry_true/
      hash: md5
      md5: 98eaed084e18bcd49ffba2c7d99bfaa3.dir
      size: 1387273
      nfiles: 513
  condense@truthseeker-svc-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.5/symmetry_false/
      hash: md5
      md5: d2f4e4c8cbbc15f0053b5fe9c034cfa1.dir
      size: 1390206
      nfiles: 513
  condense@truthseeker-svc-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.4/symmetry_true/
      hash: md5
      md5: 2498ec21727bf2afa04881e2b696e4ad.dir
      size: 1388374
      nfiles: 513
  condense@truthseeker-svc-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.4/symmetry_false/
      hash: md5
      md5: df9b1060df399f266c970805d4f06d6d.dir
      size: 1390099
      nfiles: 513
  condense@truthseeker-svc-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.3/symmetry_true/
      hash: md5
      md5: 2807e6742066e1add334cb6a52a04b98.dir
      size: 1388251
      nfiles: 513
  condense@truthseeker-svc-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.3/symmetry_false/
      hash: md5
      md5: 5bba2df631ffd6b80997b70280d218c4.dir
      size: 1390400
      nfiles: 513
  condense@truthseeker-svc-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.2/symmetry_true/
      hash: md5
      md5: 31afe3f31ce607581e354ead63115f49.dir
      size: 1388473
      nfiles: 513
  condense@truthseeker-svc-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.2/symmetry_false/
      hash: md5
      md5: c85ab36cfbf291783f9597cd640a1c7f.dir
      size: 1390370
      nfiles: 513
  condense@truthseeker-svc-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.1/symmetry_true/
      hash: md5
      md5: cae8c0cd53825651a7014536380b0d42.dir
      size: 1388343
      nfiles: 513
  condense@truthseeker-svc-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.1/symmetry_false/
      hash: md5
      md5: a6703a5a4d4bdeefa5ac94c192d2dfa8.dir
      size: 1390380
      nfiles: 513
  condense@truthseeker-logistic-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.9/symmetry_true/
      hash: md5
      md5: dad62edb52e2563e8e587a59c798ff97.dir
      size: 1370198
      nfiles: 513
  condense@truthseeker-logistic-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.9/symmetry_false/
      hash: md5
      md5: 504b9fd36ad7f377b8bf45fa0431ba41.dir
      size: 1328602
      nfiles: 513
  condense@truthseeker-logistic-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.8/symmetry_true/
      hash: md5
      md5: 1b026e857b75fa70fca1f21f883603a6.dir
      size: 1388944
      nfiles: 513
  condense@truthseeker-logistic-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.8/symmetry_false/
      hash: md5
      md5: 2751c5bb6d33b75609c93de5a43adf6c.dir
      size: 1322594
      nfiles: 513
  condense@truthseeker-logistic-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.7/symmetry_true/
      hash: md5
      md5: d3d44c3424c2cd4e1bbd92844206bc10.dir
      size: 1369668
      nfiles: 513
  condense@truthseeker-logistic-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.7/symmetry_false/
      hash: md5
      md5: 18596bd4bd7bebf3b4718fb990e6f765.dir
      size: 1326524
      nfiles: 513
  condense@truthseeker-logistic-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.6/symmetry_true/
      hash: md5
      md5: 0d27e0f606efc6aa6e24664a80ed7e84.dir
      size: 1356545
      nfiles: 513
  condense@truthseeker-logistic-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.6/symmetry_false/
      hash: md5
      md5: b88961a8e481e452ff6a9ecde5d4d435.dir
      size: 1326449
      nfiles: 513
  condense@truthseeker-logistic-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.5/symmetry_true/
      hash: md5
      md5: 12dab01475447c15d34258ea37eea60a.dir
      size: 1360310
      nfiles: 513
  condense@truthseeker-logistic-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.5/symmetry_false/
      hash: md5
      md5: b52ac3ffe72b93ec35acdf8c137589c2.dir
      size: 1332596
      nfiles: 513
  condense@truthseeker-logistic-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.4/symmetry_true/
      hash: md5
      md5: 5a37d44cbf40e7512d0aac6362edbd0e.dir
      size: 1388958
      nfiles: 513
  condense@truthseeker-logistic-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.4/symmetry_false/
      hash: md5
      md5: 1376692e9fe01781dd0154c88c284ce0.dir
      size: 1322594
      nfiles: 513
  condense@truthseeker-logistic-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.3/symmetry_true/
      hash: md5
      md5: 11980f39445de97d378a1750a85c6992.dir
      size: 1361800
      nfiles: 513
  condense@truthseeker-logistic-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.3/symmetry_false/
      hash: md5
      md5: d13413952ee1ed505cdf0e62a7182474.dir
      size: 1330966
      nfiles: 513
  condense@truthseeker-logistic-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.2/symmetry_true/
      hash: md5
      md5: 880678267db096d6e3738854e02f3960.dir
      size: 1366212
      nfiles: 513
  condense@truthseeker-logistic-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.2/symmetry_false/
      hash: md5
      md5: e4615ab146309ae985aff75e2825966b.dir
      size: 1329131
      nfiles: 513
  condense@truthseeker-logistic-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.1/symmetry_true/
      hash: md5
      md5: cd1f7ce229113a4ab8b07c861ab663b7.dir
      size: 1401513
      nfiles: 513
  condense@truthseeker-logistic-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.1/symmetry_false/
      hash: md5
      md5: b40eaa4e1bea59de60de47f54bd59ab4.dir
      size: 1327060
      nfiles: 513
  condense@sms_spam-knn-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.9/symmetry_true/
      hash: md5
      md5: 9837e8c905138b23bf7d0323d9e13bcf.dir
      size: 1254486
      nfiles: 513
  condense@sms_spam-knn-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.9/symmetry_false/
      hash: md5
      md5: 0a8933a2f453044a3c4dd0b899e1c1ee.dir
      size: 1253578
      nfiles: 513
  condense@sms_spam-knn-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.8/symmetry_true/
      hash: md5
      md5: b95802be4d0b536123adabb11b03b741.dir
      size: 1254394
      nfiles: 513
  condense@sms_spam-knn-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.8/symmetry_false/
      hash: md5
      md5: d0c877c7ab87a2fe39ab3a858ddd1e98.dir
      size: 1252027
      nfiles: 513
  condense@sms_spam-knn-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.7/symmetry_true/
      hash: md5
      md5: 713ef37d962089a310dd7a3b611d1922.dir
      size: 1255346
      nfiles: 513
  condense@sms_spam-knn-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.7/symmetry_false/
      hash: md5
      md5: 817c3011d81c3854da44f11ea42b872e.dir
      size: 1263096
      nfiles: 513
  condense@sms_spam-knn-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.6/symmetry_true/
      hash: md5
      md5: 0e874d6d3bd014cef67a3fdde0471f78.dir
      size: 1263671
      nfiles: 513
  condense@sms_spam-knn-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.6/symmetry_false/
      hash: md5
      md5: 3aa525a82ad6f85b4725dd63100e1e58.dir
      size: 1258886
      nfiles: 513
  condense@sms_spam-knn-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.5/symmetry_true/
      hash: md5
      md5: 50756898c09d70509c7bde82325b0234.dir
      size: 1258202
      nfiles: 513
  condense@sms_spam-knn-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.5/symmetry_false/
      hash: md5
      md5: 0d7c306e0d7cf7cd331c5c53c78e761f.dir
      size: 1256496
      nfiles: 513
  condense@sms_spam-knn-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.4/symmetry_true/
      hash: md5
      md5: 3700a983392074586055bf2b10960cbb.dir
      size: 1251329
      nfiles: 513
  condense@sms_spam-knn-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.4/symmetry_false/
      hash: md5
      md5: 96661f1fbe6843eae36e0e5fc1da3599.dir
      size: 1256076
      nfiles: 513
  condense@sms_spam-knn-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.3/symmetry_true/
      hash: md5
      md5: fcd6cf99b8206ec876beaf5f5b4c1aa2.dir
      size: 1240744
      nfiles: 513
  condense@sms_spam-knn-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.3/symmetry_false/
      hash: md5
      md5: ac191a30f44e4b24f80bbc569dcac3e6.dir
      size: 1254648
      nfiles: 513
  condense@sms_spam-knn-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.2/symmetry_true/
      hash: md5
      md5: 885407b620d21b4b4a046f26cfeac6d3.dir
      size: 1258175
      nfiles: 513
  condense@sms_spam-knn-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.2/symmetry_false/
      hash: md5
      md5: 3db0041c8eeedb78091aa38cc50021dd.dir
      size: 1247918
      nfiles: 513
  condense@sms_spam-knn-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.1/symmetry_true/
      hash: md5
      md5: 2ee41a1502f452bde84404d13adef262.dir
      size: 1251332
      nfiles: 513
  condense@sms_spam-knn-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.1/symmetry_false/
      hash: md5
      md5: 42e8cb44f654d7dabe31f6b002721cdc.dir
      size: 1240122
      nfiles: 513
  condense@sms_spam-svc-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.9/symmetry_true/
      hash: md5
      md5: f4a47085f3eb87385cddae34ff8b553d.dir
      size: 1372192
      nfiles: 513
  condense@sms_spam-svc-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.9/symmetry_false/
      hash: md5
      md5: 1e1dc297cea6457b59e7f7cffc5a5fd5.dir
      size: 1373535
      nfiles: 513
  condense@sms_spam-svc-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.8/symmetry_true/
      hash: md5
      md5: f22b1e9751ea79a4055ecd8379d5b890.dir
      size: 1372123
      nfiles: 513
  condense@sms_spam-svc-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.8/symmetry_false/
      hash: md5
      md5: 54105f23dd04a1dde5595ee9a4022c03.dir
      size: 1373578
      nfiles: 513
  condense@sms_spam-svc-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.7/symmetry_true/
      hash: md5
      md5: b050dbed943173b76b6b8578ff0247bc.dir
      size: 1371704
      nfiles: 513
  condense@sms_spam-svc-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.7/symmetry_false/
      hash: md5
      md5: 3829d93764f27b10b1afe0176cdc2612.dir
      size: 1373678
      nfiles: 513
  condense@sms_spam-svc-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.6/symmetry_true/
      hash: md5
      md5: aacb084bb1204c45927042928e38b461.dir
      size: 1372521
      nfiles: 513
  condense@sms_spam-svc-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.6/symmetry_false/
      hash: md5
      md5: 678fe242e9d8c380f8d7b796a1557b8e.dir
      size: 1373811
      nfiles: 513
  condense@sms_spam-svc-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.5/symmetry_true/
      hash: md5
      md5: 99c610e9f3e0a755d1610760f523da4d.dir
      size: 1371890
      nfiles: 513
  condense@sms_spam-svc-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.5/symmetry_false/
      hash: md5
      md5: cc84dedc5b494a1d2fb8fbe080ba24f9.dir
      size: 1373608
      nfiles: 513
  condense@sms_spam-svc-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.4/symmetry_true/
      hash: md5
      md5: 0bf1c8323c752b79195933e1217e8bb7.dir
      size: 1372005
      nfiles: 513
  condense@sms_spam-svc-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.4/symmetry_false/
      hash: md5
      md5: 469a9546e4b64361864d8918f53a2d2c.dir
      size: 1373774
      nfiles: 513
  condense@sms_spam-svc-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.3/symmetry_true/
      hash: md5
      md5: a99c2d7bea229c97815f22dcfcdfa71d.dir
      size: 1371816
      nfiles: 513
  condense@sms_spam-svc-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.3/symmetry_false/
      hash: md5
      md5: c6d499270519b3a42e5ffa8bb62c4cbd.dir
      size: 1373657
      nfiles: 513
  condense@sms_spam-svc-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.2/symmetry_true/
      hash: md5
      md5: 6e9780532cde3e94f6eab2b162b52f6b.dir
      size: 1371862
      nfiles: 513
  condense@sms_spam-svc-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.2/symmetry_false/
      hash: md5
      md5: 5d39021affde68a12954b8ce73e63030.dir
      size: 1373198
      nfiles: 513
  condense@sms_spam-svc-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.1/symmetry_true/
      hash: md5
      md5: 1308b59a15c5d39e82c978dd1e5b93ef.dir
      size: 1371832
      nfiles: 513
  condense@sms_spam-svc-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.1/symmetry_false/
      hash: md5
      md5: 152ccdb91e9742554ecb4fc49de8b4e7.dir
      size: 1373884
      nfiles: 513
  condense@sms_spam-logistic-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.9/symmetry_true/
      hash: md5
      md5: 1e054c62594bd16de3254a1af94f7644.dir
      size: 1312164
      nfiles: 513
  condense@sms_spam-logistic-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.9/symmetry_false/
      hash: md5
      md5: aa7ba5e56fcc43795cca9a418b62addf.dir
      size: 1313808
      nfiles: 513
  condense@sms_spam-logistic-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.8/symmetry_true/
      hash: md5
      md5: 66ff339c84f4a4e0280106bf87fa2180.dir
      size: 1314150
      nfiles: 513
  condense@sms_spam-logistic-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.8/symmetry_false/
      hash: md5
      md5: 4a68cae03d49e7258736106a5fc7707c.dir
      size: 1315073
      nfiles: 513
  condense@sms_spam-logistic-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.7/symmetry_true/
      hash: md5
      md5: b4414b2795403c15627dccdeeb47206e.dir
      size: 1312897
      nfiles: 513
  condense@sms_spam-logistic-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.7/symmetry_false/
      hash: md5
      md5: b136c98481ab763c9a9dbb95d3a2c81e.dir
      size: 1316522
      nfiles: 513
  condense@sms_spam-logistic-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.6/symmetry_true/
      hash: md5
      md5: ae222f05d4d4d2675e5e22d8ddcfdf1b.dir
      size: 1314829
      nfiles: 513
  condense@sms_spam-logistic-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.6/symmetry_false/
      hash: md5
      md5: bd4ca84ab49201505eb939b382b3755b.dir
      size: 1320234
      nfiles: 513
  condense@sms_spam-logistic-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.5/symmetry_true/
      hash: md5
      md5: 860edb48762bf99fd87840a77020b0e3.dir
      size: 1314614
      nfiles: 513
  condense@sms_spam-logistic-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.5/symmetry_false/
      hash: md5
      md5: bcd9aaf110d4423f3752b56ecbd5ac0e.dir
      size: 1310842
      nfiles: 513
  condense@sms_spam-logistic-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.4/symmetry_true/
      hash: md5
      md5: b674eadbe1d661f77962dde649f6cee7.dir
      size: 1309050
      nfiles: 513
  condense@sms_spam-logistic-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.4/symmetry_false/
      hash: md5
      md5: 17e042d71598037589507d6b79229ec1.dir
      size: 1313622
      nfiles: 513
  condense@sms_spam-logistic-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.3/symmetry_true/
      hash: md5
      md5: 2aa3f53b05c3b5cc3890f5b80250726b.dir
      size: 1317530
      nfiles: 513
  condense@sms_spam-logistic-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.3/symmetry_false/
      hash: md5
      md5: e083be3a1996eb0925df9c4fe1e741ee.dir
      size: 1317236
      nfiles: 513
  condense@sms_spam-logistic-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.2/symmetry_true/
      hash: md5
      md5: 4baa2885c96230f0a709a4467de98a3b.dir
      size: 1317729
      nfiles: 513
  condense@sms_spam-logistic-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.2/symmetry_false/
      hash: md5
      md5: b50c359176ccdd964956dc5973481f28.dir
      size: 1319771
      nfiles: 513
  condense@sms_spam-logistic-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.1/symmetry_true/
      hash: md5
      md5: fdbdccdbb253d2154932120db14fb75f.dir
      size: 1330810
      nfiles: 513
  condense@sms_spam-logistic-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.1/symmetry_false/
      hash: md5
      md5: 7989a5aff31194206812db6083f583c8.dir
      size: 1328092
      nfiles: 513
  compile@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_knn  --results_file
      kdd_nsl/reports/gzip_knn.csv
    deps:
    - path: kdd_nsl/reports/gzip_knn/
      hash: md5
      md5: f91e0a22fb19c28243124375bbc063bf.dir
      size: 1501849
      nfiles: 1844
    outs:
    - path: kdd_nsl/reports/gzip_knn.csv
      hash: md5
      md5: 19ccc479cd5dd95bd23deb965ff18333
      size: 583642
  compile@kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_svc  --results_file
      kdd_nsl/reports/gzip_svc.csv
    deps:
    - path: kdd_nsl/reports/gzip_svc/
      hash: md5
      md5: e71469b4322b15e91757013c858615a3.dir
      size: 5471319
      nfiles: 6853
    outs:
    - path: kdd_nsl/reports/gzip_svc.csv
      hash: md5
      md5: 11d263fa61dd955ca4572ec35d18d764
      size: 2371701
  compile@kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_logistic  --results_file
      kdd_nsl/reports/gzip_logistic.csv
    deps:
    - path: kdd_nsl/reports/gzip_logistic/
      hash: md5
      md5: d9edf637efe873737eaf3c755d94b556.dir
      size: 16039167
      nfiles: 8211
    outs:
    - path: kdd_nsl/reports/gzip_logistic.csv
      hash: md5
      md5: 5dd0e8193d9b9ea28229847db3e3eb8b
      size: 3453808
  compile@kdd_nsl-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/knn  --results_file
      kdd_nsl/reports/condense/knn.csv
    deps:
    - path: kdd_nsl/reports/condense/knn/
      hash: md5
      md5: e41f8d18efaaa9ba75fd55077e6da1bb.dir
      size: 131732
      nfiles: 72
    outs:
    - path: kdd_nsl/reports/condense/knn.csv
      hash: md5
      md5: 840b9677773d6b63c6274da94907e9c0
      size: 22755
  compile@kdd_nsl-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/svc  --results_file
      kdd_nsl/reports/condense/svc.csv
    deps:
    - path: kdd_nsl/reports/condense/svc/
      hash: md5
      md5: 7ca663df4ba9926ab7f4920e29df3f1c.dir
      size: 11151238
      nfiles: 6912
    outs:
    - path: kdd_nsl/reports/condense/svc.csv
      hash: md5
      md5: c2ab5ace2067cd70db86305eae0fb6af
      size: 2810187
  compile@kdd_nsl-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/logistic  --results_file
      kdd_nsl/reports/condense/logistic.csv
    deps:
    - path: kdd_nsl/reports/condense/logistic/
      hash: md5
      md5: 3e6ca614ce181350be71cc67898b928d.dir
      size: 26242562
      nfiles: 9684
    outs:
    - path: kdd_nsl/reports/condense/logistic.csv
      hash: md5
      md5: 2ff8f32b7f8579181c8766171ec5f9d0
      size: 4769973
  compile@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_knn  --results_file
      sms_spam/reports/gzip_knn.csv
    deps:
    - path: sms_spam/reports/gzip_knn/
      hash: md5
      md5: 9fbec6efcd390f3da12838147c7e3d1b.dir
      size: 1997485
      nfiles: 1974
    outs:
    - path: sms_spam/reports/gzip_knn.csv
      hash: md5
      md5: 479c305520cb7fd68e69ad19fbe5dafb
      size: 553673
  compile@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_svc  --results_file
      sms_spam/reports/gzip_svc.csv
    deps:
    - path: sms_spam/reports/gzip_svc/
      hash: md5
      md5: 22387d10199bf7f8bb9138f89d3d015c.dir
      size: 5263615
      nfiles: 6865
    outs:
    - path: sms_spam/reports/gzip_svc.csv
      hash: md5
      md5: e14c909e763f029b70ad8657c4658371
      size: 2321585
  compile@sms_spam-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/knn  --results_file
      sms_spam/reports/condense/knn.csv
    deps:
    - path: sms_spam/reports/condense/knn/
      hash: md5
      md5: 3e39971909e1e71f6d21d29108d76ec8.dir
      size: 133161
      nfiles: 73
    outs:
    - path: sms_spam/reports/condense/knn.csv
      hash: md5
      md5: 55e97893a443aad51dd4370a0951fdca
      size: 23711
  compile@sms_spam-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/svc  --results_file
      sms_spam/reports/condense/svc.csv
    deps:
    - path: sms_spam/reports/condense/svc/
      hash: md5
      md5: 2750c66976d11c368c13abdda4c43edb.dir
      size: 11154334
      nfiles: 6912
    outs:
    - path: sms_spam/reports/condense/svc.csv
      hash: md5
      md5: 253159824a88f51cb362182bc0f993b2
      size: 2793922
  compile@sms_spam-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/logistic  --results_file
      sms_spam/reports/condense/logistic.csv
    deps:
    - path: sms_spam/reports/condense/logistic/
      hash: md5
      md5: 07408d7d05d605f8e3a0f3541491f0eb.dir
      size: 12513145
      nfiles: 4617
    outs:
    - path: sms_spam/reports/condense/logistic.csv
      hash: md5
      md5: f16bbfb6c2e43d4e640202242f7c2d04
      size: 2269121
  compile@ddos-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_knn  --results_file
      ddos/reports/gzip_knn.csv
    deps:
    - path: ddos/reports/gzip_knn/
      hash: md5
      md5: 1ab60fa0320c7e97e8e8774ca0b053b0.dir
      size: 1896898
      nfiles: 2332
    outs:
    - path: ddos/reports/gzip_knn.csv
      hash: md5
      md5: fbd3531262b89db3236e23a3ab4456d2
      size: 793517
  compile@ddos-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_svc  --results_file
      ddos/reports/gzip_svc.csv
    deps:
    - path: ddos/reports/gzip_svc/
      hash: md5
      md5: 54970952cf01483852161e2094bc74f5.dir
      size: 6064525
      nfiles: 7626
    outs:
    - path: ddos/reports/gzip_svc.csv
      hash: md5
      md5: 9fafb71c8665e9e6d52d3cde55c95130
      size: 2743185
  compile@ddos-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_logistic  --results_file
      ddos/reports/gzip_logistic.csv
    deps:
    - path: ddos/reports/gzip_logistic/
      hash: md5
      md5: df0d0c540bb11c2ea51dd757cc914b97.dir
      size: 12393330
      nfiles: 9549
    outs:
    - path: ddos/reports/gzip_logistic.csv
      hash: md5
      md5: 7766068bb89240b1c652efde2acba697
      size: 3970297
  compile@ddos-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/knn  --results_file
      ddos/reports/condense/knn.csv
    deps:
    - path: ddos/reports/condense/knn/
      hash: md5
      md5: 8d5b2909f02321315bec4c8da49c2b39.dir
      size: 423600
      nfiles: 231
    outs:
    - path: ddos/reports/condense/knn.csv
      hash: md5
      md5: ac5e6a2cc460ba5b6bb66873880693f7
      size: 74204
  compile@ddos-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/svc  --results_file
      ddos/reports/condense/svc.csv
    deps:
    - path: ddos/reports/condense/svc/
      hash: md5
      md5: 688a4643aed6f543229fb5fac9e7974a.dir
      size: 17587341
      nfiles: 10712
    outs:
    - path: ddos/reports/condense/svc.csv
      hash: md5
      md5: 8d3643da1222d336eb9ee549578a4b27
      size: 4537269
  compile@ddos-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/logistic  --results_file
      ddos/reports/condense/logistic.csv
    deps:
    - path: ddos/reports/condense/logistic/
      hash: md5
      md5: c720262c7dfac73f5648541f8f802f68.dir
      size: 24352597
      nfiles: 11110
    outs:
    - path: ddos/reports/condense/logistic.csv
      hash: md5
      md5: 46413c7ca84819f13ec4a8e90c70da43
      size: 5267338
  compile@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_knn  --results_file
      truthseeker/reports/gzip_knn.csv
    deps:
    - path: truthseeker/reports/gzip_knn/
      hash: md5
      md5: d8fcc3f82a007db506629e55f308c7d4.dir
      size: 2975088
      nfiles: 3129
    outs:
    - path: truthseeker/reports/gzip_knn.csv
      hash: md5
      md5: 1ec24d216e9680d92547069b5cf55f8f
      size: 982277
  compile@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_svc  --results_file
      truthseeker/reports/gzip_svc.csv
    deps:
    - path: truthseeker/reports/gzip_svc/
      hash: md5
      md5: b1affcff5794694b48dcc163be7123ab.dir
      size: 5740613
      nfiles: 7234
    outs:
    - path: truthseeker/reports/gzip_svc.csv
      hash: md5
      md5: b358d8829c17b0c039c7323ce5d78862
      size: 2574238
  compile@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_logistic  --results_file
      truthseeker/reports/gzip_logistic.csv
    deps:
    - path: truthseeker/reports/gzip_logistic/
      hash: md5
      md5: 16ae7e3375fc3b7a9bb9ae01d80d1dc2.dir
      size: 12642049
      nfiles: 7581
    outs:
    - path: truthseeker/reports/gzip_logistic.csv
      hash: md5
      md5: d2b9acf98cd381e3228dd513bc40e4ee
      size: 3151821
  compile@truthseeker-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/knn  --results_file
      truthseeker/reports/condense/knn.csv
    deps:
    - path: truthseeker/reports/condense/knn/
      hash: md5
      md5: d48c8980b56edbe0b87f312e561a843a.dir
      size: 1956464
      nfiles: 1079
    outs:
    - path: truthseeker/reports/condense/knn.csv
      hash: md5
      md5: 083923ecae1d9367567b2aeed9f6a8ab
      size: 347084
  compile@truthseeker-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/svc  --results_file
      truthseeker/reports/condense/svc.csv
    deps:
    - path: truthseeker/reports/condense/svc/
      hash: md5
      md5: 69f19f57cb9d7e02568f87bf9b072355.dir
      size: 11256925
      nfiles: 6918
    outs:
    - path: truthseeker/reports/condense/svc.csv
      hash: md5
      md5: ef3163c8580f8010914aae79cd1c02f9
      size: 2895767
  compile@truthseeker-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/logistic  --results_file
      truthseeker/reports/condense/logistic.csv
    deps:
    - path: truthseeker/reports/condense/logistic/
      hash: md5
      md5: 33a33f9a8d946f09859b10d95c117990.dir
      size: 12667717
      nfiles: 4845
    outs:
    - path: truthseeker/reports/condense/logistic.csv
      hash: md5
      md5: 93468df5185dd7aa6328b28ae8c2c4b2
      size: 2413078
  clean@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_knn.csv -o kdd_nsl/plots/clean/gzip_knn.csv
      -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_knn.csv
      hash: md5
      md5: 19ccc479cd5dd95bd23deb965ff18333
      size: 583642
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_knn.csv
      hash: md5
      md5: 5183accf3b4cec3507af6d41035aca3e
      size: 236093
  clean@kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_svc.csv -o kdd_nsl/plots/clean/gzip_svc.csv
      -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_svc.csv
      hash: md5
      md5: 11d263fa61dd955ca4572ec35d18d764
      size: 2371701
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_svc.csv
      hash: md5
      md5: ba92b57c69a9b54e349f8d294dea66f3
      size: 1119867
  clean@kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_logistic.csv
      -o kdd_nsl/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_logistic.csv
      hash: md5
      md5: 5dd0e8193d9b9ea28229847db3e3eb8b
      size: 3453808
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_logistic.csv
      hash: md5
      md5: c4caf6e4c1ce1557906b9e0f974590ce
      size: 630069
  clean@kdd_nsl-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/knn.csv
      -o kdd_nsl/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/knn.csv
      hash: md5
      md5: 840b9677773d6b63c6274da94907e9c0
      size: 22755
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/knn.csv
      hash: md5
      md5: da2f35e198b773af34ebecc309086763
      size: 18297
  clean@kdd_nsl-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/svc.csv
      -o kdd_nsl/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/svc.csv
      hash: md5
      md5: c2ab5ace2067cd70db86305eae0fb6af
      size: 2810187
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/svc.csv
      hash: md5
      md5: 21949e3a8987d3ab2944f4fc0cabbf83
      size: 2256964
  clean@kdd_nsl-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/logistic.csv
      -o kdd_nsl/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/logistic.csv
      hash: md5
      md5: 2ff8f32b7f8579181c8766171ec5f9d0
      size: 4769973
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/logistic.csv
      hash: md5
      md5: 36eb5e897de0c0f0d91964edd3a9b6ea
      size: 24188
  clean@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_knn.csv -o
      sms_spam/plots/clean/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_knn.csv
      hash: md5
      md5: 479c305520cb7fd68e69ad19fbe5dafb
      size: 553673
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_knn.csv
      hash: md5
      md5: f8d1688ee397c3c7efac51ea71ff56f0
      size: 244914
  clean@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_svc.csv -o
      sms_spam/plots/clean/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_svc.csv
      hash: md5
      md5: e14c909e763f029b70ad8657c4658371
      size: 2321585
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_svc.csv
      hash: md5
      md5: 4b8a2f68337500c78cf71c8393cc69e2
      size: 1143302
  clean@sms_spam-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/knn.csv
      -o sms_spam/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/knn.csv
      hash: md5
      md5: 55e97893a443aad51dd4370a0951fdca
      size: 23711
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/knn.csv
      hash: md5
      md5: 28f017770509c6ee24a867d5b3d0ac49
      size: 18326
  clean@sms_spam-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/svc.csv
      -o sms_spam/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/svc.csv
      hash: md5
      md5: 253159824a88f51cb362182bc0f993b2
      size: 2793922
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/svc.csv
      hash: md5
      md5: 3f96b41e49f034c2061aeb241616057d
      size: 2242842
  clean@sms_spam-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/logistic.csv
      -o sms_spam/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/logistic.csv
      hash: md5
      md5: f16bbfb6c2e43d4e640202242f7c2d04
      size: 2269121
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/logistic.csv
      hash: md5
      md5: f5f94c46c670e600818b43d08a950668
      size: 10469
  clean@ddos-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_knn.csv -o ddos/plots/clean/gzip_knn.csv
      -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_knn.csv
      hash: md5
      md5: fbd3531262b89db3236e23a3ab4456d2
      size: 793517
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_knn.csv
      hash: md5
      md5: fe9483158f19d710e9e1db063d89e3f3
      size: 459829
  clean@ddos-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_svc.csv -o ddos/plots/clean/gzip_svc.csv
      -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_svc.csv
      hash: md5
      md5: 9fafb71c8665e9e6d52d3cde55c95130
      size: 2743185
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_svc.csv
      hash: md5
      md5: d823d04da8d00669e3445c6c11536a12
      size: 1435798
  clean@ddos-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_logistic.csv -o
      ddos/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_logistic.csv
      hash: md5
      md5: 7766068bb89240b1c652efde2acba697
      size: 3970297
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 0a2932ab580b1fd4e3aafab2452d0604
      size: 1939402
  clean@ddos-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/knn.csv -o
      ddos/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/knn.csv
      hash: md5
      md5: ac5e6a2cc460ba5b6bb66873880693f7
      size: 74204
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/knn.csv
      hash: md5
      md5: a940585ea958633a1a1cf93465e51107
      size: 60266
  clean@ddos-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/svc.csv -o
      ddos/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/svc.csv
      hash: md5
      md5: 8d3643da1222d336eb9ee549578a4b27
      size: 4537269
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/svc.csv
      hash: md5
      md5: 78ca69d8b5128f5343d832ae1f8dc2c0
      size: 3682207
  clean@ddos-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/logistic.csv
      -o ddos/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/logistic.csv
      hash: md5
      md5: 46413c7ca84819f13ec4a8e90c70da43
      size: 5267338
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/logistic.csv
      hash: md5
      md5: 4447734e27015ddd7c59e3dc8041e2a6
      size: 2066924
  clean@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_knn.csv
      -o truthseeker/plots/clean/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_knn.csv
      hash: md5
      md5: 1ec24d216e9680d92547069b5cf55f8f
      size: 982277
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_knn.csv
      hash: md5
      md5: 88888477c171a335e13b7efd0201f5de
      size: 507730
  clean@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_svc.csv
      -o truthseeker/plots/clean/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_svc.csv
      hash: md5
      md5: b358d8829c17b0c039c7323ce5d78862
      size: 2574238
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_svc.csv
      hash: md5
      md5: 278b6dc566b57463be70ca7dd896ddbe
      size: 1280606
  clean@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_logistic.csv
      -o truthseeker/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_logistic.csv
      hash: md5
      md5: d2b9acf98cd381e3228dd513bc40e4ee
      size: 3151821
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 67323e5d216a51d58e014206ba95e8e5
      size: 865621
  clean@truthseeker-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/knn.csv
      -o truthseeker/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/knn.csv
      hash: md5
      md5: 083923ecae1d9367567b2aeed9f6a8ab
      size: 347084
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/knn.csv
      hash: md5
      md5: 3963e3a048f51969b7858b6ffa4b621d
      size: 279226
  clean@truthseeker-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/svc.csv
      -o truthseeker/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/svc.csv
      hash: md5
      md5: ef3163c8580f8010914aae79cd1c02f9
      size: 2895767
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/svc.csv
      hash: md5
      md5: ed8986174ae1b815a6b1635163796b39
      size: 2336297
  clean@truthseeker-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/logistic.csv
      -o truthseeker/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/logistic.csv
      hash: md5
      md5: 93468df5185dd7aa6328b28ae8c2c4b2
      size: 2413078
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/logistic.csv
      hash: md5
      md5: f231450ce87757a22b943688a4cd6fa8
      size: 256065
  merge@kdd_nsl:
    cmd: python merge.py --big_dir kdd_nsl/plots/ --data_file clean/gzip_knn.csv --little_dir_data_file
      clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder kdd_nsl/plots --output_file
      merged.csv
    deps:
    - path: kdd_nsl/plots/clean/gzip_knn.csv
      hash: md5
      md5: 5183accf3b4cec3507af6d41035aca3e
      size: 236093
    - path: kdd_nsl/plots/clean/gzip_logistic.csv
      hash: md5
      md5: c4caf6e4c1ce1557906b9e0f974590ce
      size: 630069
    - path: kdd_nsl/plots/clean/gzip_svc.csv
      hash: md5
      md5: ba92b57c69a9b54e349f8d294dea66f3
      size: 1119867
    outs:
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 64fae814b8735664e0d8f04d4f04db02
      size: 2009985
  merge@sms_spam:
    cmd: python merge.py --big_dir sms_spam/plots/ --data_file clean/gzip_knn.csv
      --little_dir_data_file clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder
      sms_spam/plots --output_file merged.csv
    deps:
    - path: sms_spam/plots/clean/gzip_knn.csv
      hash: md5
      md5: f8d1688ee397c3c7efac51ea71ff56f0
      size: 244914
    - path: sms_spam/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 9b32412d5e95b917a65cd2b8a3e3a5cf
      size: 990394
    - path: sms_spam/plots/clean/gzip_svc.csv
      hash: md5
      md5: 4b8a2f68337500c78cf71c8393cc69e2
      size: 1143302
    outs:
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: 0e483fec668e6348375534880c9615ac
      size: 2406763
  merge@ddos:
    cmd: python merge.py --big_dir ddos/plots/ --data_file clean/gzip_knn.csv --little_dir_data_file
      clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder ddos/plots --output_file
      merged.csv
    deps:
    - path: ddos/plots/clean/gzip_knn.csv
      hash: md5
      md5: fe9483158f19d710e9e1db063d89e3f3
      size: 459829
    - path: ddos/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 0a2932ab580b1fd4e3aafab2452d0604
      size: 1939402
    - path: ddos/plots/clean/gzip_svc.csv
      hash: md5
      md5: d823d04da8d00669e3445c6c11536a12
      size: 1435798
    outs:
    - path: ddos/plots/merged.csv
      hash: md5
      md5: f1ace42956e5835ecbc2bcd7fc8e6860
      size: 3878750
  merge@truthseeker:
    cmd: python merge.py --big_dir truthseeker/plots/ --data_file clean/gzip_knn.csv
      --little_dir_data_file clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder
      truthseeker/plots --output_file merged.csv
    deps:
    - path: truthseeker/plots/clean/gzip_knn.csv
      hash: md5
      md5: 88888477c171a335e13b7efd0201f5de
      size: 507730
    - path: truthseeker/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 67323e5d216a51d58e014206ba95e8e5
      size: 865621
    - path: truthseeker/plots/clean/gzip_svc.csv
      hash: md5
      md5: 278b6dc566b57463be70ca7dd896ddbe
      size: 1280606
    outs:
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 166a8108df1ca64f9b89f98a11508b13
      size: 2686343
  merge_condense@kdd_nsl:
    cmd: python merge.py --big_dir kdd_nsl/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      kdd_nsl/plots/ --output_file condensed_merged.csv
    deps:
    - path: kdd_nsl/plots/clean/condense/knn.csv
      hash: md5
      md5: da2f35e198b773af34ebecc309086763
      size: 18297
    - path: kdd_nsl/plots/clean/condense/logistic.csv
      hash: md5
      md5: 36eb5e897de0c0f0d91964edd3a9b6ea
      size: 24188
    - path: kdd_nsl/plots/clean/condense/svc.csv
      hash: md5
      md5: 21949e3a8987d3ab2944f4fc0cabbf83
      size: 2256964
    outs:
    - path: kdd_nsl/plots/condensed_merged.csv
      hash: md5
      md5: b486bd3c25c5097919c4ac3f46475e45
      size: 2326668
  merge_condense@sms_spam:
    cmd: python merge.py --big_dir sms_spam/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      sms_spam/plots/ --output_file condensed_merged.csv
    deps:
    - path: sms_spam/plots/clean/condense/knn.csv
      hash: md5
      md5: 28f017770509c6ee24a867d5b3d0ac49
      size: 18326
    - path: sms_spam/plots/clean/condense/logistic.csv
      hash: md5
      md5: f5f94c46c670e600818b43d08a950668
      size: 10469
    - path: sms_spam/plots/clean/condense/svc.csv
      hash: md5
      md5: 3f96b41e49f034c2061aeb241616057d
      size: 2242842
    outs:
    - path: sms_spam/plots/condensed_merged.csv
      hash: md5
      md5: c3aedd5a8e4316fb7972b8513bc6faa1
      size: 2296579
  merge_condense@ddos:
    cmd: python merge.py --big_dir ddos/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      ddos/plots/ --output_file condensed_merged.csv
    deps:
    - path: ddos/plots/clean/condense/knn.csv
      hash: md5
      md5: a940585ea958633a1a1cf93465e51107
      size: 60266
    - path: ddos/plots/clean/condense/logistic.csv
      hash: md5
      md5: 4447734e27015ddd7c59e3dc8041e2a6
      size: 2066924
    - path: ddos/plots/clean/condense/svc.csv
      hash: md5
      md5: 78ca69d8b5128f5343d832ae1f8dc2c0
      size: 3682207
    outs:
    - path: ddos/plots/condensed_merged.csv
      hash: md5
      md5: c05b5a36693cf0783d57c4fbf17e6c28
      size: 5868928
  merge_condense@truthseeker:
    cmd: python merge.py --big_dir truthseeker/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      truthseeker/plots/ --output_file condensed_merged.csv
    deps:
    - path: truthseeker/plots/clean/condense/knn.csv
      hash: md5
      md5: 3963e3a048f51969b7858b6ffa4b621d
      size: 279226
    - path: truthseeker/plots/clean/condense/logistic.csv
      hash: md5
      md5: f231450ce87757a22b943688a4cd6fa8
      size: 256065
    - path: truthseeker/plots/clean/condense/svc.csv
      hash: md5
      md5: ed8986174ae1b815a6b1635163796b39
      size: 2336297
    outs:
    - path: truthseeker/plots/condensed_merged.csv
      hash: md5
      md5: 6ac63d7a98e2deaa1755111a1830674f
      size: 2902766
  plot@kdd_nsl:
    cmd: python -m deckard.layers.plots  --path kdd_nsl/plots/  --file kdd_nsl/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: conf/plots.yaml
      hash: md5
      md5: 43e3ec0876b55c83f231615f7a904e33
      size: 7386
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 64fae814b8735664e0d8f04d4f04db02
      size: 2009985
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_compressor_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressor
          ylabels: Accuracy
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_string_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Metrics
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: linear
        - file: symmetric_vs_string_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: String Metrics
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_compressor_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
        - file: metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
    outs:
    - path: kdd_nsl/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: 0ed7274e1a0f83fc605a2b5f9ad44dd0
      size: 18662
    - path: kdd_nsl/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 2abc11358c8332496865b5669386c685
      size: 23317
    - path: kdd_nsl/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 0041dc49b88213727e5865a193c7dca7
      size: 20293
    - path: kdd_nsl/plots/symmetric_vs_compressor_metric.pdf
      hash: md5
      md5: c887d36266f043c48730cfd2b91c4218
      size: 20080
    - path: kdd_nsl/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 90774ea355d887775be86f46203dcea3
      size: 30291
    - path: kdd_nsl/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 4a08d6c063121f3882cd8e1cbfa9bb20
      size: 30606
    - path: kdd_nsl/plots/symmetric_vs_string_metric.pdf
      hash: md5
      md5: 4096118c5cf6647f29560cdfa1de053c
      size: 23224
    - path: kdd_nsl/plots/symmetric_vs_string_metric_train_time.pdf
      hash: md5
      md5: 3fb33809baa6ce2c33db4f81d9f70601
      size: 25396
  plot@sms_spam:
    cmd: python -m deckard.layers.plots  --path sms_spam/plots/  --file sms_spam/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: conf/plots.yaml
      hash: md5
      md5: 43e3ec0876b55c83f231615f7a904e33
      size: 7386
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: 0e483fec668e6348375534880c9615ac
      size: 2406763
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_compressor_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressor
          ylabels: Accuracy
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_string_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Metrics
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: linear
        - file: symmetric_vs_string_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: String Metrics
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_compressor_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
        - file: metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
    outs:
    - path: sms_spam/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: 7236cc28a32e1a6f4c343d2a31950499
      size: 20269
    - path: sms_spam/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: be553f77c9c586e3b01ce8e6fb0dedd4
      size: 24392
    - path: sms_spam/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 2b288c72791c2caca1d122572ca93f4a
      size: 20887
    - path: sms_spam/plots/symmetric_vs_compressor_metric.pdf
      hash: md5
      md5: ef96989be7440472f12d3ffe1699abba
      size: 20542
    - path: sms_spam/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 4a9c9b5a24bfa909551fd3d55c45fe52
      size: 30722
    - path: sms_spam/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 1abcf91245e0002ea8e4069ffd8c4b7c
      size: 31028
    - path: sms_spam/plots/symmetric_vs_string_metric.pdf
      hash: md5
      md5: 4496423a6b6d3dd16fe0e69f2d87dc81
      size: 23854
    - path: sms_spam/plots/symmetric_vs_string_metric_train_time.pdf
      hash: md5
      md5: 376eb0e5786590b8c645ec36d5127726
      size: 24966
  plot@ddos:
    cmd: python -m deckard.layers.plots  --path ddos/plots/  --file ddos/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: conf/plots.yaml
      hash: md5
      md5: 43e3ec0876b55c83f231615f7a904e33
      size: 7386
    - path: ddos/plots/merged.csv
      hash: md5
      md5: f1ace42956e5835ecbc2bcd7fc8e6860
      size: 3878750
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_compressor_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressor
          ylabels: Accuracy
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_string_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Metrics
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: linear
        - file: symmetric_vs_string_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: String Metrics
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_compressor_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
        - file: metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
    outs:
    - path: ddos/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: 0de89d9a63dc774f715d3db358d1bc73
      size: 19798
    - path: ddos/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 58f99350cd27a07bf9ae1d28c5725e9b
      size: 23308
    - path: ddos/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 2cf3479f91f0b647680a4ff1bd72b7a5
      size: 21333
    - path: ddos/plots/symmetric_vs_compressor_metric.pdf
      hash: md5
      md5: 00bfd331b73784285a92f089f1d93c1d
      size: 20369
    - path: ddos/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 9c89f247eecc4f3283b36325df5a0f55
      size: 31016
    - path: ddos/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 9b076fed364a3bd43160a245509516c8
      size: 32004
    - path: ddos/plots/symmetric_vs_string_metric.pdf
      hash: md5
      md5: f91e03878e3e1a9d5d1a15a2f0bf84a1
      size: 23633
    - path: ddos/plots/symmetric_vs_string_metric_train_time.pdf
      hash: md5
      md5: 614432e06adaef913ade340d0f0841e0
      size: 25820
  plot@truthseeker:
    cmd: python -m deckard.layers.plots  --path truthseeker/plots/  --file truthseeker/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: conf/plots.yaml
      hash: md5
      md5: 43e3ec0876b55c83f231615f7a904e33
      size: 7386
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 166a8108df1ca64f9b89f98a11508b13
      size: 2686343
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_compressor_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressor
          ylabels: Accuracy
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_string_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Metrics
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: linear
        - file: symmetric_vs_string_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: String Metrics
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_compressor_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
        - file: metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
    outs:
    - path: truthseeker/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: 66b8fea862d0d143dcb2e123efe94873
      size: 19621
    - path: truthseeker/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: a6ff14443ed2eb2b30ca86fb8526c053
      size: 22956
    - path: truthseeker/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 756863b502da784eaf8f7d1d960c80d2
      size: 20707
    - path: truthseeker/plots/symmetric_vs_compressor_metric.pdf
      hash: md5
      md5: b90a380280fe9cf6a96716befebef0bd
      size: 20616
    - path: truthseeker/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: d6fefb66677e74175e2345a8eec50c5c
      size: 30974
    - path: truthseeker/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: d277bda7828dac2a9b4f7d54fbdf1faa
      size: 31665
    - path: truthseeker/plots/symmetric_vs_string_metric.pdf
      hash: md5
      md5: 84640d9c59c570871cdcc2cb2dc719fa
      size: 23504
    - path: truthseeker/plots/symmetric_vs_string_metric_train_time.pdf
      hash: md5
      md5: 33113ddde09f3ffa90bcd7f4473f3c69
      size: 24802
  plot_condense@kdd_nsl:
    cmd: python -m deckard.layers.plots  --path kdd_nsl/plots/  --file kdd_nsl/plots/condensed_merged.csv  -c
      conf/condensed_plots.yaml
    deps:
    - path: conf/condensed_plots.yaml
      hash: md5
      md5: 941cca0ea861df8f4ec05f4ef9e8178c
      size: 2985
    - path: kdd_nsl/plots/condensed_merged.csv
      hash: md5
      md5: b486bd3c25c5097919c4ac3f46475e45
      size: 2326668
    params:
      conf/condensed_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: condensing_method_vs_accuracy.pdf
          digitize: Condensing Ratio
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xlabels: Condensing Method
          ylabels: Accuracy
          legend_title: Sample Ratio
        - file: condensing_method_vs_train_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: train_time
          y_scale: log
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Training Time
          legend_title: Sample Ratio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: condensing_method_vs_predict_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: predict_time
          y_scale: log
          col: Model
          rotation: 45
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Prediction Time
          legend_title: Sample Ratio
        - file: string_metric_m_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: point
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Sample Ratio
          xlim:
          - 0
          - 0.9
    outs:
    - path: kdd_nsl/plots/condensing_method_vs_accuracy.pdf
      hash: md5
      md5: 8c6651b9cb8f6589e2eaccff86330e8a
      size: 38447
    - path: kdd_nsl/plots/condensing_method_vs_predict_time.pdf
      hash: md5
      md5: d1be46f4d903e4767b6038a984975919
      size: 50511
    - path: kdd_nsl/plots/condensing_method_vs_train_time.pdf
      hash: md5
      md5: dbc12b86645bf3d12daf2c8bfbfdb16f
      size: 49791
    - path: kdd_nsl/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: ba73fc9def55408b285d8d410f15956d
      size: 40842
  plot_condense@sms_spam:
    cmd: python -m deckard.layers.plots  --path sms_spam/plots/  --file sms_spam/plots/condensed_merged.csv  -c
      conf/condensed_plots.yaml
    deps:
    - path: conf/condensed_plots.yaml
      hash: md5
      md5: 941cca0ea861df8f4ec05f4ef9e8178c
      size: 2985
    - path: sms_spam/plots/condensed_merged.csv
      hash: md5
      md5: c3aedd5a8e4316fb7972b8513bc6faa1
      size: 2296579
    params:
      conf/condensed_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: condensing_method_vs_accuracy.pdf
          digitize: Condensing Ratio
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xlabels: Condensing Method
          ylabels: Accuracy
          legend_title: Sample Ratio
        - file: condensing_method_vs_train_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: train_time
          y_scale: log
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Training Time
          legend_title: Sample Ratio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: condensing_method_vs_predict_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: predict_time
          y_scale: log
          col: Model
          rotation: 45
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Prediction Time
          legend_title: Sample Ratio
        - file: string_metric_m_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: point
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Sample Ratio
          xlim:
          - 0
          - 0.9
    outs:
    - path: sms_spam/plots/condensing_method_vs_accuracy.pdf
      hash: md5
      md5: 3dd28a7c04b57f78d07195b5c3380cac
      size: 34031
    - path: sms_spam/plots/condensing_method_vs_predict_time.pdf
      hash: md5
      md5: d05943901da204c67d94a6e626fce881
      size: 49464
    - path: sms_spam/plots/condensing_method_vs_train_time.pdf
      hash: md5
      md5: 10ffc7d19931755f111680ed622397fa
      size: 48446
    - path: sms_spam/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: 2c5ea1bf941e5b962991749a3edcc150
      size: 35703
  plot_condense@ddos:
    cmd: python -m deckard.layers.plots  --path ddos/plots/  --file ddos/plots/condensed_merged.csv  -c
      conf/condensed_plots.yaml
    deps:
    - path: conf/condensed_plots.yaml
      hash: md5
      md5: 941cca0ea861df8f4ec05f4ef9e8178c
      size: 2985
    - path: ddos/plots/condensed_merged.csv
      hash: md5
      md5: c05b5a36693cf0783d57c4fbf17e6c28
      size: 5868928
    params:
      conf/condensed_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: condensing_method_vs_accuracy.pdf
          digitize: Condensing Ratio
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xlabels: Condensing Method
          ylabels: Accuracy
          legend_title: Sample Ratio
        - file: condensing_method_vs_train_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: train_time
          y_scale: log
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Training Time
          legend_title: Sample Ratio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: condensing_method_vs_predict_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: predict_time
          y_scale: log
          col: Model
          rotation: 45
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Prediction Time
          legend_title: Sample Ratio
        - file: string_metric_m_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: point
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Sample Ratio
          xlim:
          - 0
          - 0.9
    outs:
    - path: ddos/plots/condensing_method_vs_accuracy.pdf
      hash: md5
      md5: 90b19e1e0b3aea43a6265d2ae54bda75
      size: 61525
    - path: ddos/plots/condensing_method_vs_predict_time.pdf
      hash: md5
      md5: 28586b1e2998b4a667c38e28e5d006b3
      size: 76363
    - path: ddos/plots/condensing_method_vs_train_time.pdf
      hash: md5
      md5: 85aaf8e07023223d8e06c48e08ed8fb0
      size: 76596
    - path: ddos/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: 7812409fe0e627dadf43f25c2af2bc5e
      size: 70778
  plot_condense@truthseeker:
    cmd: python -m deckard.layers.plots  --path truthseeker/plots/  --file truthseeker/plots/condensed_merged.csv  -c
      conf/condensed_plots.yaml
    deps:
    - path: conf/condensed_plots.yaml
      hash: md5
      md5: 941cca0ea861df8f4ec05f4ef9e8178c
      size: 2985
    - path: truthseeker/plots/condensed_merged.csv
      hash: md5
      md5: 6ac63d7a98e2deaa1755111a1830674f
      size: 2902766
    params:
      conf/condensed_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: condensing_method_vs_accuracy.pdf
          digitize: Condensing Ratio
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xlabels: Condensing Method
          ylabels: Accuracy
          legend_title: Sample Ratio
        - file: condensing_method_vs_train_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: train_time
          y_scale: log
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Training Time
          legend_title: Sample Ratio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: condensing_method_vs_predict_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: predict_time
          y_scale: log
          col: Model
          rotation: 45
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Prediction Time
          legend_title: Sample Ratio
        - file: string_metric_m_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: point
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Sample Ratio
          xlim:
          - 0
          - 0.9
    outs:
    - path: truthseeker/plots/condensing_method_vs_accuracy.pdf
      hash: md5
      md5: 5e0860d8c6cef981bb5240cf90f5d2cc
      size: 69803
    - path: truthseeker/plots/condensing_method_vs_predict_time.pdf
      hash: md5
      md5: 4f3b73db6b9d7b9b9eaf52a427e17d51
      size: 84728
    - path: truthseeker/plots/condensing_method_vs_train_time.pdf
      hash: md5
      md5: f645469e9af88cf78b26eb8fb318baf3
      size: 83870
    - path: truthseeker/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: 4cb6ccb9e903db62f1f758e750f8c8a4
      size: 68448
  merge_datasets:
    cmd: python merge.py --big_dir . --little_dir . --data_file sms_spam/plots/condensed_merged.csv
      --little_dir_data_file  kdd_nsl/plots/merged.csv ddos/plots/merged.csv truthseeker/plots/merged.csv
      kdd_nsl/plots/condensed_merged.csv ddos/plots/condensed_merged.csv truthseeker/plots/condensed_merged.csv
      sms_spam/plots/merged.csv --output_folder combined/plots/ --output_file merged.csv
    deps:
    - path: ddos/plots/merged.csv
      hash: md5
      md5: f1ace42956e5835ecbc2bcd7fc8e6860
      size: 3878750
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 64fae814b8735664e0d8f04d4f04db02
      size: 2009985
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: 0e483fec668e6348375534880c9615ac
      size: 2406763
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 166a8108df1ca64f9b89f98a11508b13
      size: 2686343
    outs:
    - path: combined/plots/merged.csv
      hash: md5
      md5: 5fec3df003010518f9509741cc070070
      size: 20992511
  plot_merged:
    cmd: python -m deckard.layers.plots  --path combined/plots/  --file combined/plots/merged.csv  -c
      conf/merged_plots.yaml
    deps:
    - path: combined/plots/merged.csv
      hash: md5
      md5: 5fec3df003010518f9509741cc070070
      size: 20992511
    - path: conf/merged_plots.yaml
      hash: md5
      md5: d9700ea98d3bf48d175bb3d986354a96
      size: 9036
    params:
      conf/merged_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: strip
          row: Model
          col: Dataset
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Ratio
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: models_vs_accuracy.pdf
          x: Model
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: models_vs_train_time.pdf
          x: Model
          y: train_time
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: Models
          ylabels: $t_t$ (s)
          legend_title: Samples
          rotation: 90
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: log
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: models_vs_predict_time.pdf
          x: Model
          y: predict_time_per_sample
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: Samples
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: symmetric_models_vs_accuracy.pdf
          row: Model
          x: data.sample.train_size
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Samples
          ylabels: Accuracy
          legend_title: ' '
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          row_order:
          - k-KNN
          - k-SVC
          - k-Logistic
          order:
          - 20
          - 100
          - 300
          - 500
        - file: symmetric_models_vs_train_time.pdf
          row: Model
          x: data.sample.train_size
          y: train_time_per_sample
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_t$ (s)
          legend_title: ' '
          rotation: 90
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: log
          order:
          - 20
          - 100
          - 300
          - 500
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          row_order:
          - k-KNN
          - k-SVC
          - k-Logistic
        - file: symmetric_models_vs_predict_time.pdf
          x: data.sample.train_size
          row: Model
          y: predict_time_per_sample
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: ' '
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          row_order:
          - k-KNN
          - k-SVC
          - k-Logistic
          order:
          - 20
          - 100
          - 300
          - 500
        - file: condensing_methods_vs_accuracy.pdf
          row: Model
          y: accuracy
          x: Condensing Method
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: Condensing Method
          ylabels: Accuracy
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          row_order:
          - k-KNN
          - k-SVC
          - k-Logistic
          legend_title: Condensing Method
        - file: condensing_methods_vs_train_time.pdf
          x: Model
          y: train_time
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_t$ (s)
          legend_title: Condensing Method
          rotation: 90
          col: Dataset
          y_scale: log
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        - file: condensing_methods_vs_predict_time.pdf
          x: Model
          y: predict_time_per_sample
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: Condensing Method
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: $t_t$ (s)
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: $t_t$ (s)
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time_per_sample
          ylabel: $t_i$ (s)
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time_per_sample
          ylabel: $t_i$ (s)
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
    outs:
    - path: combined/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: 398d34fc91811f408164fb40ef254319
      size: 21621
    - path: combined/plots/compressor_metric_vs_predict_time.pdf
      hash: md5
      md5: 21a0d100327190cdd820d020244aa77b
      size: 23374
    - path: combined/plots/compressor_metric_vs_train_time.pdf
      hash: md5
      md5: 830465cd78708d1314f331167ff982ce
      size: 23448
    - path: combined/plots/condensing_methods_vs_accuracy.pdf
      hash: md5
      md5: 4c16cd91b77b0224ca00d1eb813a60a2
      size: 48975
    - path: combined/plots/condensing_methods_vs_predict_time.pdf
      hash: md5
      md5: 2881b805b9c52003ec6e0054e7fc2124
      size: 54476
    - path: combined/plots/condensing_methods_vs_train_time.pdf
      hash: md5
      md5: 9393487eb30eb624da3c5c77d0b4e991
      size: 52742
    - path: combined/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: d086d19a58471e9956569cba6dd39c90
      size: 131764
    - path: combined/plots/models_vs_accuracy.pdf
      hash: md5
      md5: 294b76ce0834cd98598a3e393d546a37
      size: 44206
    - path: combined/plots/models_vs_predict_time.pdf
      hash: md5
      md5: 84657fa2b335a045cd387a7399cf8a62
      size: 57320
    - path: combined/plots/models_vs_train_time.pdf
      hash: md5
      md5: 8d964e58f6842ef5176066df8cada6ee
      size: 57138
    - path: combined/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 782212b12a6a75de3ac1a84dde99ebd0
      size: 23111
    - path: combined/plots/string_metric_vs_predict_time.pdf
      hash: md5
      md5: 4646c80a1f6507f818eb8c3d762bee02
      size: 24463
    - path: combined/plots/string_metric_vs_train_time.pdf
      hash: md5
      md5: 591e82c87c12bab86f298ddf93675e05
      size: 24490
    - path: combined/plots/symmetric_models_vs_accuracy.pdf
      hash: md5
      md5: 830743cc92f0126efef9dd46bc2ecf47
      size: 55869
    - path: combined/plots/symmetric_models_vs_predict_time.pdf
      hash: md5
      md5: f4e8b96a8e558f8a12257547aa130302
      size: 75324
    - path: combined/plots/symmetric_models_vs_train_time.pdf
      hash: md5
      md5: 7ddd9328de5c18c62c8499a10c52efca
      size: 75284
  copy@kdd_nsl:
    cmd: rm -rf ~/Gzip-KNN/figs/kdd_nsl/ && mkdir -p ~/Gzip-KNN/figs/kdd_nsl/ && cp
      -r kdd_nsl/plots/* ~/Gzip-KNN/figs/kdd_nsl/ && rm -rf ~/Gzip-KNN/figs/kdd_nsl/.gitignore
    deps:
    - path: kdd_nsl/plots/
      hash: md5
      md5: 37edf128edaed94fe6c0581ad2636ce7.dir
      size: 9169823
      nfiles: 28
  copy@truthseeker:
    cmd: rm -rf ~/Gzip-KNN/figs/truthseeker/ && mkdir -p ~/Gzip-KNN/figs/truthseeker/
      && cp -r truthseeker/plots/* ~/Gzip-KNN/figs/truthseeker/ && rm -rf ~/Gzip-KNN/figs/truthseeker/.gitignore
    deps:
    - path: truthseeker/plots/
      hash: md5
      md5: ceafe688cb8d95058087a2ea20d038f9.dir
      size: 11792319
      nfiles: 28
  copy@sms_spam:
    cmd: rm -rf ~/Gzip-KNN/figs/sms_spam/ && mkdir -p ~/Gzip-KNN/figs/sms_spam/ &&
      cp -r sms_spam/plots/* ~/Gzip-KNN/figs/sms_spam/ && rm -rf ~/Gzip-KNN/figs/sms_spam/.gitignore
    deps:
    - path: sms_spam/plots/
      hash: md5
      md5: c99572bb734ea2b471741d06d6301aba.dir
      size: 9893147
      nfiles: 28
  copy@ddos:
    cmd: rm -rf ~/Gzip-KNN/figs/ddos/ && mkdir -p ~/Gzip-KNN/figs/ddos/ && cp -r ddos/plots/*
      ~/Gzip-KNN/figs/ddos/ && rm -rf ~/Gzip-KNN/figs/ddos/.gitignore
    deps:
    - path: ddos/plots/
      hash: md5
      md5: 0593b9ee390ea51636cc28120e9b2579.dir
      size: 20050802
      nfiles: 28
  copy@combined:
    cmd: rm -rf ~/Gzip-KNN/figs/combined/ && mkdir -p ~/Gzip-KNN/figs/combined/ &&
      cp -r combined/plots/* ~/Gzip-KNN/figs/combined/ && rm -rf ~/Gzip-KNN/figs/combined/.gitignore
    deps:
    - path: combined/plots/
      hash: md5
      md5: 0d6cf803e926f9eb17449a6b0d9f06b1.dir
      size: 21786116
      nfiles: 17
  modified_grid_search@1000-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 ++data.sample.test_size=400 model_name=gzip_svc
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8
      hydra.sweep.dir=kdd_nsl/logs/gzip_svc/1000/modified_true hydra.callbacks.study_dump.output_file=null
      files.directory=kdd_nsl files.reports=reports/gzip_svc/1000/modified_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/1000/modified_true
      hash: md5
      md5: ef38c2b901109fa8205e7c4b1f156baa.dir
      size: 1216154
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/1000/modified_true/train/
      hash: md5
      md5: 8dda1169bf5fb98dac35d87dfe1fef65.dir
      size: 321301
      nfiles: 288
  modified_grid_search@100-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_logistic/100/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_logistic/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: 3ff3495ff3db7eb0d9ad6d3ea0738b14.dir
      size: 647239
      nfiles: 357
  modified_grid_search@100-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_logistic/100/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_logistic/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: d706c6080ea72f11a94e5a562d796480.dir
      size: 669121
      nfiles: 342
  modified_grid_search@100-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_knn/100/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_knn/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: 4ac3332b948c2ca9bd50ec2d999d6569.dir
      size: 355989
      nfiles: 225
  modified_grid_search@100-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_svc/100/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_svc/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 540b2d243dcc8f9808b9143c779da90e.dir
      size: 611599
      nfiles: 384
  modified_grid_search@100-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_knn/100/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_knn/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: 669d8a3d2e5c3560e2342ea36a45af57.dir
      size: 355395
      nfiles: 225
  modified_grid_search@100-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_svc/100/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_svc/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 35e04675b4f9e0e880139feb098c26c1.dir
      size: 612543
      nfiles: 384
  modified_grid_search@100-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_logistic/100/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_logistic/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: 02d75bde52772b812b1ca13ab18862ed.dir
      size: 663981
      nfiles: 342
  modified_grid_search@100-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_svc/100/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_svc/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 502f677083d627fd93d9b83f8d538c86.dir
      size: 616386
      nfiles: 384
  modified_grid_search@100-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_knn/100/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_knn/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: e9f85e425656fb3c62a803d9dd7e43f6.dir
      size: 361288
      nfiles: 225
  modified_grid_search@100-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_logistic/100/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_logistic/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: 3540dbe100bf11c37982372d962ef168.dir
      size: 694347
      nfiles: 301
  modified_grid_search@100-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_svc/100/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_svc/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: a2a42ea5b5c6efcdd91dce988b8ae93c.dir
      size: 621454
      nfiles: 384
  modified_grid_search@100-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_knn/100/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_knn/100/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: 6533baa64a7e2277b288cb5420095ab5.dir
      size: 119427
      nfiles: 75
  modified_grid_search@300-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_logistic/300/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_logistic/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: 787db1338b51d7fe61c4f2ae7c722921.dir
      size: 689202
      nfiles: 319
  modified_grid_search@20-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_logistic/20/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_logistic/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: 0863dc475fd474887838c12a1ab4f745.dir
      size: 655760
      nfiles: 357
  modified_grid_search@500-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_logistic/500/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_logistic/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: 30dfec31a1cf2211ca61bbfcabc5620f.dir
      size: 656502
      nfiles: 357
  modified_grid_search@20-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_logistic/20/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_logistic/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: 4841454522f49f29e3609397f6c67cc3.dir
      size: 690223
      nfiles: 311
  modified_grid_search@300-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_knn/300/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_knn/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 04cd3d02910b9b888fedc9e9979445fd.dir
      size: 358665
      nfiles: 225
  modified_grid_search@20-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_svc/20/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_svc/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: 71bc89dc882a18d2ab892f2a8af3fb3f.dir
      size: 612274
      nfiles: 384
  modified_grid_search@300-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_logistic/300/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_logistic/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: 628f06b8699d873148353b65f0aeeb88.dir
      size: 660640
      nfiles: 342
  modified_grid_search@300-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_svc/300/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_svc/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: a7d0c17add85020e47c0b7fe6db8eb35.dir
      size: 622635
      nfiles: 384
  modified_grid_search@300-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_svc/300/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_svc/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: 9bba691902f622b91a46acb7b532fc4f.dir
      size: 613244
      nfiles: 384
  modified_grid_search@20-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_svc/20/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_svc/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: 0e8dc4e557eca1cc0e11c1b9ad0b8c2b.dir
      size: 615929
      nfiles: 384
  modified_grid_search@500-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_knn/500/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_knn/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: ff04a77b3cc466ad012f6f15fd5e941a.dir
      size: 61641
      nfiles: 39
  modified_grid_search@500-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_logistic/500/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_logistic/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: b5948c459fe9e9f61d9c6c17b32b72ec.dir
      size: 680014
      nfiles: 319
  modified_grid_search@500-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_svc/500/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_svc/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 2da8d9451b3160b1fc18d947701aa3d8.dir
      size: 617040
      nfiles: 384
  modified_grid_search@20-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_knn/20/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_knn/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 6bc326713d97498712ab2d2ec3dc9996.dir
      size: 358023
      nfiles: 225
  modified_grid_search@500-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_svc/500/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_svc/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 479f50455ed1613066b7b48b984b15c6.dir
      size: 612189
      nfiles: 384
  modified_grid_search@300-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_logistic/300/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_logistic/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: 69e7460158b25c127d088e018327b14a.dir
      size: 679134
      nfiles: 319
  modified_grid_search@20-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_svc/20/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_svc/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: aa6ef688472f2c1d4f735ff909108fa5.dir
      size: 621000
      nfiles: 384
  modified_grid_search@20-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_knn/20/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_knn/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 01d3e4d734fb95f594cdab0e314428b8.dir
      size: 113844
      nfiles: 72
  modified_grid_search@300-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_knn/300/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_knn/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 00efaf90ae7c060f2730ebae2967d2f8.dir
      size: 142585
      nfiles: 90
  modified_grid_search@500-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_logistic/500/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_logistic/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: 72ec831bc2bd2b18f40923103a45d784.dir
      size: 683837
      nfiles: 319
  modified_grid_search@20-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_logistic/20/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_logistic/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: 1d7428b2ff1bdbaefc33f5ba25453bd7.dir
      size: 646795
      nfiles: 357
  modified_grid_search@20-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_knn/20/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_knn/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: d5daf98745c647172bf19ee53d5632c8.dir
      size: 198870
      nfiles: 126
  modified_grid_search@300-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_svc/300/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_svc/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: 7f94946281c0ef2a301729888a9b9f08.dir
      size: 617556
      nfiles: 384
  modified_grid_search@300-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_svc/300/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_svc/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: ba4f67a739800a902f6c5dea83997870.dir
      size: 612684
      nfiles: 384
  modified_grid_search@500-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_svc/500/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_svc/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 827d52012b7c8b488306bca32f2a4b92.dir
      size: 621938
      nfiles: 384
  modified_grid_search@20-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_knn/20/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_knn/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 32ed2b56a850016e2838f077501a674b.dir
      size: 187701
      nfiles: 117
  modified_grid_search@500-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_knn/500/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_knn/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: 37dcd0b135d5dc1bbbf4543b06d851c0.dir
      size: 143361
      nfiles: 90
  modified_grid_search@500-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_knn/500/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_knn/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: fefbeee122726718cb1a2a8356cdf457.dir
      size: 361505
      nfiles: 225
  modified_grid_search@500-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_knn/500/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_knn/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: a90235138deb6ddd3098b511f16b1838.dir
      size: 356150
      nfiles: 225
  modified_grid_search@20-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_svc/20/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_svc/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: 23b13ee5aaaa11589e15fb10a87d1c82.dir
      size: 611134
      nfiles: 384
  modified_grid_search@300-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modfied/gzip_knn/300/modified_true
      files.directory=ddos files.reports=reports/modified//gzip_knn/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 41cfdc67bca80e016db615f34daf03a2.dir
      size: 96440
      nfiles: 60
  modified_grid_search@500-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_logistic/500/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_logistic/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: 08e34b054c70ee421ff75ffbebe4fc1d.dir
      size: 659284
      nfiles: 342
  modified_grid_search@20-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_logistic/20/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_logistic/20/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: fc84a243f4de8c6efe710660ee1ee6ea.dir
      size: 685360
      nfiles: 311
  modified_grid_search@500-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modfied/gzip_svc/500/modified_true
      files.directory=sms_spam files.reports=reports/modified//gzip_svc/500/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: e58ddcf5c268a891b49e7e6399e7aed4
      size: 2029
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 836bf7c9c2b528556bb456f862afba09.dir
      size: 612787
      nfiles: 384
  modified_grid_search@300-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      ++model.init.modified=true model.init.symmetric=True hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modfied/gzip_knn/300/modified_true
      files.directory=kdd_nsl files.reports=reports/modified//gzip_knn/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: cb8fd98db2dc165dbd5a8e958cedc890
      size: 1947
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 2c6e5fe12f4e7269dedf6b622bd1aacb.dir
      size: 355822
      nfiles: 225
  modified_grid_search@300-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=modified_gzip_logistic_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modfied/gzip_logistic/300/modified_true
      files.directory=truthseeker files.reports=reports/modified//gzip_logistic/300/modified_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: dddd157521eecb9b7a7ec0216cc1d0bf
      size: 2138
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: b0b735b9264604a649ace645e2d8467e.dir
      size: 651685
      nfiles: 357
