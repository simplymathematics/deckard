schema: '2.0'
stages:
  data:
    cmd: python data_prep.py
    deps:
    - path: data_prep.py
      hash: md5
      md5: 18244c921ed2d7cbf25b8362b3ca33aa
      size: 5146
    outs:
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
  parse_params:
    cmd: python -m deckard.layers.parse  --config_file knn
    deps:
    - path: conf/data
      hash: md5
      md5: 49021c2b7f358f4d3e161498fdf31f8b.dir
      size: 2510
      nfiles: 9
    - path: conf/files
      hash: md5
      md5: 175540655649901489a4254f6e136ce5.dir
      size: 346
      nfiles: 1
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: conf/model
      hash: md5
      md5: 8cff11a7f8692e912a7ad9c88364db95.dir
      size: 1800
      nfiles: 4
    - path: conf/scorers
      hash: md5
      md5: e3e4a85af427799284ed28f899af4a90.dir
      size: 376
      nfiles: 2
    outs:
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
  train:
    cmd: python -m deckard.layers.experiment train
    deps:
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      params.yaml:
        algorithm: Vanilla
        data:
          alias: kdd_nsl
          drop:
          - id
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        files:
          data_dir: data
          data_file: kdd_nsl-0-100-100
          data_type: .pkl
          directory: output/kdd_nsl
          model_dir: models
          model_file: default
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          data:
            alias: kdd_nsl
            drop:
            - id
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            distance_matrix_test: output/kdd_nsl/models/gzip/False/test-100-100-0.npz
            distance_matrix_train: output/kdd_nsl/models/gzip/False/train-100-100-0.npz
            k: 1
            m: -1
            metric: gzip
            modified: false
            name: gzip_classifier.GzipKNN
            symmetric: false
            transform: None
          library: sklearn
        model_name: knn
        scorers:
          accuracy:
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/kdd_nsl/data/kdd_nsl-0-100-100.pkl/
      hash: md5
      md5: 1e8bd9796a6c59f804887c45252cba35
      size: 39321
    - path: output/kdd_nsl/reports/train/default/predictions.json
      hash: md5
      md5: a87844e9fbaccc3565b640b4dcecb46e
      size: 1608
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 837500ee4926ef72733fe46647a28f40
      size: 473
  grid_search@100-ddos-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=100
      ++algorithm="Vanilla" data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false hydra.sweeper.study_name=knn_ddos_Vanilla hydra.sweep.dir=output/ddos/logs/knn/gzip/Vanilla/100/
      files.directory=output/ddos files.reports=reports/knn/gzip/Vanilla/100/ hydra.launcher.n_jobs=-1
      ++model.init.metric=gzip ~model.init.distance_matrix ++raise_exception=True
      --config-name knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: c93d3280ae0f504515b44552033e6267
      size: 1983
    - path: params.yaml
      hash: md5
      md5: e2e13718a682e140e5d84a544aab7a7f
      size: 1235
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_JOBS,8}
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_JOBS,8}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs//knn/gzip/Vanilla/100/
      hash: md5
      md5: 91657fc426202fe375dfd88bb06622d4.dir
      size: 1000092
      nfiles: 385
    - path: output/ddos/reports//knn/gzip/Vanilla/100/
      hash: md5
      md5: a7d089460e90ba3081b9fba8fc5c55ee.dir
      size: 82299
      nfiles: 72
  grid_search@1000-ddos-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/gzip/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 4fa9398b1ade256b96a015761d0ba7f5
      size: 2922768
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 50a4d817eaf48bcaac308d7b05d823b4.dir
      size: 13234207
      nfiles: 2305
    - path: output/ddos/reports/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 68f67c56bf955b10b88c2a094a6ef4c0.dir
      size: 254644
      nfiles: 95
  grid_search@1000-ddos-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/gzip/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: ad0f54674da2c0ed53f3947d7e66f72e
      size: 2918476
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: 629f6ec1ea4982bc009ef7e827e2ddbd.dir
      size: 11564723
      nfiles: 2305
    - path: output/ddos/reports/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: 7255e3d59093a66c79d6d6edb538f4f9.dir
      size: 256061
      nfiles: 96
  grid_search_precompute@1000-ddos-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 4fa9398b1ade256b96a015761d0ba7f5
      size: 2922768
    - path: output/ddos/logs/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 56807c2e7d56cad4515fa3ec8eb7e619.dir
      size: 21821
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 65825aa5579073ab033a6d016f4985cf.dir
      size: 17312
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: ad0f54674da2c0ed53f3947d7e66f72e
      size: 2918476
    - path: output/ddos/logs/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: f79f667122d1d30d4387db5ebe71cfaa.dir
      size: 21606
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: 51c9cfe62999ce193549a9a7ad8215b8.dir
      size: 17303
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 4c0df9cecac1566a1e1a8eecb5d4b048
      size: 1170215
    - path: output/ddos/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: aaf49660eebadf1be99cf3f69a378028
      size: 2897484
    - path: output/ddos/logs/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: 584f5d686d00e202644fdd035845994e.dir
      size: 21832
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: ae10d2580b454a438c779955eac062d4.dir
      size: 17314
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 8d602c84aa4790618b473a24fedd41c3
      size: 1371119
    - path: output/ddos/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: d750a2db8bc42fc202782e3869f2f25b
      size: 3400593
    - path: output/ddos/logs/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: 10fb2d989fc4409bd9e4f9f7e45b918b.dir
      size: 21600
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: b724b06ea9f37e2b8acf8a132c8f00a4.dir
      size: 17309
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: 6d64cc539e71285f3d8f46b74ea6324b.dir
      size: 21800
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: 5f8fa7dedd5625ddb3203e3826c5f5ed.dir
      size: 17303
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: b067692138ac279a1ebe466c00148a37.dir
      size: 21587
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: 9b9d18303b1bdfc7688d0c32071c0ed0.dir
      size: 17302
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: 8e53d209720859404322661996b1e05f.dir
      size: 21810
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: fd7cf0578d9997087466b83571c0bc9e.dir
      size: 17307
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: b80e9a6cae2212066d1233b6efa3f7ac.dir
      size: 21576
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: e5065acd63cdc3905d88cb6853a2ce92.dir
      size: 17300
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2fba7a69395876e7c2c43db3eb29a22
      size: 3143767
    - path: output/ddos/logs/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 1c46594b6e108d304b394c274613b224.dir
      size: 21887
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: de124a1432b181908a36a7b19453d651.dir
      size: 17328
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2c29a1b45cd1f52bba5493b7e237a88
      size: 3148759
    - path: output/ddos/logs/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: eccbbd344227c7cf95d2bc4febea897b.dir
      size: 21674
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: 24e96699f186edbcb7433d8e735f4522.dir
      size: 17328
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 487abf71a0940532a5c24e02e8281d80
      size: 1270664
    - path: output/ddos/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5e9ebdff0710028e10620954b6023aef
      size: 3148735
    - path: output/ddos/logs/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: 051d64371f0390fd69157b7a94eee377.dir
      size: 21884
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: eefcbafdf46685d7be11bdb25c339c3a.dir
      size: 17326
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 3b154b98e933d3bd532dc710f8927f5c
      size: 1460796
    - path: output/ddos/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: af1f730f6966eb52c30bca10b3ffa675
      size: 3622500
    - path: output/ddos/logs/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: ae14607a7ff9e1b4cdfb531b268ff682.dir
      size: 21649
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: c7117406bac6e5f025f2638723ba0dec.dir
      size: 17320
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dac930e8eccab543e7f4a650691154ab
      size: 1664240
    - path: output/ddos/logs/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 071177b70b928862ffa91cc6c962eebe.dir
      size: 22018
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: c0209e7e7a31d9336172d455668acafa.dir
      size: 17367
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 68a56b0669b1a5139f0d437135811734.dir
      size: 21803
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: e8a3a60ac1e60bedf9d9fbe1213023f7.dir
      size: 17358
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: c0d14857875b0b733d4ff42fbb816741.dir
      size: 22028
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: dbf64b21fb21db74d26fbc1aaed3b3a3.dir
      size: 17362
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5ce75f11bc0521c7c7043b998baff55f
      size: 655767
    - path: output/ddos/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: 341cd24088296c8f8c0426fe29dd2ecc.dir
      size: 21794
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: bcd070a46c6d68d36bda7ddb8252152d.dir
      size: 17363
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: output/ddos/logs/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: f739531fbc04ad3173fd55d9b572bf5e.dir
      size: 21851
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 9168b6c16ec3ed80f04650283fdf94b3.dir
      size: 17318
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: output/ddos/logs/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: 1a6cd06800f5c120803fc0c722ca5558.dir
      size: 21638
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: 757c953b2bf570251abb39fdff782fce.dir
      size: 17314
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: output/ddos/logs/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: e297dbac4e67b92a72e3b38bd86e77d2.dir
      size: 21862
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: b61cea7cfe3528bd4f887dab9773e62b.dir
      size: 17317
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: output/ddos/logs/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: 273090acea24fea378cf4aca0ded1d2b.dir
      size: 21626
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: 9505ed050f78742c96ddb06c34cd0855.dir
      size: 17308
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dde06e736d6d94095cf9a2a79163e098
      size: 1662982
    - path: output/ddos/logs/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: e0f8dc6fd6693395fddb502e7d47e6b2.dir
      size: 21902
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: ffa40cb764c270d34627e25d91dbf375.dir
      size: 17330
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: fb5ac869fcd9e6abdbffa72663f41f8b.dir
      size: 21689
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: 7b6a60915d07c05451c9b3382509fdaf.dir
      size: 17331
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: 2b14664b4e25c1b7ecb91f1eb7c38c3c.dir
      size: 21913
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: fc7529b5a225d95600143049c0375d8e.dir
      size: 17330
      nfiles: 6
  grid_search_precompute@1000-ddos-knn-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/knn/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 95d998d5ca67aecf9f3adb517d8bffc2
      size: 671342
    - path: output/ddos/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 10194cda72369cb2534ca9de6f248087.dir
      size: 21678
      nfiles: 4
    - path: output/ddos/reports/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 99aa23ea4dc5b5069f04abd41252d137.dir
      size: 17327
      nfiles: 6
  grid_search_precompute@1000-ddos-svc-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/svc/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 4fa9398b1ade256b96a015761d0ba7f5
      size: 2922768
    - path: output/ddos/logs/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 38c28a204e4d95ff69f9fd44e47b8922.dir
      size: 18255
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 23e57288dd85e2753372b09029dbfa17.dir
      size: 8704
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/svc/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: ad0f54674da2c0ed53f3947d7e66f72e
      size: 2918476
    - path: output/ddos/logs/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 741226caaa6465a2038612683d6ba03f.dir
      size: 18254
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 0b3bdeaf4561bf0c088fd3ae7aa375ee.dir
      size: 8703
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 4c0df9cecac1566a1e1a8eecb5d4b048
      size: 1170215
    - path: output/ddos/distance_matrix/svc/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: aaf49660eebadf1be99cf3f69a378028
      size: 2897484
    - path: output/ddos/logs/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: 0786ba38dc8f26803a376b38a6de773c.dir
      size: 18268
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: b45f903c09db2794932e6ab413c55408.dir
      size: 8707
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 8d602c84aa4790618b473a24fedd41c3
      size: 1371119
    - path: output/ddos/distance_matrix/svc/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: d750a2db8bc42fc202782e3869f2f25b
      size: 3400593
    - path: output/ddos/logs/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: 8e2aaf0e1f78a5ad1c1822ba2277b6c0.dir
      size: 18248
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: 4e536f2449372972b065247f595cf61c.dir
      size: 8705
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/svc/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: 43196fdb93f27b53378aaf10c1c7c8f1.dir
      size: 18236
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: fecb137fbbf05ecbbed729e3bbbb6c69.dir
      size: 8703
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/svc/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: b173d7594d3a08b8037469236e2d03dd.dir
      size: 18234
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: 998c2f15313ef3d1200e935e07288e00.dir
      size: 8699
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/svc/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: 43626f3e77976622705957e1d81229e9.dir
      size: 18244
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: 1b64ab2db60fe91a40d6c3c90522af42.dir
      size: 8705
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/svc/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: 82ab60f0eead483d5e8d2a65f55f5072.dir
      size: 18226
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: 70cafc3c4f2aa5eb684a6d5d92915e04.dir
      size: 8701
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/svc/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2fba7a69395876e7c2c43db3eb29a22
      size: 3143767
    - path: output/ddos/logs/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: 019d6bb44ed36a085c29d2526162d24e.dir
      size: 18299
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: 49b526823eaf7e669b602793d5b82128.dir
      size: 8707
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/svc/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2c29a1b45cd1f52bba5493b7e237a88
      size: 3148759
    - path: output/ddos/logs/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: c002e940b5d96d04ca904ef7f343e0f1.dir
      size: 18296
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: 5d2a7bae9b8781e3a41850fc266e9274.dir
      size: 8710
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 487abf71a0940532a5c24e02e8281d80
      size: 1270664
    - path: output/ddos/distance_matrix/svc/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5e9ebdff0710028e10620954b6023aef
      size: 3148735
    - path: output/ddos/logs/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: bbdf6854e2bdfcc3622305a8b287a936.dir
      size: 18311
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: c4ccaab46eaa9b31eff517cb82e27e89.dir
      size: 8714
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 3b154b98e933d3bd532dc710f8927f5c
      size: 1460796
    - path: output/ddos/distance_matrix/svc/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: af1f730f6966eb52c30bca10b3ffa675
      size: 3622500
    - path: output/ddos/logs/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 08433448b9f365385f185582bee5dafa.dir
      size: 18289
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 8bb8fa8112a5a8120ffec228903665eb.dir
      size: 8706
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/svc/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dac930e8eccab543e7f4a650691154ab
      size: 1664240
    - path: output/ddos/logs/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: 387818e69f1e64674f2a3e49c7285812.dir
      size: 18428
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: e7cf0eca6f758c106510417231771dcb.dir
      size: 8733
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/svc/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: 3ef95fbc20c2ed9cb6d8a1a9549fa0aa.dir
      size: 18427
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: 0bd3b4b7975bc84c2678a38d01400d57.dir
      size: 8731
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/svc/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: 447b5efb44d88bc42aabef6e669616ee.dir
      size: 18435
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: 49be06411b020cac41f254191284c544.dir
      size: 8734
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5ce75f11bc0521c7c7043b998baff55f
      size: 655767
    - path: output/ddos/distance_matrix/svc/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/svc/levenshtein/Average/1000/
      hash: md5
      md5: e74d29325e283a1951bd4d9cfbb8fc09.dir
      size: 18418
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/levenshtein/Average/1000/
      hash: md5
      md5: 20e8672d0e6c4732d210f6856d4538a9.dir
      size: 8733
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/svc/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: output/ddos/logs/precomputed/svc/ratio/Vanilla/1000/
      hash: md5
      md5: 6a7ee11c4aa0dfeee820414ab2c36c45.dir
      size: 18285
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/ratio/Vanilla/1000/
      hash: md5
      md5: 287852c5b3cf968e69c785718f04ca64.dir
      size: 8710
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/svc/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: output/ddos/logs/precomputed/svc/ratio/Assumed/1000/
      hash: md5
      md5: d720a1e5527e5950d51047895aa33219.dir
      size: 18282
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/ratio/Assumed/1000/
      hash: md5
      md5: f8c35c7014b82b7c813a7caba148c9c3.dir
      size: 8708
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/svc/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: output/ddos/logs/precomputed/svc/ratio/Enforced/1000/
      hash: md5
      md5: 54cae65cc87d4c56182d873a6f528f23.dir
      size: 18286
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/ratio/Enforced/1000/
      hash: md5
      md5: b227531e97c1a410264d05565cdda1f4.dir
      size: 8710
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/svc/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: output/ddos/logs/precomputed/svc/ratio/Average/1000/
      hash: md5
      md5: 775c2ed5add36c40453c20aab2cc0298.dir
      size: 18268
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/ratio/Average/1000/
      hash: md5
      md5: 614f9c0857b31a976f7d33157eddbf6b.dir
      size: 8705
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/svc/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dde06e736d6d94095cf9a2a79163e098
      size: 1662982
    - path: output/ddos/logs/precomputed/svc/hamming/Vanilla/1000/
      hash: md5
      md5: c70e91d9905d6f516713b91fbf711252.dir
      size: 18323
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/hamming/Vanilla/1000/
      hash: md5
      md5: 1dc7c917d17d95af13d847873842fc81.dir
      size: 8714
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/svc/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/svc/hamming/Assumed/1000/
      hash: md5
      md5: 3bd42d900807a00f81d76a619650a907.dir
      size: 18321
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/hamming/Assumed/1000/
      hash: md5
      md5: 7b191f2ab349f6e1895da4f0a47f936e.dir
      size: 8710
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/svc/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/svc/hamming/Enforced/1000/
      hash: md5
      md5: e504cec1dae189be0e91007b2e1b815b.dir
      size: 18329
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/hamming/Enforced/1000/
      hash: md5
      md5: 84b1c4bab2b64ed6ad9f2879bd28df97.dir
      size: 8714
      nfiles: 3
  grid_search_precompute@1000-ddos-svc-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/svc/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/svc/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 95d998d5ca67aecf9f3adb517d8bffc2
      size: 671342
    - path: output/ddos/distance_matrix/svc/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/svc/hamming/Average/1000/
      hash: md5
      md5: 1ee1b1260c08dc6982c664fc18021996.dir
      size: 18310
      nfiles: 4
    - path: output/ddos/reports/precomputed/svc/hamming/Average/1000/
      hash: md5
      md5: c08e1259163534f8aa9327fc4bc5afe2.dir
      size: 8713
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/logistic/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 4fa9398b1ade256b96a015761d0ba7f5
      size: 2922768
    - path: output/ddos/logs/precomputed/logistic/gzip/Vanilla/1000/
      hash: md5
      md5: bfbf5f3c5451bcc1ecef312fdc6ef384.dir
      size: 18552
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/gzip/Vanilla/1000/
      hash: md5
      md5: cae5f8a56a1aae1f31674913ab2f29be.dir
      size: 8715
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2e93718f92070fa61f02349b4c820562
      size: 1173977
    - path: output/ddos/distance_matrix/logistic/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: ad0f54674da2c0ed53f3947d7e66f72e
      size: 2918476
    - path: output/ddos/logs/precomputed/logistic/gzip/Assumed/1000/
      hash: md5
      md5: 8875955d817cd8ac2f051f77d5203970.dir
      size: 18550
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/gzip/Assumed/1000/
      hash: md5
      md5: 374d4a998f1a3187eda4f99afff4120f.dir
      size: 8713
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 4c0df9cecac1566a1e1a8eecb5d4b048
      size: 1170215
    - path: output/ddos/distance_matrix/logistic/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: aaf49660eebadf1be99cf3f69a378028
      size: 2897484
    - path: output/ddos/logs/precomputed/logistic/gzip/Enforced/1000/
      hash: md5
      md5: afec6d8f35b6b462f14ff66825b527ad.dir
      size: 18559
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/gzip/Enforced/1000/
      hash: md5
      md5: f8e79e359d926cb3941c92c0694e32ea.dir
      size: 8714
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 8d602c84aa4790618b473a24fedd41c3
      size: 1371119
    - path: output/ddos/distance_matrix/logistic/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: d750a2db8bc42fc202782e3869f2f25b
      size: 3400593
    - path: output/ddos/logs/precomputed/logistic/gzip/Average/1000/
      hash: md5
      md5: 909fdf2b46b653e2e6171d37d8c0a7bf.dir
      size: 18540
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/gzip/Average/1000/
      hash: md5
      md5: 82eba78105f72b64875e1df2a0b91a50.dir
      size: 8713
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/logistic/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/logistic/bz2/Vanilla/1000/
      hash: md5
      md5: 49bea05915693c09a9822d6c771ffe3f.dir
      size: 18538
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/bz2/Vanilla/1000/
      hash: md5
      md5: 89c26c383767f15df89eb3385ffeada7.dir
      size: 8713
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/logistic/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: output/ddos/logs/precomputed/logistic/bz2/Assumed/1000/
      hash: md5
      md5: 8841d2172ebbf28d103e4e740ab80ec8.dir
      size: 18536
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/bz2/Assumed/1000/
      hash: md5
      md5: eac874abaa4b8b426d76aa8ca74e3487.dir
      size: 8711
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/logistic/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/logistic/bz2/Enforced/1000/
      hash: md5
      md5: b9431d7e99e45c33564f2b84578909c1.dir
      size: 18544
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/bz2/Enforced/1000/
      hash: md5
      md5: e809a7805abd55799051e567b2529481.dir
      size: 8711
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/logistic/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: output/ddos/logs/precomputed/logistic/bz2/Average/1000/
      hash: md5
      md5: 32f4dbf3156a86c7f61ddcda1f55ec65.dir
      size: 18527
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/bz2/Average/1000/
      hash: md5
      md5: ec80d63f2dbe3304fa90138fdc89a3bf.dir
      size: 8711
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/logistic/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2fba7a69395876e7c2c43db3eb29a22
      size: 3143767
    - path: output/ddos/logs/precomputed/logistic/brotli/Vanilla/1000/
      hash: md5
      md5: 95791c4d6b0cf773a714d54c33713dd2.dir
      size: 18600
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/brotli/Vanilla/1000/
      hash: md5
      md5: c99659804f8a924ed56df2b5fe29bd73.dir
      size: 8721
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/logistic/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2c29a1b45cd1f52bba5493b7e237a88
      size: 3148759
    - path: output/ddos/logs/precomputed/logistic/brotli/Assumed/1000/
      hash: md5
      md5: b353d58138ae4e5fad7a865ae1207bbc.dir
      size: 18597
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/brotli/Assumed/1000/
      hash: md5
      md5: d6fc6f2d3808c916620a55490d7d34ba.dir
      size: 8719
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 487abf71a0940532a5c24e02e8281d80
      size: 1270664
    - path: output/ddos/distance_matrix/logistic/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5e9ebdff0710028e10620954b6023aef
      size: 3148735
    - path: output/ddos/logs/precomputed/logistic/brotli/Enforced/1000/
      hash: md5
      md5: 19e441c482b35761d7dc82b7280f62b9.dir
      size: 18607
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/brotli/Enforced/1000/
      hash: md5
      md5: bf94ddaece648aee9af8caafc5b5e948.dir
      size: 8725
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 3b154b98e933d3bd532dc710f8927f5c
      size: 1460796
    - path: output/ddos/distance_matrix/logistic/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: af1f730f6966eb52c30bca10b3ffa675
      size: 3622500
    - path: output/ddos/logs/precomputed/logistic/brotli/Average/1000/
      hash: md5
      md5: 325e66838fdf66565bf68375b2630378.dir
      size: 18589
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/brotli/Average/1000/
      hash: md5
      md5: 0da2cb4bdd9548b7645fe64a10553105.dir
      size: 8721
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/logistic/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dac930e8eccab543e7f4a650691154ab
      size: 1664240
    - path: output/ddos/logs/precomputed/logistic/levenshtein/Vanilla/1000/
      hash: md5
      md5: 61f19d695aaae2a27367e331cc6dd1be.dir
      size: 18729
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/levenshtein/Vanilla/1000/
      hash: md5
      md5: 207c4f0e89682e77970594bc59a3d2dc.dir
      size: 8743
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/logistic/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/logistic/levenshtein/Assumed/1000/
      hash: md5
      md5: 549dd987be38ebed7fc91d1f5f970da4.dir
      size: 18727
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/levenshtein/Assumed/1000/
      hash: md5
      md5: 20978c9cafcc4903c3b7ab0ea0a73285.dir
      size: 8739
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos 
      files.reports=reports/precomputed/logistic/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/logistic/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/logistic/levenshtein/Enforced/1000/
      hash: md5
      md5: d2c81248419eca93db6abb64a918eafe.dir
      size: 18737
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/levenshtein/Enforced/1000/
      hash: md5
      md5: 34c593c537c72c1ae72bc5d39061ab87.dir
      size: 8742
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5ce75f11bc0521c7c7043b998baff55f
      size: 655767
    - path: output/ddos/distance_matrix/logistic/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: output/ddos/logs/precomputed/logistic/levenshtein/Average/1000/
      hash: md5
      md5: e66c43908be4287e75039373939efb2c.dir
      size: 18719
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/levenshtein/Average/1000/
      hash: md5
      md5: e5e89862db4ed3ef63ee1da3954f536f.dir
      size: 8740
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/logistic/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: output/ddos/logs/precomputed/logistic/ratio/Vanilla/1000/
      hash: md5
      md5: 8f5935fcd6ca8c4002ea2a76a30b1892.dir
      size: 18581
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/ratio/Vanilla/1000/
      hash: md5
      md5: 997923aefced045c9d289705d57a5a7d.dir
      size: 8718
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/logistic/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: output/ddos/logs/precomputed/logistic/ratio/Assumed/1000/
      hash: md5
      md5: 1017f094879a8030c2bd0ccf164a792e.dir
      size: 18579
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/ratio/Assumed/1000/
      hash: md5
      md5: 909fa2e4ce9b4705a2a9acf837531b79.dir
      size: 8720
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/logistic/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: output/ddos/logs/precomputed/logistic/ratio/Enforced/1000/
      hash: md5
      md5: f86032dcafd3a4337d25648016587f74.dir
      size: 18588
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/ratio/Enforced/1000/
      hash: md5
      md5: 4dc9c830dd6cdf7775a11406ee5cadc9.dir
      size: 8721
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/logistic/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: output/ddos/logs/precomputed/logistic/ratio/Average/1000/
      hash: md5
      md5: a40fd01bf01bb5e0ea1a26f75dbc618f.dir
      size: 18569
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/ratio/Average/1000/
      hash: md5
      md5: ffb2a8d5e9919edb74be9a1881f9c508.dir
      size: 8717
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/logistic/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dde06e736d6d94095cf9a2a79163e098
      size: 1662982
    - path: output/ddos/logs/precomputed/logistic/hamming/Vanilla/1000/
      hash: md5
      md5: d03cfd2fca45e963be4c881eabec08ef.dir
      size: 18634
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/hamming/Vanilla/1000/
      hash: md5
      md5: 80629fde916b2890b48dd9a3061f75f0.dir
      size: 8729
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/logistic/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/logistic/hamming/Assumed/1000/
      hash: md5
      md5: 7381e714f1556a86810baeb72c2b0574.dir
      size: 18633
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/hamming/Assumed/1000/
      hash: md5
      md5: c2175727971a7175114abe6d7cc9ae09.dir
      size: 8727
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e3188aef34fd8fdf895ec3ca6248a094
      size: 666511
    - path: output/ddos/distance_matrix/logistic/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/logistic/hamming/Enforced/1000/
      hash: md5
      md5: d7fd4674cdd6babd75ad1ba02f44eafb.dir
      size: 18642
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/hamming/Enforced/1000/
      hash: md5
      md5: fcc059fc2368cc5dde695e4c6821b180.dir
      size: 8729
      nfiles: 3
  grid_search_precompute@1000-ddos-logistic-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=ddos
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=ddos ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/ddos files.reports=reports/precomputed/logistic/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/distance_matrix/logistic/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 95d998d5ca67aecf9f3adb517d8bffc2
      size: 671342
    - path: output/ddos/distance_matrix/logistic/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: e8bcf813ff0bee750a30a2c2906042ee
      size: 1675312
    - path: output/ddos/logs/precomputed/logistic/hamming/Average/1000/
      hash: md5
      md5: ee17d23ffd99ebadcaebfd8768fd66ce.dir
      size: 18623
      nfiles: 4
    - path: output/ddos/reports/precomputed/logistic/hamming/Average/1000/
      hash: md5
      md5: 10fb2fb475e463909d60aae6bba29484.dir
      size: 8725
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a67b3f206762ede54f3bf67f62024d64
      size: 674041
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 605de42b1ab775f6bd4c12bb9e6892b7
      size: 1683148
    - path: output/kdd_nsl/logs/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 9b84505fb539204ff3abcbf218a7f010.dir
      size: 21742
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 044245cbbeb1f4db7ec2e51cc8289077.dir
      size: 17174
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a67b3f206762ede54f3bf67f62024d64
      size: 674041
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 9d3ddef96b42a885963b9a68b1acbe9b
      size: 1679343
    - path: output/kdd_nsl/logs/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: cf787a137b22eb2947152553fadf2e0f.dir
      size: 21528
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: 783f4dbd1083ae25cc839878b1910b68.dir
      size: 17167
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 50aad53908d271d8ac279690d7efc47f
      size: 673206
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: d7737d320a52abffeba62146a6258d9f
      size: 1677929
    - path: output/kdd_nsl/logs/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: 6501ef11d6752bba4ed9a3a44a92e7da.dir
      size: 21767
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: 1909e01512d1c2986a8a49ff0b70f292.dir
      size: 17182
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: db1d7132c280ab3076c14334b87a5c7c
      size: 793467
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 43be7e6b08ac3a194d599240110e7973
      size: 1977763
    - path: output/kdd_nsl/logs/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: f8445569afd9573d04e683c0e7293dac.dir
      size: 21533
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: 94b280a2d57d3fadfd20e21a2772f02c.dir
      size: 17179
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: c83d8c457d0a3bee5fd376f1efd86840
      size: 637674
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 66aa0c19441d0a9f3184ec817734f887
      size: 1586189
    - path: output/kdd_nsl/logs/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: d52d031a9904f2c26ecf0528c286e9b0.dir
      size: 21728
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: d53eb6eaeba1355d0ec1c4437a0c306f.dir
      size: 17174
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: c83d8c457d0a3bee5fd376f1efd86840
      size: 637674
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 66aa0c19441d0a9f3184ec817734f887
      size: 1586189
    - path: output/kdd_nsl/logs/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: cf4ddaa9f5aeb9378a69156525cce3a7.dir
      size: 21514
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: 849c9e8d56026af4746e6b5b057f4cd8.dir
      size: 17167
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: d0d0e7ecfbb0dbaaa5deac1efebe852d
      size: 637677
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 96c9985b08ca4f4071ba96340d28c53f
      size: 1584893
    - path: output/kdd_nsl/logs/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: 391de0a968d0911bd4e1e24696657c43.dir
      size: 21737
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: 9ccdeb6251e01fc2a065745ec36417e4.dir
      size: 17173
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: d0d0e7ecfbb0dbaaa5deac1efebe852d
      size: 637677
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: 96c9985b08ca4f4071ba96340d28c53f
      size: 1584893
    - path: output/kdd_nsl/logs/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: 7324a6c1d5f0ff87a52cfbde8e5fbfd8.dir
      size: 21504
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: 8b19725fe5293520bfe45ae2bff342de.dir
      size: 17166
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da6de065c98b2f458cc838c2fe0359b5
      size: 758244
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: ea2fafe58d1e55f5d8f613972dc82ff8
      size: 1891311
    - path: output/kdd_nsl/logs/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 2f504c9f5154f94ae01851ba1283e9a7.dir
      size: 21801
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 66857b94f87c4db6a2ae2a76ad7dee13.dir
      size: 17194
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da6de065c98b2f458cc838c2fe0359b5
      size: 758244
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 4c463003df65e01a75db7961d70892fa
      size: 1892169
    - path: output/kdd_nsl/logs/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: 63269113bc97548220d652a189c728f1.dir
      size: 21587
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: 989d1fe10b9e9172a97476c2226c8379.dir
      size: 17190
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 5b47ef255f48610cda8618784ef23c00
      size: 758626
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: bc3572eddab286c4ad24ffe80e4cd5a1
      size: 1895058
    - path: output/kdd_nsl/logs/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: ce29e8f4ede203f095ee91d6f7480fac.dir
      size: 21826
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: 24813628c1cbd3cbed897555babf72db.dir
      size: 17197
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 0e01c722756a31e0328b3a795835bed9
      size: 896872
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: e3da6260675abbea7c829f124285f20f
      size: 2236219
    - path: output/kdd_nsl/logs/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: fcfb0b472f111a03cc63129a26110d53.dir
      size: 21587
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: c73619d75ed2297255db0fb11ff3bf45.dir
      size: 17191
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: a306cbe665214aecec0c2a739efcef99
      size: 994733
    - path: output/kdd_nsl/logs/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: d7ef297e7c284383c49bf9b29ce46e31.dir
      size: 21959
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 7597b0ff4bbdfb1a8c2826e7fe4c5567.dir
      size: 17236
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: a058f7f0a82000f91d1999b924b4f58d.dir
      size: 21747
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 4ec7c35a374017ccb5361a4bc6d5bbfa.dir
      size: 17235
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 6b3add0008f4671570962a28afce1411.dir
      size: 21971
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 66d0631419f6e7e26ab96884759b693c.dir
      size: 17236
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: df88b940d193736c20aab13286b88093
      size: 416205
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: 8527ba30f4aa55b9ed99727eb8794cc1.dir
      size: 21735
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: 134ac59d1bba294b484c6fccbce23217.dir
      size: 17232
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 4fcf722a9fb7b652d26a61dd41c4e40a
      size: 738549
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 207db04decab64acf9d2ec2e22754388
      size: 1839567
    - path: output/kdd_nsl/logs/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 7282310e9e14bb4121e85c80799a739f.dir
      size: 21786
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 5992bdc2dafda648651ad0ce2ec08528.dir
      size: 17189
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 4fcf722a9fb7b652d26a61dd41c4e40a
      size: 738549
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 207db04decab64acf9d2ec2e22754388
      size: 1839567
    - path: output/kdd_nsl/logs/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: f190af5ad64c907c63e23a1448c8f2bf.dir
      size: 21573
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: c19fd463a8896b29a46cbcae4b51c736.dir
      size: 17181
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 081900c84a4478429442764bf0d55fac
      size: 738547
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5751150091700f7bab9359dd9e52d38f
      size: 1839604
    - path: output/kdd_nsl/logs/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: ea9b5fc42006dee12ae4b274c5164cba.dir
      size: 21790
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: c392cd78da121e8183c30a966fd2c1c2.dir
      size: 17190
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 081900c84a4478429442764bf0d55fac
      size: 738547
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 5751150091700f7bab9359dd9e52d38f
      size: 1839604
    - path: output/kdd_nsl/logs/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: b17b8e0bda31adc3c802e054a48a7ea7.dir
      size: 21555
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: 64d3239fbdcb6f17490d8f69a2e54e76.dir
      size: 17179
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 82daae721234b3cd9e654c075f3b082c
      size: 1341768
    - path: output/kdd_nsl/logs/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: 46680e46b3ca3fabe7aa35b0c6633880.dir
      size: 21835
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: fbadeea96d8432e28c21da9970dae7cb.dir
      size: 17202
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: fe34de70fd898a01499c1b3b01aecc32.dir
      size: 21623
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: 2a0882f26c748f2acd2645cc8cc92de5.dir
      size: 17199
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: 7353b37f61924a804e47fa8c867ab3f6.dir
      size: 21848
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: 6a524395af06a01d37f333a2d243463f.dir
      size: 17205
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-knn-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/knn/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 5a3d965d23fdaf091483c937dd6ef938
      size: 525644
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: cfcac6017a7ed52caa2e27ed23618a49.dir
      size: 21610
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 583306c1b954866ddceec4b1e8ade453.dir
      size: 17191
      nfiles: 6
  grid_search_precompute@1000-kdd_nsl-svc-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a67b3f206762ede54f3bf67f62024d64
      size: 674041
    - path: output/kdd_nsl/distance_matrix/svc/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 605de42b1ab775f6bd4c12bb9e6892b7
      size: 1683148
    - path: output/kdd_nsl/logs/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 5416de62b61c3f266bf0fdd467a8dc16.dir
      size: 18207
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 9bb4fd3116ea68f75b8b1893f03466e4.dir
      size: 8639
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a67b3f206762ede54f3bf67f62024d64
      size: 674041
    - path: output/kdd_nsl/distance_matrix/svc/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 9d3ddef96b42a885963b9a68b1acbe9b
      size: 1679343
    - path: output/kdd_nsl/logs/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 3790038c2ba6a72b0f1aed150114b2b7.dir
      size: 18205
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: f4038369cdceb4385470d15fcfcd25ce.dir
      size: 8637
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 50aad53908d271d8ac279690d7efc47f
      size: 673206
    - path: output/kdd_nsl/distance_matrix/svc/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: d7737d320a52abffeba62146a6258d9f
      size: 1677929
    - path: output/kdd_nsl/logs/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: ebc3b314dbf450c2a79e7c3dae5db254.dir
      size: 18214
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: bba76af38626b64d5ba4d033a67d24dd.dir
      size: 8639
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: db1d7132c280ab3076c14334b87a5c7c
      size: 793467
    - path: output/kdd_nsl/distance_matrix/svc/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 43be7e6b08ac3a194d599240110e7973
      size: 1977763
    - path: output/kdd_nsl/logs/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: d20deafdf0997c591cbd3989ca1feb8b.dir
      size: 18194
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: eaacfdf863c4918b8c8db2b706ea8dfe.dir
      size: 8637
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: c83d8c457d0a3bee5fd376f1efd86840
      size: 637674
    - path: output/kdd_nsl/distance_matrix/svc/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 66aa0c19441d0a9f3184ec817734f887
      size: 1586189
    - path: output/kdd_nsl/logs/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: 01a780d65197daba61f9e2c406ffa768.dir
      size: 18173
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: 0815716c136431fcbf30a7db1e8f6f03.dir
      size: 8632
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: c83d8c457d0a3bee5fd376f1efd86840
      size: 637674
    - path: output/kdd_nsl/distance_matrix/svc/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 66aa0c19441d0a9f3184ec817734f887
      size: 1586189
    - path: output/kdd_nsl/logs/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: 87e90a173efb752ddf38c6fd711eacd5.dir
      size: 18169
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: 5e8eb2df3acd92b569a832029807e198.dir
      size: 8630
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: d0d0e7ecfbb0dbaaa5deac1efebe852d
      size: 637677
    - path: output/kdd_nsl/distance_matrix/svc/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 96c9985b08ca4f4071ba96340d28c53f
      size: 1584893
    - path: output/kdd_nsl/logs/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: c257d0dd8c1b50abbdeb4fe64e014c47.dir
      size: 18179
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: 30f805dcf31864c35234fed321ae6095.dir
      size: 8634
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: d0d0e7ecfbb0dbaaa5deac1efebe852d
      size: 637677
    - path: output/kdd_nsl/distance_matrix/svc/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: 96c9985b08ca4f4071ba96340d28c53f
      size: 1584893
    - path: output/kdd_nsl/logs/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: 7d2c562ea6fbd00995294674fe421cad.dir
      size: 18162
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: f057ed4ed05206b60ccac4e3ee72a3db.dir
      size: 8631
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da6de065c98b2f458cc838c2fe0359b5
      size: 758244
    - path: output/kdd_nsl/distance_matrix/svc/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: ea2fafe58d1e55f5d8f613972dc82ff8
      size: 1891311
    - path: output/kdd_nsl/logs/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: 598014c79204963f2ccac9e9c57cf10a.dir
      size: 18255
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: 48fca4cbd56f4594b5778dca1e7126af.dir
      size: 8647
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da6de065c98b2f458cc838c2fe0359b5
      size: 758244
    - path: output/kdd_nsl/distance_matrix/svc/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 4c463003df65e01a75db7961d70892fa
      size: 1892169
    - path: output/kdd_nsl/logs/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: 0f92670bc46a8f931b4277bcfbd4cdd2.dir
      size: 18253
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: 179e7c5ebdbb08f471c0c65d7923c7e5.dir
      size: 8645
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 5b47ef255f48610cda8618784ef23c00
      size: 758626
    - path: output/kdd_nsl/distance_matrix/svc/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: bc3572eddab286c4ad24ffe80e4cd5a1
      size: 1895058
    - path: output/kdd_nsl/logs/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: 4f44c4008b8672aca06d12b1b7421b55.dir
      size: 18262
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: c4f07dfdc99dc872d7c666cf9fc63290.dir
      size: 8646
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 0e01c722756a31e0328b3a795835bed9
      size: 896872
    - path: output/kdd_nsl/distance_matrix/svc/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: e3da6260675abbea7c829f124285f20f
      size: 2236219
    - path: output/kdd_nsl/logs/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 10e9896460f9d6bb965041a59355528b.dir
      size: 18244
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 310eb60a1f7f3b46af9823fe39e0a050.dir
      size: 8646
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/svc/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: a306cbe665214aecec0c2a739efcef99
      size: 994733
    - path: output/kdd_nsl/logs/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: e8e4f7bda37a34b90558998891df4b04.dir
      size: 18375
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: 58b326365eb722c6c0bd545a338b0104.dir
      size: 8669
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/svc/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: d24401958a73eec841e20790df57f085.dir
      size: 18373
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: 3d35654836633a46002bc7645bfa2b50.dir
      size: 8666
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/svc/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: 5ebd8193fb5a076a3f0c56c3ac24cd3a.dir
      size: 18381
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: a2012b5c9dfbceffc291008055b3f4e9.dir
      size: 8671
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: df88b940d193736c20aab13286b88093
      size: 416205
    - path: output/kdd_nsl/distance_matrix/svc/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/svc/levenshtein/Average/1000/
      hash: md5
      md5: cf4a66aff99641bbea39644d84eb43ef.dir
      size: 18364
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/levenshtein/Average/1000/
      hash: md5
      md5: 260d8c8f3874f01d23eca1ab63f25c55.dir
      size: 8665
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 4fcf722a9fb7b652d26a61dd41c4e40a
      size: 738549
    - path: output/kdd_nsl/distance_matrix/svc/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 207db04decab64acf9d2ec2e22754388
      size: 1839567
    - path: output/kdd_nsl/logs/precomputed/svc/ratio/Vanilla/1000/
      hash: md5
      md5: 77065cd03bd0c5ac61c78373406e648c.dir
      size: 18221
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/ratio/Vanilla/1000/
      hash: md5
      md5: 1c2f5fb8a9b4f6b22c605dfe9504f34b.dir
      size: 8640
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 4fcf722a9fb7b652d26a61dd41c4e40a
      size: 738549
    - path: output/kdd_nsl/distance_matrix/svc/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 207db04decab64acf9d2ec2e22754388
      size: 1839567
    - path: output/kdd_nsl/logs/precomputed/svc/ratio/Assumed/1000/
      hash: md5
      md5: 66e77c66e4bc5368cfd6efbc0248d6a9.dir
      size: 18219
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/ratio/Assumed/1000/
      hash: md5
      md5: f1d5272b0cae7bf2473ef219ff7574c6.dir
      size: 8639
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 081900c84a4478429442764bf0d55fac
      size: 738547
    - path: output/kdd_nsl/distance_matrix/svc/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5751150091700f7bab9359dd9e52d38f
      size: 1839604
    - path: output/kdd_nsl/logs/precomputed/svc/ratio/Enforced/1000/
      hash: md5
      md5: 119ede2bab8b76e8a8e4bf56c84832db.dir
      size: 18238
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/ratio/Enforced/1000/
      hash: md5
      md5: 5f88832b65d934d19c7d5ee45753f275.dir
      size: 8645
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 081900c84a4478429442764bf0d55fac
      size: 738547
    - path: output/kdd_nsl/distance_matrix/svc/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 5751150091700f7bab9359dd9e52d38f
      size: 1839604
    - path: output/kdd_nsl/logs/precomputed/svc/ratio/Average/1000/
      hash: md5
      md5: 2443b19a1dc2cb6f87c6be43e5fe92ef.dir
      size: 18220
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/ratio/Average/1000/
      hash: md5
      md5: d2f171bcf4797da0f293431ca73238a6.dir
      size: 8644
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/svc/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 82daae721234b3cd9e654c075f3b082c
      size: 1341768
    - path: output/kdd_nsl/logs/precomputed/svc/hamming/Vanilla/1000/
      hash: md5
      md5: 0ae196260cfd453d88d1313aa5c96b12.dir
      size: 18279
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/hamming/Vanilla/1000/
      hash: md5
      md5: ea95bb5d497b2a442acdef712d83d13f.dir
      size: 8653
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/svc/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/svc/hamming/Assumed/1000/
      hash: md5
      md5: 1efb9c3cc16ab44dddb0e97b425bbd6a.dir
      size: 18277
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/hamming/Assumed/1000/
      hash: md5
      md5: a20c15ac2358e3b726211d3cd8b04881.dir
      size: 8652
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/svc/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/svc/hamming/Enforced/1000/
      hash: md5
      md5: 603d053f6d311d1ae5a5fd498cc3ee52.dir
      size: 18286
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/hamming/Enforced/1000/
      hash: md5
      md5: 1d7ec8c6683aa28c9c8de79cac8048a0.dir
      size: 8653
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-svc-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/svc/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/svc/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 5a3d965d23fdaf091483c937dd6ef938
      size: 525644
    - path: output/kdd_nsl/distance_matrix/svc/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/svc/hamming/Average/1000/
      hash: md5
      md5: dc613a8a9bbdaba82cc0d5c6f10cd94d.dir
      size: 18266
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/svc/hamming/Average/1000/
      hash: md5
      md5: 304accb0db21199f2c7fb4a1fe56d659.dir
      size: 8647
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a67b3f206762ede54f3bf67f62024d64
      size: 674041
    - path: output/kdd_nsl/distance_matrix/logistic/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 605de42b1ab775f6bd4c12bb9e6892b7
      size: 1683148
    - path: output/kdd_nsl/logs/precomputed/logistic/gzip/Vanilla/1000/
      hash: md5
      md5: 638410f42e67e680078617ba0abf3f73.dir
      size: 18506
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/gzip/Vanilla/1000/
      hash: md5
      md5: f0c8ebedc8f99ba8a2361b9a39e4cc0a.dir
      size: 8648
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a67b3f206762ede54f3bf67f62024d64
      size: 674041
    - path: output/kdd_nsl/distance_matrix/logistic/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 9d3ddef96b42a885963b9a68b1acbe9b
      size: 1679343
    - path: output/kdd_nsl/logs/precomputed/logistic/gzip/Assumed/1000/
      hash: md5
      md5: 18ee1503421022bff57c58d9a94db34d.dir
      size: 18504
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/gzip/Assumed/1000/
      hash: md5
      md5: 31b8b3428e4dc56961b7a2bad228d666.dir
      size: 8648
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 50aad53908d271d8ac279690d7efc47f
      size: 673206
    - path: output/kdd_nsl/distance_matrix/logistic/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: d7737d320a52abffeba62146a6258d9f
      size: 1677929
    - path: output/kdd_nsl/logs/precomputed/logistic/gzip/Enforced/1000/
      hash: md5
      md5: 4de59f0e0d03bb0e4c95c6f9c82fd4c5.dir
      size: 18515
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/gzip/Enforced/1000/
      hash: md5
      md5: 9c3728670a95fb4ff8ebcd2313ddc55b.dir
      size: 8653
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: db1d7132c280ab3076c14334b87a5c7c
      size: 793467
    - path: output/kdd_nsl/distance_matrix/logistic/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 43be7e6b08ac3a194d599240110e7973
      size: 1977763
    - path: output/kdd_nsl/logs/precomputed/logistic/gzip/Average/1000/
      hash: md5
      md5: d4f64cec50c7fb6395c001d8e4453ad6.dir
      size: 18497
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/gzip/Average/1000/
      hash: md5
      md5: 9e35360ff56f98bb1210c7dd875ed57e.dir
      size: 8650
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: c83d8c457d0a3bee5fd376f1efd86840
      size: 637674
    - path: output/kdd_nsl/distance_matrix/logistic/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 66aa0c19441d0a9f3184ec817734f887
      size: 1586189
    - path: output/kdd_nsl/logs/precomputed/logistic/bz2/Vanilla/1000/
      hash: md5
      md5: 5054cfc146225ed60d5b789acdfd5d49.dir
      size: 18484
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/bz2/Vanilla/1000/
      hash: md5
      md5: 2133f4ab6cffdbcc350c0e44a3d86d01.dir
      size: 8645
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: c83d8c457d0a3bee5fd376f1efd86840
      size: 637674
    - path: output/kdd_nsl/distance_matrix/logistic/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 66aa0c19441d0a9f3184ec817734f887
      size: 1586189
    - path: output/kdd_nsl/logs/precomputed/logistic/bz2/Assumed/1000/
      hash: md5
      md5: ff645f2fd38ed93a7b41d96672d20ba6.dir
      size: 18481
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/bz2/Assumed/1000/
      hash: md5
      md5: d78b65f5de8ff7844c1ea877bdcc8e56.dir
      size: 8643
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: d0d0e7ecfbb0dbaaa5deac1efebe852d
      size: 637677
    - path: output/kdd_nsl/distance_matrix/logistic/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 96c9985b08ca4f4071ba96340d28c53f
      size: 1584893
    - path: output/kdd_nsl/logs/precomputed/logistic/bz2/Enforced/1000/
      hash: md5
      md5: 533c576607b21a9a899cb01e05332a75.dir
      size: 18491
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/bz2/Enforced/1000/
      hash: md5
      md5: bf4798dcbbb51d73e134ce1845bc4e47.dir
      size: 8647
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: d0d0e7ecfbb0dbaaa5deac1efebe852d
      size: 637677
    - path: output/kdd_nsl/distance_matrix/logistic/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: 96c9985b08ca4f4071ba96340d28c53f
      size: 1584893
    - path: output/kdd_nsl/logs/precomputed/logistic/bz2/Average/1000/
      hash: md5
      md5: 92578f8da33cd3fdeb1a93803297e970.dir
      size: 18473
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/bz2/Average/1000/
      hash: md5
      md5: 714516ad9327f164c5fb1deea20320a5.dir
      size: 8645
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da6de065c98b2f458cc838c2fe0359b5
      size: 758244
    - path: output/kdd_nsl/distance_matrix/logistic/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: ea2fafe58d1e55f5d8f613972dc82ff8
      size: 1891311
    - path: output/kdd_nsl/logs/precomputed/logistic/brotli/Vanilla/1000/
      hash: md5
      md5: dd0af310a640593cc3307827d528b4b4.dir
      size: 18556
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/brotli/Vanilla/1000/
      hash: md5
      md5: 02cf685087a79a1bf8b15bbda8bd6331.dir
      size: 8655
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da6de065c98b2f458cc838c2fe0359b5
      size: 758244
    - path: output/kdd_nsl/distance_matrix/logistic/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 4c463003df65e01a75db7961d70892fa
      size: 1892169
    - path: output/kdd_nsl/logs/precomputed/logistic/brotli/Assumed/1000/
      hash: md5
      md5: ee35be926cb4595ee959987426ce493c.dir
      size: 18554
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/brotli/Assumed/1000/
      hash: md5
      md5: b0e79996feb144d9f94692ed132746d4.dir
      size: 8658
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 5b47ef255f48610cda8618784ef23c00
      size: 758626
    - path: output/kdd_nsl/distance_matrix/logistic/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: bc3572eddab286c4ad24ffe80e4cd5a1
      size: 1895058
    - path: output/kdd_nsl/logs/precomputed/logistic/brotli/Enforced/1000/
      hash: md5
      md5: 28608072f968b9cdfbd73a7c6ac48337.dir
      size: 18562
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/brotli/Enforced/1000/
      hash: md5
      md5: 64b2417ec75f8a6c43f0a88e9ee55bed.dir
      size: 8657
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 0e01c722756a31e0328b3a795835bed9
      size: 896872
    - path: output/kdd_nsl/distance_matrix/logistic/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: e3da6260675abbea7c829f124285f20f
      size: 2236219
    - path: output/kdd_nsl/logs/precomputed/logistic/brotli/Average/1000/
      hash: md5
      md5: a50936fbef7d4846962bdcaac1a5f2ea.dir
      size: 18540
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/brotli/Average/1000/
      hash: md5
      md5: b86fa78fc3e81b7b4122b828ba2265f3.dir
      size: 8652
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/logistic/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: a306cbe665214aecec0c2a739efcef99
      size: 994733
    - path: output/kdd_nsl/logs/precomputed/logistic/levenshtein/Vanilla/1000/
      hash: md5
      md5: d70a5cae33f3bac28cc78f89570b9bd7.dir
      size: 18677
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/levenshtein/Vanilla/1000/
      hash: md5
      md5: c1f0d79660be99ed22c7547a89d62050.dir
      size: 8677
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/logistic/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/logistic/levenshtein/Assumed/1000/
      hash: md5
      md5: 0ce5c86711bae30975d7d6daedf552b5.dir
      size: 18675
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/levenshtein/Assumed/1000/
      hash: md5
      md5: 82e69bf0fda86a20eec9f7bee589b7ff.dir
      size: 8675
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl 
      files.reports=reports/precomputed/logistic/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: 
        output/kdd_nsl/distance_matrix/logistic/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/logistic/levenshtein/Enforced/1000/
      hash: md5
      md5: 001bf0f57870c3b238311e798465baff.dir
      size: 18683
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/levenshtein/Enforced/1000/
      hash: md5
      md5: 019876e6f818331b216de3e8a6d5ba83.dir
      size: 8679
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: df88b940d193736c20aab13286b88093
      size: 416205
    - path: output/kdd_nsl/distance_matrix/logistic/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: output/kdd_nsl/logs/precomputed/logistic/levenshtein/Average/1000/
      hash: md5
      md5: 6081c4c57e060f449a65368d32054ca3.dir
      size: 18665
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/levenshtein/Average/1000/
      hash: md5
      md5: 60fcfa14aa2f4c33cbee2c208c928643.dir
      size: 8675
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 4fcf722a9fb7b652d26a61dd41c4e40a
      size: 738549
    - path: output/kdd_nsl/distance_matrix/logistic/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 207db04decab64acf9d2ec2e22754388
      size: 1839567
    - path: output/kdd_nsl/logs/precomputed/logistic/ratio/Vanilla/1000/
      hash: md5
      md5: 7caea0b3770b3297a3109b17cd3744f2.dir
      size: 18530
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/ratio/Vanilla/1000/
      hash: md5
      md5: cd1a6f1d09f4ff531cc806b4652013d7.dir
      size: 8649
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 4fcf722a9fb7b652d26a61dd41c4e40a
      size: 738549
    - path: output/kdd_nsl/distance_matrix/logistic/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 207db04decab64acf9d2ec2e22754388
      size: 1839567
    - path: output/kdd_nsl/logs/precomputed/logistic/ratio/Assumed/1000/
      hash: md5
      md5: c1d597f545ea63ceca1cbc3b464a6d4d.dir
      size: 18530
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/ratio/Assumed/1000/
      hash: md5
      md5: 490623a16ce5fae45b1ec34d7b0c1519.dir
      size: 8654
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 081900c84a4478429442764bf0d55fac
      size: 738547
    - path: output/kdd_nsl/distance_matrix/logistic/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5751150091700f7bab9359dd9e52d38f
      size: 1839604
    - path: output/kdd_nsl/logs/precomputed/logistic/ratio/Enforced/1000/
      hash: md5
      md5: b9d4e10cbf061a9927f2af56e691ed49.dir
      size: 18534
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/ratio/Enforced/1000/
      hash: md5
      md5: 774bec677a219deb572ac60f1cf9f693.dir
      size: 8653
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 081900c84a4478429442764bf0d55fac
      size: 738547
    - path: output/kdd_nsl/distance_matrix/logistic/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 5751150091700f7bab9359dd9e52d38f
      size: 1839604
    - path: output/kdd_nsl/logs/precomputed/logistic/ratio/Average/1000/
      hash: md5
      md5: 23aaac95c9f7dee9b56713b1b17e0470.dir
      size: 18516
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/ratio/Average/1000/
      hash: md5
      md5: 9b0ca42dff3eca8605e7c7b13f8459e0.dir
      size: 8652
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/logistic/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 82daae721234b3cd9e654c075f3b082c
      size: 1341768
    - path: output/kdd_nsl/logs/precomputed/logistic/hamming/Vanilla/1000/
      hash: md5
      md5: ca0a84bb753055b90b62ab6ad8f85adb.dir
      size: 18570
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/hamming/Vanilla/1000/
      hash: md5
      md5: bd2560510734d7d466114b454495e607.dir
      size: 8658
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/logistic/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/logistic/hamming/Assumed/1000/
      hash: md5
      md5: 2980512cd299a4ddb7ca8c10c6e266ed.dir
      size: 18569
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/hamming/Assumed/1000/
      hash: md5
      md5: 43fd70f6bf5b960da0e1f9652fc8a007.dir
      size: 8658
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/logistic/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/logistic/hamming/Enforced/1000/
      hash: md5
      md5: 85717124d4aaf89e164120360cc123f3.dir
      size: 18578
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/hamming/Enforced/1000/
      hash: md5
      md5: 6d765e258032411f90acee6d3818082b.dir
      size: 8660
      nfiles: 3
  grid_search_precompute@1000-kdd_nsl-logistic-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=kdd_nsl
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/kdd_nsl files.reports=reports/precomputed/logistic/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/distance_matrix/logistic/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 5a3d965d23fdaf091483c937dd6ef938
      size: 525644
    - path: output/kdd_nsl/distance_matrix/logistic/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: output/kdd_nsl/logs/precomputed/logistic/hamming/Average/1000/
      hash: md5
      md5: 7ae2f76664599c809fd6a8485ea7b5da.dir
      size: 18559
      nfiles: 4
    - path: output/kdd_nsl/reports/precomputed/logistic/hamming/Average/1000/
      hash: md5
      md5: 843dc1e154745c63b6ecbed429ff74d1.dir
      size: 8657
      nfiles: 3
  grid_search_precompute@1000-sms_spam-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 7ec77ed41932615d3d9dad4435f36940
      size: 939768
    - path: output/sms_spam/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 0e7eff68617278403defe7feb28a7f9a
      size: 2354247
    - path: output/sms_spam/logs/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: fe60f5835dea173c53c72c10b37027ed.dir
      size: 21777
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 7979ad0479781f25cc0d5bc03ef1af65.dir
      size: 17199
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 7ec77ed41932615d3d9dad4435f36940
      size: 939768
    - path: output/sms_spam/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 6bf1205eed0f7b37e8ffe52a4ae13e8c
      size: 2357192
    - path: output/sms_spam/logs/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: 91b3a35bebf41b8dc2573f6036f954a0.dir
      size: 21565
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: b5b93238cb41ea1b093e6bcc35c44702.dir
      size: 17198
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 5587572b3b2a843801441ab83ed8dd17
      size: 941054
    - path: output/sms_spam/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 59ebda3deef57d69dd835757d63658ed
      size: 2352090
    - path: output/sms_spam/logs/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: 46155c3fc3e074dec2b297efba163ba0.dir
      size: 21782
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: f23f130a10b43ba0fbe7e6bafbbaba17.dir
      size: 17203
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: b9bcadc38dea024b7881c537c677a81a
      size: 1096642
    - path: output/sms_spam/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 58b138e9df2b2eff896b6bc617315dd9
      size: 2745291
    - path: output/sms_spam/logs/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: 1545bc1d7cd72b86d624f0847e1b4a74.dir
      size: 21549
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: 3088652a36f5de3f11742660c2d4901a.dir
      size: 17199
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 970ec8ed3de77c4e422d80f7bf9f5415
      size: 1013813
    - path: output/sms_spam/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 600684d7b3232c5c3636406da9669b59
      size: 2531656
    - path: output/sms_spam/logs/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: 8b00baee928ab8d016ca92073e86dfcf.dir
      size: 21733
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: ee9f863dd4508fa2f44a9b7efd6970ec.dir
      size: 17192
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 970ec8ed3de77c4e422d80f7bf9f5415
      size: 1013813
    - path: output/sms_spam/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 600684d7b3232c5c3636406da9669b59
      size: 2531656
    - path: output/sms_spam/logs/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: 255c364b2f4058f38484fccd7ffc8a98.dir
      size: 21522
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: 923586f5cf8903e2da31f841c89dcb0b.dir
      size: 17191
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: aa84a4da00adb3c1cbe3ba4018e3e657
      size: 1013788
    - path: output/sms_spam/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b064eb9e03388152b16edee324a546fa
      size: 2529914
    - path: output/sms_spam/logs/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: ef026eead124275c1c309160081a290d.dir
      size: 21745
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: 4a971fb4e18a52c3dcdf154ce1499fd8.dir
      size: 17190
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: aa84a4da00adb3c1cbe3ba4018e3e657
      size: 1013788
    - path: output/sms_spam/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b064eb9e03388152b16edee324a546fa
      size: 2529914
    - path: output/sms_spam/logs/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: 9ca2943989cbcef28bce5edc3502b8e5.dir
      size: 21510
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: 97c7988f833cdc4a4d90c777d2dd256b.dir
      size: 17188
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 0735e5f539997da8352841d940741b66
      size: 1027748
    - path: output/sms_spam/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: aca6751e43cc4bdcd43b9adabff9db03
      size: 2564341
    - path: output/sms_spam/logs/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 3b579599357b298f89c3bff508a58335.dir
      size: 21834
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 72ca7b67df4f64cd9a9212d41bded7b1.dir
      size: 17216
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 0735e5f539997da8352841d940741b66
      size: 1027748
    - path: output/sms_spam/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c7f2fadde298d95b8af56b6b58b645fe
      size: 2573818
    - path: output/sms_spam/logs/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: e3d5a5458804d46a7f7adb9969fb0d0d.dir
      size: 21623
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: ae16a132b99578b6cdd8eada134f283e.dir
      size: 17216
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: ba12ec1952aee0afa7f35ca9a180df0d
      size: 1028005
    - path: output/sms_spam/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: e19849867e695eb08c8d3484eeb9679a
      size: 2564188
    - path: output/sms_spam/logs/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: e6fbb6f2f10f8ae39d54e491df6d1dde.dir
      size: 21847
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: cc1cb9c6d05713e99cd963c5d2eb83ea.dir
      size: 17218
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 51258b45e223af081a0b81b2d8270755
      size: 1178834
    - path: output/sms_spam/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: e992f2bef3329ebf90e1513b4926f549
      size: 2942881
    - path: output/sms_spam/logs/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: 40f01feb7aeb4430eabb79a65c312a2c.dir
      size: 21608
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: ce93a891409b6eaeef22ece5629527c4.dir
      size: 17210
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 174c8b407cafc1271ae198cdb19ec3ae
      size: 1320998
    - path: output/sms_spam/logs/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 6c79147ae00058344d48a2ebe639538f.dir
      size: 21957
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: a4b98662bd33dc20a5f1f30c3f1696ed.dir
      size: 17248
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 6b519cd5297a148b7ff648edd18a6773.dir
      size: 21747
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 59ce99b53cce872121cd8a9fd624359b.dir
      size: 17249
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 434ba24c97e293e4b7824e98ca204c7e.dir
      size: 21971
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 65118152c29ad56d618ada99296bf949.dir
      size: 17253
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5f253a630f9344e2c7602da98122ecfb
      size: 534451
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: c52b0e4d2f9a4dacb129606072723642.dir
      size: 21735
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: e3e68682d59b456eb9ad1b75acb6446e.dir
      size: 17244
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 1d00aac00cf16da11c8a303faf7e9338
      size: 1311374
    - path: output/sms_spam/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2255f2a5dc8fb620cdc0a852b14e955
      size: 3266447
    - path: output/sms_spam/logs/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 96ffed8b26c3a5c1a711405491b360da.dir
      size: 21805
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 84534de7e26069da19fc42eaf15a4c2e.dir
      size: 17209
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 1d00aac00cf16da11c8a303faf7e9338
      size: 1311374
    - path: output/sms_spam/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2255f2a5dc8fb620cdc0a852b14e955
      size: 3266447
    - path: output/sms_spam/logs/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: de0e49284c049a05fbe6f9fd7ff27049.dir
      size: 21594
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: 5b29a7f69dcda96916a479cc756005de.dir
      size: 17207
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: ace8c634acaf483f9e80e78ca1c29d68
      size: 1311370
    - path: output/sms_spam/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: d3d55be58508fe3f604913343c542933
      size: 3266569
    - path: output/sms_spam/logs/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: 2ab14559ce8e9e7c706e9e8b73f145a5.dir
      size: 21818
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: d0e0200c230c0771ce97c65e24cb96fc.dir
      size: 17214
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: ace8c634acaf483f9e80e78ca1c29d68
      size: 1311370
    - path: output/sms_spam/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: d3d55be58508fe3f604913343c542933
      size: 3266569
    - path: output/sms_spam/logs/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: 33d05728a9a995ee43b484a5c609f2a9.dir
      size: 21581
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: cc3aec4d089e3dd9508c5277033a1bcd.dir
      size: 17206
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 301c05c553de88726de85cb0573ba266
      size: 1260551
    - path: output/sms_spam/logs/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: ce265e6837c3b87a9b34dbae4991c4b7.dir
      size: 21857
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: daf92bf96a8a5f77e0ecd6a833368767.dir
      size: 17221
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: df1f0fe8264aef5ccf6b92ff9958a0fd.dir
      size: 21645
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: 57edd9c8055251f029c4bb66ab6b4a59.dir
      size: 17222
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: 81a1f59b34fb383bdf51cd3f73b688c1.dir
      size: 21869
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: 3ed7970371baec29eccd063211a27edb.dir
      size: 17225
      nfiles: 6
  grid_search_precompute@1000-sms_spam-knn-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/knn/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 41a8bfbb1f470c49e6eea1343d5fd6c2
      size: 518308
    - path: output/sms_spam/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 90873589e5b9801c8719428b5c142095.dir
      size: 21634
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 36f64899f678d02bd867deb85faf098f.dir
      size: 17217
      nfiles: 6
  grid_search_precompute@1000-sms_spam-svc-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 7ec77ed41932615d3d9dad4435f36940
      size: 939768
    - path: output/sms_spam/distance_matrix/svc/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 0e7eff68617278403defe7feb28a7f9a
      size: 2354247
    - path: output/sms_spam/logs/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 144efa26a80aae028e0a52bb29a31614.dir
      size: 18217
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: d2522539d77174cf2d431039dcb6dc1f.dir
      size: 8649
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 7ec77ed41932615d3d9dad4435f36940
      size: 939768
    - path: output/sms_spam/distance_matrix/svc/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 6bf1205eed0f7b37e8ffe52a4ae13e8c
      size: 2357192
    - path: output/sms_spam/logs/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 96622de37e63016d63a083b997e03d1b.dir
      size: 18214
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 45e3fe7a73efe52ca010fb17624a56b5.dir
      size: 8644
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 5587572b3b2a843801441ab83ed8dd17
      size: 941054
    - path: output/sms_spam/distance_matrix/svc/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 59ebda3deef57d69dd835757d63658ed
      size: 2352090
    - path: output/sms_spam/logs/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: 0907ede8cf5caa90165fc20a6eda266a.dir
      size: 18224
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: fdc5a0a42e6be38d335987189a4af4a8.dir
      size: 8648
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: b9bcadc38dea024b7881c537c677a81a
      size: 1096642
    - path: output/sms_spam/distance_matrix/svc/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 58b138e9df2b2eff896b6bc617315dd9
      size: 2745291
    - path: output/sms_spam/logs/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: 98b47e0dc88e2ae7a301ea094eb1e349.dir
      size: 18206
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: 49bde248ef44a4ce6dcdb0077558fa9b.dir
      size: 8649
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 970ec8ed3de77c4e422d80f7bf9f5415
      size: 1013813
    - path: output/sms_spam/distance_matrix/svc/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 600684d7b3232c5c3636406da9669b59
      size: 2531656
    - path: output/sms_spam/logs/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: 9949244ce56f13657cb948c9b0e37028.dir
      size: 18198
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: b508abf99d00e615b5e471ba3e160212.dir
      size: 8645
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 970ec8ed3de77c4e422d80f7bf9f5415
      size: 1013813
    - path: output/sms_spam/distance_matrix/svc/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 600684d7b3232c5c3636406da9669b59
      size: 2531656
    - path: output/sms_spam/logs/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: e3aa2951361f1655c481b77c143a7277.dir
      size: 18196
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: 0d4db9bade3c282a7853f7d7380db219.dir
      size: 8644
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: aa84a4da00adb3c1cbe3ba4018e3e657
      size: 1013788
    - path: output/sms_spam/distance_matrix/svc/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b064eb9e03388152b16edee324a546fa
      size: 2529914
    - path: output/sms_spam/logs/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: c49f1810951f2a4bc0dfa46f4b3d0ccd.dir
      size: 18205
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: e384a7a77a23acbc7fa460f74516054f.dir
      size: 8647
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: aa84a4da00adb3c1cbe3ba4018e3e657
      size: 1013788
    - path: output/sms_spam/distance_matrix/svc/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b064eb9e03388152b16edee324a546fa
      size: 2529914
    - path: output/sms_spam/logs/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: 10401849cc61dba2b2359a90d5c14ec8.dir
      size: 21097
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: 3459286cb332466ef985b597cce1852a.dir
      size: 8642
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 0735e5f539997da8352841d940741b66
      size: 1027748
    - path: output/sms_spam/distance_matrix/svc/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: aca6751e43cc4bdcd43b9adabff9db03
      size: 2564341
    - path: output/sms_spam/logs/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: d3ac5660366c112de5ad97fc0acc12d4.dir
      size: 18267
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: e5e4ff6932eb48a812e00cdbfccf172c.dir
      size: 8654
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 0735e5f539997da8352841d940741b66
      size: 1027748
    - path: output/sms_spam/distance_matrix/svc/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c7f2fadde298d95b8af56b6b58b645fe
      size: 2573818
    - path: output/sms_spam/logs/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: 1b345b7bc58acef7b301b58da3101d31.dir
      size: 18267
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: cce891417a6c8c1457a4cd8a859fb7e1.dir
      size: 8654
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: ba12ec1952aee0afa7f35ca9a180df0d
      size: 1028005
    - path: output/sms_spam/distance_matrix/svc/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: e19849867e695eb08c8d3484eeb9679a
      size: 2564188
    - path: output/sms_spam/logs/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: 2a9e57e36dbc7ff71c15019b445ca71e.dir
      size: 18280
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: 78f446d14d7162803cf060e2fe505d38.dir
      size: 8661
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 51258b45e223af081a0b81b2d8270755
      size: 1178834
    - path: output/sms_spam/distance_matrix/svc/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: e992f2bef3329ebf90e1513b4926f549
      size: 2942881
    - path: output/sms_spam/logs/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 6beb47e9b8d4bfd8bd0557d71e8c37e3.dir
      size: 18261
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 54d5cccc494a5cacbbbf55d492678345.dir
      size: 8657
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/svc/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 174c8b407cafc1271ae198cdb19ec3ae
      size: 1320998
    - path: output/sms_spam/logs/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: 5095c8e6405e51cb1fa1bc2373804dc9.dir
      size: 18384
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: bdb8364cd6bd388a648aa11fc6137a08.dir
      size: 8676
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/svc/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: 7a8a9f666a21cf6d79725bbcca1e30bc.dir
      size: 18382
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: f45dbd99931aa4db7c7eb17873d0668e.dir
      size: 8675
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/svc/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: 882c651d948938cee64196b778c89bb1.dir
      size: 18391
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: 75123a3b4ec9dbe6290146d49d3eab63.dir
      size: 8677
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5f253a630f9344e2c7602da98122ecfb
      size: 534451
    - path: output/sms_spam/distance_matrix/svc/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/svc/levenshtein/Average/1000/
      hash: md5
      md5: f0c692ddc6f66b194a6971f53081cc64.dir
      size: 18374
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/levenshtein/Average/1000/
      hash: md5
      md5: 96fb95a2ca79dc537f32c30d386bb280.dir
      size: 8677
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 1d00aac00cf16da11c8a303faf7e9338
      size: 1311374
    - path: output/sms_spam/distance_matrix/svc/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2255f2a5dc8fb620cdc0a852b14e955
      size: 3266447
    - path: output/sms_spam/logs/precomputed/svc/ratio/Vanilla/1000/
      hash: md5
      md5: 90e5a9a2df185eac08ecc7317c8b47b1.dir
      size: 18246
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/ratio/Vanilla/1000/
      hash: md5
      md5: 588f15c9d4abdd8676f8a4db7e1fc764.dir
      size: 8655
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 1d00aac00cf16da11c8a303faf7e9338
      size: 1311374
    - path: output/sms_spam/distance_matrix/svc/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2255f2a5dc8fb620cdc0a852b14e955
      size: 3266447
    - path: output/sms_spam/logs/precomputed/svc/ratio/Assumed/1000/
      hash: md5
      md5: 6d567587d296036460e55096a563422f.dir
      size: 18243
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/ratio/Assumed/1000/
      hash: md5
      md5: cb03e07c6cd7afb9c0397d05336ab6e3.dir
      size: 8652
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: ace8c634acaf483f9e80e78ca1c29d68
      size: 1311370
    - path: output/sms_spam/distance_matrix/svc/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: d3d55be58508fe3f604913343c542933
      size: 3266569
    - path: output/sms_spam/logs/precomputed/svc/ratio/Enforced/1000/
      hash: md5
      md5: c8f747abf9ef92dece908fe98baad890.dir
      size: 18251
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/ratio/Enforced/1000/
      hash: md5
      md5: c86fc69b579831b36f58b491f589fc45.dir
      size: 8652
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: ace8c634acaf483f9e80e78ca1c29d68
      size: 1311370
    - path: output/sms_spam/distance_matrix/svc/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: d3d55be58508fe3f604913343c542933
      size: 3266569
    - path: output/sms_spam/logs/precomputed/svc/ratio/Average/1000/
      hash: md5
      md5: 524b3548a091a67862ba2790f1d5845c.dir
      size: 18234
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/ratio/Average/1000/
      hash: md5
      md5: 9c7729249a258edde477a76a6797c564.dir
      size: 8653
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/svc/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 301c05c553de88726de85cb0573ba266
      size: 1260551
    - path: output/sms_spam/logs/precomputed/svc/hamming/Vanilla/1000/
      hash: md5
      md5: 7c2dda4d80520c0060aead4d60962e7f.dir
      size: 18298
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/hamming/Vanilla/1000/
      hash: md5
      md5: 0a8d2d3d66a2f35ec426ab71b9dbfac0.dir
      size: 8662
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/svc/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/svc/hamming/Assumed/1000/
      hash: md5
      md5: 87934334e9027aac7139b212b625871c.dir
      size: 18295
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/hamming/Assumed/1000/
      hash: md5
      md5: c42fd7f2116c079756c158a327e57a38.dir
      size: 8664
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/svc/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/svc/hamming/Enforced/1000/
      hash: md5
      md5: 29fb2b67da08b20937de0aabcb581ab2.dir
      size: 18304
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/hamming/Enforced/1000/
      hash: md5
      md5: 44d32d14cdaa6c7a2b44f5f0a2468208.dir
      size: 8663
      nfiles: 3
  grid_search_precompute@1000-sms_spam-svc-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=svc
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/svc/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/svc/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 41a8bfbb1f470c49e6eea1343d5fd6c2
      size: 518308
    - path: output/sms_spam/distance_matrix/svc/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/svc/hamming/Average/1000/
      hash: md5
      md5: 53877fb54034f8f8381c8c0ddc568cbf.dir
      size: 18288
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/svc/hamming/Average/1000/
      hash: md5
      md5: 4ac15d2874ebb97ae4387aaff1d54721.dir
      size: 8662
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 7ec77ed41932615d3d9dad4435f36940
      size: 939768
    - path: output/sms_spam/distance_matrix/logistic/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 0e7eff68617278403defe7feb28a7f9a
      size: 2354247
    - path: output/sms_spam/logs/precomputed/logistic/gzip/Vanilla/1000/
      hash: md5
      md5: c0b44f798739591de009fc70d4232474.dir
      size: 18523
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/gzip/Vanilla/1000/
      hash: md5
      md5: a0082bc9d649f51402e5c62ed4ffb2a8.dir
      size: 8662
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 7ec77ed41932615d3d9dad4435f36940
      size: 939768
    - path: output/sms_spam/distance_matrix/logistic/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 6bf1205eed0f7b37e8ffe52a4ae13e8c
      size: 2357192
    - path: output/sms_spam/logs/precomputed/logistic/gzip/Assumed/1000/
      hash: md5
      md5: a74f3a4ab4f3bb8e2faf11bc74c18d12.dir
      size: 18523
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/gzip/Assumed/1000/
      hash: md5
      md5: 703c61cfae2d59c4238b57f589575d28.dir
      size: 8661
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 5587572b3b2a843801441ab83ed8dd17
      size: 941054
    - path: output/sms_spam/distance_matrix/logistic/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 59ebda3deef57d69dd835757d63658ed
      size: 2352090
    - path: output/sms_spam/logs/precomputed/logistic/gzip/Enforced/1000/
      hash: md5
      md5: 904b6a470623529aa3d52456f67e42e1.dir
      size: 18530
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/gzip/Enforced/1000/
      hash: md5
      md5: 4cdad7840d3d339bc02b14395fd2d767.dir
      size: 8663
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: b9bcadc38dea024b7881c537c677a81a
      size: 1096642
    - path: output/sms_spam/distance_matrix/logistic/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 58b138e9df2b2eff896b6bc617315dd9
      size: 2745291
    - path: output/sms_spam/logs/precomputed/logistic/gzip/Average/1000/
      hash: md5
      md5: dc08ea2967e2dfdc741fc08d31485a22.dir
      size: 18512
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/gzip/Average/1000/
      hash: md5
      md5: cbf8453a11800a2b1a6e4edcf5c87be0.dir
      size: 8660
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 970ec8ed3de77c4e422d80f7bf9f5415
      size: 1013813
    - path: output/sms_spam/distance_matrix/logistic/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 600684d7b3232c5c3636406da9669b59
      size: 2531656
    - path: output/sms_spam/logs/precomputed/logistic/bz2/Vanilla/1000/
      hash: md5
      md5: 47634aaf623e208d54c25b2f77cc3766.dir
      size: 18504
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/bz2/Vanilla/1000/
      hash: md5
      md5: d09354a6418e9c7c4744880bb7c26192.dir
      size: 8653
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 970ec8ed3de77c4e422d80f7bf9f5415
      size: 1013813
    - path: output/sms_spam/distance_matrix/logistic/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 600684d7b3232c5c3636406da9669b59
      size: 2531656
    - path: output/sms_spam/logs/precomputed/logistic/bz2/Assumed/1000/
      hash: md5
      md5: 054c10799ba228fd12a720ae65e62736.dir
      size: 18501
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/bz2/Assumed/1000/
      hash: md5
      md5: 341ac75c5fb2e336a0ab4105283b5270.dir
      size: 8654
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: aa84a4da00adb3c1cbe3ba4018e3e657
      size: 1013788
    - path: output/sms_spam/distance_matrix/logistic/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b064eb9e03388152b16edee324a546fa
      size: 2529914
    - path: output/sms_spam/logs/precomputed/logistic/bz2/Enforced/1000/
      hash: md5
      md5: 2c7bfa1d913b7580a4ec93e77e3cc515.dir
      size: 18501
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/bz2/Enforced/1000/
      hash: md5
      md5: 30c68c25c87cb918d4b3ca81b15e0d33.dir
      size: 8656
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: aa84a4da00adb3c1cbe3ba4018e3e657
      size: 1013788
    - path: output/sms_spam/distance_matrix/logistic/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b064eb9e03388152b16edee324a546fa
      size: 2529914
    - path: output/sms_spam/logs/precomputed/logistic/bz2/Average/1000/
      hash: md5
      md5: 84ac37e07e6597e7e774256f91ae4258.dir
      size: 18483
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/bz2/Average/1000/
      hash: md5
      md5: caf3b9b83297a7738239b2ee4a12e348.dir
      size: 8655
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 0735e5f539997da8352841d940741b66
      size: 1027748
    - path: output/sms_spam/distance_matrix/logistic/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: aca6751e43cc4bdcd43b9adabff9db03
      size: 2564341
    - path: output/sms_spam/logs/precomputed/logistic/brotli/Vanilla/1000/
      hash: md5
      md5: 9402116cfdbe2a0c752ffef8921f17c3.dir
      size: 18569
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/brotli/Vanilla/1000/
      hash: md5
      md5: a7480cd005239e0f2621578887cc8f46.dir
      size: 8665
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 0735e5f539997da8352841d940741b66
      size: 1027748
    - path: output/sms_spam/distance_matrix/logistic/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c7f2fadde298d95b8af56b6b58b645fe
      size: 2573818
    - path: output/sms_spam/logs/precomputed/logistic/brotli/Assumed/1000/
      hash: md5
      md5: 266a5788c38c5c2e67da312ecdb4feea.dir
      size: 18566
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/brotli/Assumed/1000/
      hash: md5
      md5: c210dd2eddc39cad3a7c81740b8f740f.dir
      size: 8663
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: ba12ec1952aee0afa7f35ca9a180df0d
      size: 1028005
    - path: output/sms_spam/distance_matrix/logistic/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: e19849867e695eb08c8d3484eeb9679a
      size: 2564188
    - path: output/sms_spam/logs/precomputed/logistic/brotli/Enforced/1000/
      hash: md5
      md5: dc14385a43eb8d92833e40e5771370a8.dir
      size: 18583
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/brotli/Enforced/1000/
      hash: md5
      md5: a09de3e83ea6a6ef1ad499c4d62b3680.dir
      size: 8671
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 51258b45e223af081a0b81b2d8270755
      size: 1178834
    - path: output/sms_spam/distance_matrix/logistic/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: e992f2bef3329ebf90e1513b4926f549
      size: 2942881
    - path: output/sms_spam/logs/precomputed/logistic/brotli/Average/1000/
      hash: md5
      md5: c1832045d54427bd86f9b68e00c008c4.dir
      size: 18565
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/brotli/Average/1000/
      hash: md5
      md5: 0d044fca9892f165206d9697937a5672.dir
      size: 8670
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: 
        output/sms_spam/distance_matrix/logistic/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 174c8b407cafc1271ae198cdb19ec3ae
      size: 1320998
    - path: output/sms_spam/logs/precomputed/logistic/levenshtein/Vanilla/1000/
      hash: md5
      md5: de2f35fc34e923d90cfc9467da51b696.dir
      size: 18696
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/levenshtein/Vanilla/1000/
      hash: md5
      md5: 504199c0569c2cc597a1686c0281155c.dir
      size: 8690
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: 
        output/sms_spam/distance_matrix/logistic/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/logistic/levenshtein/Assumed/1000/
      hash: md5
      md5: 4a65d63f4606c03263fa3e6f5b0fd747.dir
      size: 18695
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/levenshtein/Assumed/1000/
      hash: md5
      md5: cda879063f8fbe90403b6c325c4cd3f8.dir
      size: 8688
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam 
      files.reports=reports/precomputed/logistic/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        output/sms_spam/distance_matrix/logistic/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: 
        output/sms_spam/distance_matrix/logistic/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/logistic/levenshtein/Enforced/1000/
      hash: md5
      md5: b04fe52ee89b299f1f1b107485865213.dir
      size: 18704
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/levenshtein/Enforced/1000/
      hash: md5
      md5: 3e6ca825723a2a3aa8984923d61d1872.dir
      size: 8690
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5f253a630f9344e2c7602da98122ecfb
      size: 534451
    - path: 
        output/sms_spam/distance_matrix/logistic/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: output/sms_spam/logs/precomputed/logistic/levenshtein/Average/1000/
      hash: md5
      md5: 9ac683d29e74fcb6ff0e2b3655ec806a.dir
      size: 18686
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/levenshtein/Average/1000/
      hash: md5
      md5: 81efcac43c4b2395d4ad8684ca9f4fa1.dir
      size: 8688
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 1d00aac00cf16da11c8a303faf7e9338
      size: 1311374
    - path: output/sms_spam/distance_matrix/logistic/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2255f2a5dc8fb620cdc0a852b14e955
      size: 3266447
    - path: output/sms_spam/logs/precomputed/logistic/ratio/Vanilla/1000/
      hash: md5
      md5: 8dd2e497bee43358de4d3c4904edbba4.dir
      size: 18546
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/ratio/Vanilla/1000/
      hash: md5
      md5: 21c2fa36a9f4185587af44ef05b41940.dir
      size: 8662
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 1d00aac00cf16da11c8a303faf7e9338
      size: 1311374
    - path: output/sms_spam/distance_matrix/logistic/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2255f2a5dc8fb620cdc0a852b14e955
      size: 3266447
    - path: output/sms_spam/logs/precomputed/logistic/ratio/Assumed/1000/
      hash: md5
      md5: 80f2f3be28bea1d09ba291160b2fcac2.dir
      size: 18544
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/ratio/Assumed/1000/
      hash: md5
      md5: 54c4d85b15728e13a31e010fc9354d1f.dir
      size: 8662
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: ace8c634acaf483f9e80e78ca1c29d68
      size: 1311370
    - path: output/sms_spam/distance_matrix/logistic/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: d3d55be58508fe3f604913343c542933
      size: 3266569
    - path: output/sms_spam/logs/precomputed/logistic/ratio/Enforced/1000/
      hash: md5
      md5: 81133033e2d2a8bf731af4e4ca1c8a4f.dir
      size: 18558
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/ratio/Enforced/1000/
      hash: md5
      md5: 75942c7b180a5df3d2261e6b29bbbf57.dir
      size: 8666
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: ace8c634acaf483f9e80e78ca1c29d68
      size: 1311370
    - path: output/sms_spam/distance_matrix/logistic/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: d3d55be58508fe3f604913343c542933
      size: 3266569
    - path: output/sms_spam/logs/precomputed/logistic/ratio/Average/1000/
      hash: md5
      md5: 6dc07f8b1a4604d6d323977f6aa29bb9.dir
      size: 18541
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/ratio/Average/1000/
      hash: md5
      md5: baf7f9f1c8b84cdd70e763820200a53a.dir
      size: 8666
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/logistic/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 301c05c553de88726de85cb0573ba266
      size: 1260551
    - path: output/sms_spam/logs/precomputed/logistic/hamming/Vanilla/1000/
      hash: md5
      md5: bb16700f537d0ce800b2bd88dd7975eb.dir
      size: 18596
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/hamming/Vanilla/1000/
      hash: md5
      md5: 20e5693ca927bfad13b61777a077a29d.dir
      size: 8669
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/logistic/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/logistic/hamming/Assumed/1000/
      hash: md5
      md5: 488505aa32ae6d554dd3d5412a62930f.dir
      size: 18594
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/hamming/Assumed/1000/
      hash: md5
      md5: 4e10c2d79c652247ca3e3f7b18365a2f.dir
      size: 8669
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/logistic/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/logistic/hamming/Enforced/1000/
      hash: md5
      md5: ce0056eeb4e2eb7be385bc7993473344.dir
      size: 18603
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/hamming/Enforced/1000/
      hash: md5
      md5: 51781d432a5ead5a33aace1a6cc36209.dir
      size: 8673
      nfiles: 3
  grid_search_precompute@1000-sms_spam-logistic-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=sms_spam
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=logistic
      ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/sms_spam files.reports=reports/precomputed/logistic/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/distance_matrix/logistic/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 41a8bfbb1f470c49e6eea1343d5fd6c2
      size: 518308
    - path: output/sms_spam/distance_matrix/logistic/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: output/sms_spam/logs/precomputed/logistic/hamming/Average/1000/
      hash: md5
      md5: a85149ebb3cc7bcb4c8951016d2ea457.dir
      size: 18585
      nfiles: 4
    - path: output/sms_spam/reports/precomputed/logistic/hamming/Average/1000/
      hash: md5
      md5: 347aeccf2478f000b952ccac69879044.dir
      size: 8668
      nfiles: 3
  grid_search_precompute@1000-truthseeker-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: b03e676f5fdefd2b9ac8cbfcb0be73d4
      size: 988342
    - path: output/truthseeker/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 46283ec8adba7ff583ebd74be014ed4a
      size: 2478121
    - path: output/truthseeker/logs/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: c43291ac569365e4c4182ca6dbd70289.dir
      size: 22009
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 2db1f9fbc5d1d18baa7ab5a96d35c5c5.dir
      size: 17290
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: b03e676f5fdefd2b9ac8cbfcb0be73d4
      size: 988342
    - path: output/truthseeker/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: cdb1db0860c25b2c883631c4caa7630b
      size: 2478448
    - path: output/truthseeker/logs/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: a4a6d7d1d074833ffb09b3094bf5db1d.dir
      size: 21793
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/gzip/Assumed/1000/
      hash: md5
      md5: 4a3ab60d32b19abed9bf5ea948898ca0.dir
      size: 17284
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 6cd2f9262fea3f34bb56255576c06775
      size: 989814
    - path: output/truthseeker/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 685684da4de63b950264296ff4959cfb
      size: 2478327
    - path: output/truthseeker/logs/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: 7197014106608ebe5f5c85f29244043b.dir
      size: 22005
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/gzip/Enforced/1000/
      hash: md5
      md5: 43c17ca6306784017bd673758c12cdf9.dir
      size: 17281
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 608e871bf1e1fec0008b77ff98a40f00
      size: 1196334
    - path: output/truthseeker/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 9071c6195de9fe133d76c5f5fbc499b8
      size: 3005721
    - path: output/truthseeker/logs/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: 0a0ed65a61f8866b827fbc3c090a4270.dir
      size: 21772
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/gzip/Average/1000/
      hash: md5
      md5: a5eb9f5f3210a7924f06932219988fda.dir
      size: 17280
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f72479d77e2fcc61c36078d31e1efe81
      size: 3009529
    - path: output/truthseeker/logs/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: bf56f01e18f1b620e34b0211b0d1ca51.dir
      size: 21980
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/bz2/Vanilla/1000/
      hash: md5
      md5: dbbbd3dd85a6c48207f3cd81a393a489.dir
      size: 17282
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f72479d77e2fcc61c36078d31e1efe81
      size: 3009529
    - path: output/truthseeker/logs/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: c2daac14c52befaff3833053dc765ec9.dir
      size: 21767
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/bz2/Assumed/1000/
      hash: md5
      md5: 040b04bd13ed530a4def910e23958827.dir
      size: 17277
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 3dc781f9f7818610e4730a1dae57cefb
      size: 3007733
    - path: output/truthseeker/logs/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: 9bb6cad6a3be8f265df652a1e4a9fc3d.dir
      size: 21991
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/bz2/Enforced/1000/
      hash: md5
      md5: 9290dc616d3f195f498ef3a532dce2ba.dir
      size: 17280
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: 3dc781f9f7818610e4730a1dae57cefb
      size: 3007733
    - path: output/truthseeker/logs/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: c42d71a74733ff825f5beff9ea7e3045.dir
      size: 21756
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/bz2/Average/1000/
      hash: md5
      md5: 179e54cce160ba228ae97b43e93a8965.dir
      size: 17275
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 200bbc944110e47913b911daa7516b48
      size: 1141875
    - path: output/truthseeker/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: e0b381a74939a2cd11523b59780b2644
      size: 2886694
    - path: output/truthseeker/logs/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 38b83480ed7491f8173d545962daa02c.dir
      size: 22067
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 418f7c43e3f0707d79746546b2c13d07.dir
      size: 17307
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 200bbc944110e47913b911daa7516b48
      size: 1141875
    - path: output/truthseeker/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: a182794136c058c81109818943918019
      size: 2887373
    - path: output/truthseeker/logs/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: e23f74b8a6a83985e22240dfb6fdcf1b.dir
      size: 21854
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/brotli/Assumed/1000/
      hash: md5
      md5: 830ce860ba44c34049f33d25de45c12a.dir
      size: 17303
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: d4397e78831db175f6786c99df277099
      size: 1142498
    - path: output/truthseeker/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 7f69d9b103a6a6ab85f2dfe710ab773c
      size: 2884987
    - path: output/truthseeker/logs/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: 5663da4baeb8bbfbc09498ec5135c65b.dir
      size: 22064
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/brotli/Enforced/1000/
      hash: md5
      md5: d18cbd1a00db662dc62ec034a7adf32e.dir
      size: 17300
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 96b30b7b8341180e18f7ff79541f574a
      size: 1321353
    - path: output/truthseeker/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: 81417b988f2cee164f3deefbcde86245
      size: 3338300
    - path: output/truthseeker/logs/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: 68f5715431d9145337cc90300e15aae1.dir
      size: 21831
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/brotli/Average/1000/
      hash: md5
      md5: 40cd11fc277d4061e8a89ef1430248dd.dir
      size: 17295
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: output/truthseeker/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: fa72d6903649c48618ac9bca12894f74
      size: 1453666
    - path: output/truthseeker/logs/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 1a09634e434d7d2beaff1a04a53ee9ba.dir
      size: 22205
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 4ca2df78f50c19fcf148047e5039a0f5.dir
      size: 17343
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: output/truthseeker/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 47fd86ef9aa569a2e791729c77fcc320.dir
      size: 21992
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 4fd860254f7039a3853302528c231f89.dir
      size: 17337
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: output/truthseeker/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 2e99bdc1551c310aab3211134821588d.dir
      size: 22215
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 102efa51873be03dca44354d9e461b82.dir
      size: 17340
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 002ee050377c4f5e7e705d66f39e9a04
      size: 572488
    - path: output/truthseeker/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: 2b27ce7d3e3f73a4169b3d3ab8f2384a.dir
      size: 21981
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/levenshtein/Average/1000/
      hash: md5
      md5: e4516e3ab833ff9944ff72ef731ce293.dir
      size: 17339
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: b346623860e650edbec8a695cc7f3dd8
      size: 4559563
    - path: output/truthseeker/logs/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 3f0d7feb605d46934a0f04fc9666dacb.dir
      size: 22037
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/ratio/Vanilla/1000/
      hash: md5
      md5: f0308fb714c654f815d0d4f9f404579f.dir
      size: 17293
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: b346623860e650edbec8a695cc7f3dd8
      size: 4559563
    - path: output/truthseeker/logs/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: c5b66b5fe6e7732ed7ae0dc8034d50dd.dir
      size: 21825
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/ratio/Assumed/1000/
      hash: md5
      md5: c932e6c5d442fe6edf9cdb4c33c81942.dir
      size: 17291
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 9ccd226bdc461f1dbb6bb6b71c20f80c
      size: 4559666
    - path: output/truthseeker/logs/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: 90c0052a95eaaa57d936f9c8a8262f69.dir
      size: 22049
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/ratio/Enforced/1000/
      hash: md5
      md5: 117dcf6338f31f1f8aede4b4d3d4cc35.dir
      size: 17296
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 9ccd226bdc461f1dbb6bb6b71c20f80c
      size: 4559666
    - path: output/truthseeker/logs/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: b072f7708b096384cf193cbf5369e3bf.dir
      size: 21814
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/ratio/Average/1000/
      hash: md5
      md5: 2fc08a63de5c002c1156bb764bd4f1bc.dir
      size: 17289
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: output/truthseeker/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: a5eb9f9d038361eda2a7fd7861d68cd2
      size: 1426507
    - path: output/truthseeker/logs/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: f5c3fbcfedc5b7e2df6f072f3a3c7735.dir
      size: 22095
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/hamming/Vanilla/1000/
      hash: md5
      md5: 07605be6fc614584ccc5fc6834ff4fcb.dir
      size: 17314
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: output/truthseeker/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: 4e7503cff12af3b4c10c8e7497d6474e.dir
      size: 21882
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/hamming/Assumed/1000/
      hash: md5
      md5: a261768abc275956da9e4df81b9f5d4f.dir
      size: 17304
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: output/truthseeker/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: 94d95fe4d0ededfd4f4ca9fa1c23f3d2.dir
      size: 22106
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/hamming/Enforced/1000/
      hash: md5
      md5: 3770ed93e1186e84fed2673029fb0abb.dir
      size: 17314
      nfiles: 6
  grid_search_precompute@1000-truthseeker-knn-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=knn ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/knn/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name knn
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 08836731c4e95017529edf0ca8afa81d
      size: 2347
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 41f764e0df2857b75f16ef2d677e90c7
      size: 567741
    - path: output/truthseeker/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 67ab2982b3d9fa96a4db322a37a2c22a.dir
      size: 21871
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/knn/hamming/Average/1000/
      hash: md5
      md5: 03c5de6ccac8577c5c27dfef1d9b48ef.dir
      size: 17305
      nfiles: 6
  grid_search_precompute@1000-truthseeker-svc-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/gzip/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: b03e676f5fdefd2b9ac8cbfcb0be73d4
      size: 988342
    - path: output/truthseeker/distance_matrix/svc/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 46283ec8adba7ff583ebd74be014ed4a
      size: 2478121
    - path: output/truthseeker/logs/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 05e2350e28ebe6f27278d6aa8ef75898.dir
      size: 18413
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/gzip/Vanilla/1000/
      hash: md5
      md5: 92ab6cfb468d0d3a2a3d4ea26a356fe7.dir
      size: 8691
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/gzip/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: b03e676f5fdefd2b9ac8cbfcb0be73d4
      size: 988342
    - path: output/truthseeker/distance_matrix/svc/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: cdb1db0860c25b2c883631c4caa7630b
      size: 2478448
    - path: output/truthseeker/logs/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 1f05278020881ef60947a8a40385c3f6.dir
      size: 18410
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/gzip/Assumed/1000/
      hash: md5
      md5: 52cf4ae5e5aa977268c1d3c9388ebd9c.dir
      size: 8690
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/gzip/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 6cd2f9262fea3f34bb56255576c06775
      size: 989814
    - path: output/truthseeker/distance_matrix/svc/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 685684da4de63b950264296ff4959cfb
      size: 2478327
    - path: output/truthseeker/logs/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: 52d2ee6d3a2073892fe62f3bb1f29f41.dir
      size: 18415
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/gzip/Enforced/1000/
      hash: md5
      md5: 79fed56251a75846aae68cf1c3541afa.dir
      size: 8693
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/gzip/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 608e871bf1e1fec0008b77ff98a40f00
      size: 1196334
    - path: output/truthseeker/distance_matrix/svc/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 9071c6195de9fe133d76c5f5fbc499b8
      size: 3005721
    - path: output/truthseeker/logs/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: 00f6c3499286f74826e520858d94349b.dir
      size: 18399
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/gzip/Average/1000/
      hash: md5
      md5: 9c988eb18daf20459a15550697a91c4f.dir
      size: 8693
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/bz2/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/svc/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f72479d77e2fcc61c36078d31e1efe81
      size: 3009529
    - path: output/truthseeker/logs/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: b5574a2be4eaa4a7ff1c237f974ff433.dir
      size: 18377
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/bz2/Vanilla/1000/
      hash: md5
      md5: 3c5bd56f89539be94d5d2820aab99812.dir
      size: 8687
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/bz2/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/svc/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f72479d77e2fcc61c36078d31e1efe81
      size: 3009529
    - path: output/truthseeker/logs/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: 658358d776af3c74f4b9c7ef01994766.dir
      size: 18376
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/bz2/Assumed/1000/
      hash: md5
      md5: 1fbbb3e11c8d9b813a06eada20ecf2aa.dir
      size: 8684
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/bz2/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/svc/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 3dc781f9f7818610e4730a1dae57cefb
      size: 3007733
    - path: output/truthseeker/logs/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: 37a644ed879795734f3495b8ced39398.dir
      size: 18386
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/bz2/Enforced/1000/
      hash: md5
      md5: b9d0f0a6033e11a9530405a18b83be17.dir
      size: 8689
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/bz2/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/svc/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: 3dc781f9f7818610e4730a1dae57cefb
      size: 3007733
    - path: output/truthseeker/logs/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: 847e76367e0ea68172b92d11c1c686bd.dir
      size: 18367
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/bz2/Average/1000/
      hash: md5
      md5: a4a653207167450517d93ed36dbb1bef.dir
      size: 8686
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 200bbc944110e47913b911daa7516b48
      size: 1141875
    - path: output/truthseeker/distance_matrix/svc/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: e0b381a74939a2cd11523b59780b2644
      size: 2886694
    - path: output/truthseeker/logs/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: aacfd81a94e3b69ff88cf9375da8246e.dir
      size: 18461
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/brotli/Vanilla/1000/
      hash: md5
      md5: 4147392eab7b8e28f66f1084a101b035.dir
      size: 8702
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 200bbc944110e47913b911daa7516b48
      size: 1141875
    - path: output/truthseeker/distance_matrix/svc/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: a182794136c058c81109818943918019
      size: 2887373
    - path: output/truthseeker/logs/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: 4559b011cb9458cc9a559379fcbc049a.dir
      size: 18459
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/brotli/Assumed/1000/
      hash: md5
      md5: 6acc54c4c9d4e90a129649b80e3cc5f0.dir
      size: 8700
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: d4397e78831db175f6786c99df277099
      size: 1142498
    - path: output/truthseeker/distance_matrix/svc/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 7f69d9b103a6a6ab85f2dfe710ab773c
      size: 2884987
    - path: output/truthseeker/logs/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: 6e609face8873e6ef6cb44b45dd1b1e8.dir
      size: 18458
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/brotli/Enforced/1000/
      hash: md5
      md5: 4df0bb5486d7fb1c93eed09971f8b79f.dir
      size: 8701
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=brotli
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 96b30b7b8341180e18f7ff79541f574a
      size: 1321353
    - path: output/truthseeker/distance_matrix/svc/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: 81417b988f2cee164f3deefbcde86245
      size: 3338300
    - path: output/truthseeker/logs/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: ecb17ba6d960c93e2bdb7c48a821fc1f.dir
      size: 18444
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/brotli/Average/1000/
      hash: md5
      md5: 8e1db17c0a73e6f44650a859eb953217.dir
      size: 8700
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: output/truthseeker/distance_matrix/svc/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: fa72d6903649c48618ac9bca12894f74
      size: 1453666
    - path: output/truthseeker/logs/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: 15cbf76bd5916c38b483ebc9947f60ec.dir
      size: 18577
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/levenshtein/Vanilla/1000/
      hash: md5
      md5: 754edc8837a7dba3f6fa180580002bdb.dir
      size: 8714
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: output/truthseeker/distance_matrix/svc/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: be8b0c15535808cce1181a1d2a28da6d.dir
      size: 18579
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/levenshtein/Assumed/1000/
      hash: md5
      md5: cd98ada087aea8049106f1338d17d796.dir
      size: 8720
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: output/truthseeker/distance_matrix/svc/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: c2badfc0559794236253c8561142bcc9.dir
      size: 18588
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/levenshtein/Enforced/1000/
      hash: md5
      md5: 4b1a3825434f65afa82971af4c5b1cf2.dir
      size: 8723
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 002ee050377c4f5e7e705d66f39e9a04
      size: 572488
    - path: output/truthseeker/distance_matrix/svc/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/svc/levenshtein/Average/1000/
      hash: md5
      md5: ac31e10fdc4d9e5309fa8a6909b0013f.dir
      size: 18570
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/levenshtein/Average/1000/
      hash: md5
      md5: 97c55dcbd28920b3847185e17b01bcec.dir
      size: 8718
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/ratio/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/svc/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: b346623860e650edbec8a695cc7f3dd8
      size: 4559563
    - path: output/truthseeker/logs/precomputed/svc/ratio/Vanilla/1000/
      hash: md5
      md5: bbc1c400e77848162ba531f73a7d2d48.dir
      size: 18427
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/ratio/Vanilla/1000/
      hash: md5
      md5: 5b85686f81ce6f8e73ee4f9d34e473bb.dir
      size: 8695
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/ratio/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/svc/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: b346623860e650edbec8a695cc7f3dd8
      size: 4559563
    - path: output/truthseeker/logs/precomputed/svc/ratio/Assumed/1000/
      hash: md5
      md5: f743c87f4424dd87b02b5c390baa1442.dir
      size: 18425
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/ratio/Assumed/1000/
      hash: md5
      md5: ac3d85a6f966feb519c32bcbae1fa6a9.dir
      size: 8695
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/svc/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 9ccd226bdc461f1dbb6bb6b71c20f80c
      size: 4559666
    - path: output/truthseeker/logs/precomputed/svc/ratio/Enforced/1000/
      hash: md5
      md5: 0d2dca088b727147d44162c77ab55f68.dir
      size: 18434
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/ratio/Enforced/1000/
      hash: md5
      md5: 497141e776c6b03cec3cb0f55027d68e.dir
      size: 8694
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/ratio/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/svc/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 9ccd226bdc461f1dbb6bb6b71c20f80c
      size: 4559666
    - path: output/truthseeker/logs/precomputed/svc/ratio/Average/1000/
      hash: md5
      md5: f4de617db7e326365be8583bd52c267d.dir
      size: 18415
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/ratio/Average/1000/
      hash: md5
      md5: 3ec7e2e085882892c15494c068ffab5f.dir
      size: 8691
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: output/truthseeker/distance_matrix/svc/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: a5eb9f9d038361eda2a7fd7861d68cd2
      size: 1426507
    - path: output/truthseeker/logs/precomputed/svc/hamming/Vanilla/1000/
      hash: md5
      md5: 7dece16bb979a711597406ab1dace14c.dir
      size: 18478
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/hamming/Vanilla/1000/
      hash: md5
      md5: a870d3aaf9e289024ab4723e0b705897.dir
      size: 8703
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=false ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: output/truthseeker/distance_matrix/svc/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/svc/hamming/Assumed/1000/
      hash: md5
      md5: 205acc051ee5b623a70eedb5dec366dd.dir
      size: 18477
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/hamming/Assumed/1000/
      hash: md5
      md5: f1781e0ff1822578735b630d5fdabebb.dir
      size: 8703
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: output/truthseeker/distance_matrix/svc/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/svc/hamming/Enforced/1000/
      hash: md5
      md5: 86d17bcb7159ba1a29d992cc9cbf47b5.dir
      size: 18486
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/hamming/Enforced/1000/
      hash: md5
      md5: 917c29c2e7cb86581c757331e91f858a.dir
      size: 8706
      nfiles: 3
  grid_search_precompute@1000-truthseeker-svc-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=svc ++model.init.symmetric=false ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.transform=None files.directory=output/truthseeker files.reports=reports/precomputed/svc/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name svc
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 880bf0d361c871492cf6a8f2b9ec72da
      size: 2435
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            direction: ${direction}
            params:
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/svc/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 41f764e0df2857b75f16ef2d677e90c7
      size: 567741
    - path: output/truthseeker/distance_matrix/svc/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/svc/hamming/Average/1000/
      hash: md5
      md5: b8d114e376975082d1ab42ac50471ee6.dir
      size: 18468
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/svc/hamming/Average/1000/
      hash: md5
      md5: f2d65303fb0c7725825e96fda037119d.dir
      size: 8700
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=false
      ++model.init.metric=gzip ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/gzip/Vanilla/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: b03e676f5fdefd2b9ac8cbfcb0be73d4
      size: 988342
    - path: output/truthseeker/distance_matrix/logistic/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 46283ec8adba7ff583ebd74be014ed4a
      size: 2478121
    - path: output/truthseeker/logs/precomputed/logistic/gzip/Vanilla/1000/
      hash: md5
      md5: 27dbcd10b7e545b0543155bb7263a7ce.dir
      size: 18714
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/gzip/Vanilla/1000/
      hash: md5
      md5: 0a39ec11566cad99a6f4df70128ff039.dir
      size: 8702
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=false
      ++model.init.metric=gzip ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/gzip/Assumed/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: b03e676f5fdefd2b9ac8cbfcb0be73d4
      size: 988342
    - path: output/truthseeker/distance_matrix/logistic/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: cdb1db0860c25b2c883631c4caa7630b
      size: 2478448
    - path: output/truthseeker/logs/precomputed/logistic/gzip/Assumed/1000/
      hash: md5
      md5: af3a06ef8ba8039b14399d233bfee3b5.dir
      size: 18705
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/gzip/Assumed/1000/
      hash: md5
      md5: 9eda8e774e60d542a7faafff1f7f409b.dir
      size: 8695
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=true
      ++model.init.metric=gzip ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/gzip/Enforced/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 6cd2f9262fea3f34bb56255576c06775
      size: 989814
    - path: output/truthseeker/distance_matrix/logistic/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 685684da4de63b950264296ff4959cfb
      size: 2478327
    - path: output/truthseeker/logs/precomputed/logistic/gzip/Enforced/1000/
      hash: md5
      md5: b1c9562403727977bbf3de54a8c76e0c.dir
      size: 18711
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/gzip/Enforced/1000/
      hash: md5
      md5: c0d95b6d0ec9e7e0282902f68c246b99.dir
      size: 8703
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=true
      ++model.init.metric=gzip ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/gzip/Average/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 608e871bf1e1fec0008b77ff98a40f00
      size: 1196334
    - path: output/truthseeker/distance_matrix/logistic/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 9071c6195de9fe133d76c5f5fbc499b8
      size: 3005721
    - path: output/truthseeker/logs/precomputed/logistic/gzip/Average/1000/
      hash: md5
      md5: 6d165385360fdcefaa8ad7aafe064581.dir
      size: 18698
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/gzip/Average/1000/
      hash: md5
      md5: e758d09351e8a8b43964b19397dd8d3f.dir
      size: 8702
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=false
      ++model.init.metric=bz2 ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/bz2/Vanilla/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/logistic/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f72479d77e2fcc61c36078d31e1efe81
      size: 3009529
    - path: output/truthseeker/logs/precomputed/logistic/bz2/Vanilla/1000/
      hash: md5
      md5: 8f6595ef25a7c92eafcd000432501253.dir
      size: 18674
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/bz2/Vanilla/1000/
      hash: md5
      md5: 4f4bf3a5d2a6aa068ead6a575b82c753.dir
      size: 8693
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=false
      ++model.init.metric=bz2 ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/bz2/Assumed/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/logistic/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f72479d77e2fcc61c36078d31e1efe81
      size: 3009529
    - path: output/truthseeker/logs/precomputed/logistic/bz2/Assumed/1000/
      hash: md5
      md5: 52d4d41b8dddadddde3926efbe89586a.dir
      size: 18672
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/bz2/Assumed/1000/
      hash: md5
      md5: 87f5ea7c25701580888bcfeb2716e0d9.dir
      size: 8697
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=true
      ++model.init.metric=bz2 ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/bz2/Enforced/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/logistic/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 3dc781f9f7818610e4730a1dae57cefb
      size: 3007733
    - path: output/truthseeker/logs/precomputed/logistic/bz2/Enforced/1000/
      hash: md5
      md5: e99fcfa0125945486c814a88e2cd2d83.dir
      size: 18686
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/bz2/Enforced/1000/
      hash: md5
      md5: 016c8598bdb47b5b06162a59b0403e8d.dir
      size: 8700
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=true
      ++model.init.metric=bz2 ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/bz2/Average/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/logistic/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: 3dc781f9f7818610e4730a1dae57cefb
      size: 3007733
    - path: output/truthseeker/logs/precomputed/logistic/bz2/Average/1000/
      hash: md5
      md5: 8ae14f5520714695e9be9258998ae9f5.dir
      size: 18669
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/bz2/Average/1000/
      hash: md5
      md5: 6e66a1a2a4be0d66853b4f0d88914e0a.dir
      size: 8697
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=false
      ++model.init.metric=brotli ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/brotli/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 200bbc944110e47913b911daa7516b48
      size: 1141875
    - path: output/truthseeker/distance_matrix/logistic/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: e0b381a74939a2cd11523b59780b2644
      size: 2886694
    - path: output/truthseeker/logs/precomputed/logistic/brotli/Vanilla/1000/
      hash: md5
      md5: 0c2886e4dab2d3e1ca6ff959d15cb7a1.dir
      size: 18761
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/brotli/Vanilla/1000/
      hash: md5
      md5: d9149cc0c4569c71a8aeb2229c250126.dir
      size: 8709
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=false
      ++model.init.metric=brotli ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/brotli/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 200bbc944110e47913b911daa7516b48
      size: 1141875
    - path: output/truthseeker/distance_matrix/logistic/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: a182794136c058c81109818943918019
      size: 2887373
    - path: output/truthseeker/logs/precomputed/logistic/brotli/Assumed/1000/
      hash: md5
      md5: 5ce24974f923dc5abdd74894dd0aebd6.dir
      size: 18760
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/brotli/Assumed/1000/
      hash: md5
      md5: bd9773f6804d6a81495bec2ef78c294c.dir
      size: 8711
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=true
      ++model.init.metric=brotli ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/brotli/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: d4397e78831db175f6786c99df277099
      size: 1142498
    - path: output/truthseeker/distance_matrix/logistic/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 7f69d9b103a6a6ab85f2dfe710ab773c
      size: 2884987
    - path: output/truthseeker/logs/precomputed/logistic/brotli/Enforced/1000/
      hash: md5
      md5: 386c594546f924d83bdb0dc3f6790c7d.dir
      size: 18764
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/brotli/Enforced/1000/
      hash: md5
      md5: 10ac025646f9c37e69c6ecbf8f29ccc5.dir
      size: 8711
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=true
      ++model.init.metric=brotli ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/brotli/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 96b30b7b8341180e18f7ff79541f574a
      size: 1321353
    - path: output/truthseeker/distance_matrix/logistic/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: 81417b988f2cee164f3deefbcde86245
      size: 3338300
    - path: output/truthseeker/logs/precomputed/logistic/brotli/Average/1000/
      hash: md5
      md5: 2bd10681f1b70241e618c536bf14c2c0.dir
      size: 18746
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/brotli/Average/1000/
      hash: md5
      md5: 5a8096945feda95829f5958f90a0988a.dir
      size: 8709
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=false
      ++model.init.metric=levenshtein ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/levenshtein/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        output/truthseeker/distance_matrix/logistic/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: 
        output/truthseeker/distance_matrix/logistic/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: fa72d6903649c48618ac9bca12894f74
      size: 1453666
    - path: output/truthseeker/logs/precomputed/logistic/levenshtein/Vanilla/1000/
      hash: md5
      md5: 096105cd07a90a279c47510d3bd76fd3.dir
      size: 18882
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/levenshtein/Vanilla/1000/
      hash: md5
      md5: 254f2dc516cfaa596c674ae055175b1a.dir
      size: 8729
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=false
      ++model.init.metric=levenshtein ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/levenshtein/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        output/truthseeker/distance_matrix/logistic/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: 
        output/truthseeker/distance_matrix/logistic/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/logistic/levenshtein/Assumed/1000/
      hash: md5
      md5: f3effd0f58e7a2b86af3e84da85c193a.dir
      size: 18879
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/levenshtein/Assumed/1000/
      hash: md5
      md5: 2dabd78a417dce175dc2aa6bb83d28a2.dir
      size: 8723
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=true
      ++model.init.metric=levenshtein ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/levenshtein/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        output/truthseeker/distance_matrix/logistic/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e1b27ad482cc36acbaa479adfe0f0e5f
      size: 578897
    - path: 
        output/truthseeker/distance_matrix/logistic/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/logistic/levenshtein/Enforced/1000/
      hash: md5
      md5: 8fa8408852304112d5c907be731a477e.dir
      size: 18890
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/levenshtein/Enforced/1000/
      hash: md5
      md5: 85184a03269944b97ef3e8720f67e27b.dir
      size: 8734
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=true
      ++model.init.metric=levenshtein ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/levenshtein/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        output/truthseeker/distance_matrix/logistic/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 002ee050377c4f5e7e705d66f39e9a04
      size: 572488
    - path: 
        output/truthseeker/distance_matrix/logistic/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 2f0a004953b4fed6fb90338825f292a3
      size: 1437377
    - path: output/truthseeker/logs/precomputed/logistic/levenshtein/Average/1000/
      hash: md5
      md5: fd136ee55cacc64f90ecd2ef63ac2372.dir
      size: 18869
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/levenshtein/Average/1000/
      hash: md5
      md5: cf032c582e56dfb6f6875ebfe8b07452.dir
      size: 8729
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=false
      ++model.init.metric=ratio ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/ratio/Vanilla/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/logistic/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: b346623860e650edbec8a695cc7f3dd8
      size: 4559563
    - path: output/truthseeker/logs/precomputed/logistic/ratio/Vanilla/1000/
      hash: md5
      md5: 21cd5e094132db256fcbde27628e4a72.dir
      size: 18738
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/ratio/Vanilla/1000/
      hash: md5
      md5: bd52c45a0a7cb4ab0ef1b0a33ff55c8e.dir
      size: 8706
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=false
      ++model.init.metric=ratio ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/ratio/Assumed/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/logistic/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: b346623860e650edbec8a695cc7f3dd8
      size: 4559563
    - path: output/truthseeker/logs/precomputed/logistic/ratio/Assumed/1000/
      hash: md5
      md5: fb6729c04a1cc705cf307f28d2a22bdf.dir
      size: 18736
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/ratio/Assumed/1000/
      hash: md5
      md5: fb4d4833f042d079356b369635ae37a5.dir
      size: 8708
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=true
      ++model.init.metric=ratio ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/ratio/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/logistic/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 9ccd226bdc461f1dbb6bb6b71c20f80c
      size: 4559666
    - path: output/truthseeker/logs/precomputed/logistic/ratio/Enforced/1000/
      hash: md5
      md5: 8672c6a7e16d7ec20607693acf1ea130.dir
      size: 18745
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/ratio/Enforced/1000/
      hash: md5
      md5: 120e81675a20dfdf4a4a92a64daa8bfa.dir
      size: 8708
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=true
      ++model.init.metric=ratio ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/ratio/Average/train-1000/400/0/ ++hydra.sampler.n_trials=1
      --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/logistic/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 9ccd226bdc461f1dbb6bb6b71c20f80c
      size: 4559666
    - path: output/truthseeker/logs/precomputed/logistic/ratio/Average/1000/
      hash: md5
      md5: 3a7a0f657a82490df397282a17662b64.dir
      size: 18727
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/ratio/Average/1000/
      hash: md5
      md5: 0a627f653b1c3a1c3d7714bf04f6fbca.dir
      size: 8705
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Vanilla" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=false
      ++model.init.metric=hamming ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/hamming/Vanilla/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: output/truthseeker/distance_matrix/logistic/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: a5eb9f9d038361eda2a7fd7861d68cd2
      size: 1426507
    - path: output/truthseeker/logs/precomputed/logistic/hamming/Vanilla/1000/
      hash: md5
      md5: f88d1b9fdc5b71412f3a7eb13a0c62bc.dir
      size: 18777
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/hamming/Vanilla/1000/
      hash: md5
      md5: d0abf9c8b9db624ec99ad5f1c112c550.dir
      size: 8713
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Assumed" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=false
      ++model.init.metric=hamming ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/hamming/Assumed/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: output/truthseeker/distance_matrix/logistic/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/logistic/hamming/Assumed/1000/
      hash: md5
      md5: 030b753050424623bfe6a182f80bf3a8.dir
      size: 18775
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/hamming/Assumed/1000/
      hash: md5
      md5: 29897ddc9ada2852334b3d2b2c840e20.dir
      size: 8711
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Enforced" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=true ++model.init.modified=true
      ++model.init.metric=hamming ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/hamming/Enforced/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: e8a9c11e830efb33f3e4e9f32dc5998a
      size: 567602
    - path: 
        output/truthseeker/distance_matrix/logistic/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/logistic/hamming/Enforced/1000/
      hash: md5
      md5: 382229f99c88bb8068edfac3b1f342e3.dir
      size: 18784
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/hamming/Enforced/1000/
      hash: md5
      md5: 94965c63244cd9ae781809cce8e2b3c7.dir
      size: 8715
      nfiles: 3
  grid_search_precompute@1000-truthseeker-logistic-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train ++algorithm="Average" data=truthseeker
      data.sample.test_size=400 ++data.sample.train_size=1000 ++dataset=truthseeker
      ++model_name=logistic ++model.init.symmetric=false ++model.init.modified=true
      ++model.init.metric=hamming ++model.init.transform=None files.directory=output/truthseeker
      files.reports=reports/precomputed/logistic/hamming/Average/train-1000/400/0/
      ++hydra.sampler.n_trials=1 --config-name logistic
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: fd0304e3ae9e1f64c2a780861b3931fe
      size: 2681
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${algorithm}/${model.init.metric}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 4096
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2
              +model.init.tol: .0001,.001,.01,.1
              +model.init.C: .0001,.001,.01,.1,1,10,100,1000
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False,average
              ++model.init.transform: 
                None,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm[2]}/test-${data.sample.test_size}-400-0.npz
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: ${oc.env:DECKARD_N_JOBS, 1}
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/distance_matrix/logistic/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 41f764e0df2857b75f16ef2d677e90c7
      size: 567741
    - path: output/truthseeker/distance_matrix/logistic/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: dea9e34d1cf1e7f1d161d43e034cd2ba
      size: 1429022
    - path: output/truthseeker/logs/precomputed/logistic/hamming/Average/1000/
      hash: md5
      md5: cc60389802060f11866eff12d82f2d71.dir
      size: 18764
      nfiles: 4
    - path: output/truthseeker/reports/precomputed/logistic/hamming/Average/1000/
      hash: md5
      md5: b5b0c31daff47c13b56eb5d7074e1691.dir
      size: 8709
      nfiles: 3
  grid_search@1000-ddos-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/gzip/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 4c0df9cecac1566a1e1a8eecb5d4b048
      size: 1170215
    - path: output/ddos/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: aaf49660eebadf1be99cf3f69a378028
      size: 2897484
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/gzip/Enforced/1000/
      hash: md5
      md5: 8912e831241663cd5387e8ffdf100cc1.dir
      size: 11582850
      nfiles: 2305
    - path: output/ddos/reports/search/knn/gzip/Enforced/1000/
      hash: md5
      md5: a57835d2073a02cbd20bac43535d5b64.dir
      size: 254241
      nfiles: 95
  grid_search@1000-ddos-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/gzip/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 8d602c84aa4790618b473a24fedd41c3
      size: 1371119
    - path: output/ddos/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: d750a2db8bc42fc202782e3869f2f25b
      size: 3400593
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/gzip/Average/1000/
      hash: md5
      md5: 819c5a4f109c25b9e6b7cedcf3bd3fef.dir
      size: 10545211
      nfiles: 2305
    - path: output/ddos/reports/search/knn/gzip/Average/1000/
      hash: md5
      md5: 70b295a3635083032327c6bedc51d170.dir
      size: 253621
      nfiles: 95
  grid_search@1000-ddos-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/bz2/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/bz2/Vanilla/1000/
      hash: md5
      md5: ec7be0678010620ee78242c94a966f1f.dir
      size: 9869593
      nfiles: 2305
    - path: output/ddos/reports/search/knn/bz2/Vanilla/1000/
      hash: md5
      md5: c0fa3a41cae3085369d529f7dcf2a8d6.dir
      size: 208853
      nfiles: 72
  grid_search@1000-ddos-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/bz2/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 2ef5790cbfd219226594cc9071b33f0a
      size: 3224798
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/bz2/Assumed/1000/
      hash: md5
      md5: ab9a8465146c57d47d358a6862316080.dir
      size: 9865489
      nfiles: 2305
    - path: output/ddos/reports/search/knn/bz2/Assumed/1000/
      hash: md5
      md5: 11142f287dcaa165e92cebaa9c54440c.dir
      size: 208810
      nfiles: 72
  grid_search@1000-ddos-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/bz2/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/bz2/Enforced/1000/
      hash: md5
      md5: 252abb4e5b519ac3e01094df0a97f459.dir
      size: 9879731
      nfiles: 2305
    - path: output/ddos/reports/search/knn/bz2/Enforced/1000/
      hash: md5
      md5: a418a9aac5f77ac78bd915cdf0d1aca4.dir
      size: 208902
      nfiles: 72
  grid_search@1000-ddos-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/bz2/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: de5efe565f994250bc58a3b12aeabe59
      size: 1297635
    - path: output/ddos/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b1431f25a0c06cf9a1962c81f5560442
      size: 3221961
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/bz2/Average/1000/
      hash: md5
      md5: 5ac8c5f0d70c3dc8cfb5fb7a53df9185.dir
      size: 9865359
      nfiles: 2305
    - path: output/ddos/reports/search/knn/bz2/Average/1000/
      hash: md5
      md5: c7e9807de033436a98054f3ba8c52c99.dir
      size: 208829
      nfiles: 72
  grid_search@1000-ddos-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/brotli/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2fba7a69395876e7c2c43db3eb29a22
      size: 3143767
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 76632d6d6dd3e6ad39b9647faf9ebd76.dir
      size: 8254859
      nfiles: 2305
    - path: output/ddos/reports/search/knn/brotli/Vanilla/1000/
      hash: md5
      md5: bf4549335cd469a01ef695eeeb0c7cb8.dir
      size: 209137
      nfiles: 72
  grid_search@1000-ddos-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/brotli/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da58329555bb04397884143c02e4bc68
      size: 1269812
    - path: output/ddos/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2c29a1b45cd1f52bba5493b7e237a88
      size: 3148759
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/brotli/Assumed/1000/
      hash: md5
      md5: 6fbe3dc1965862440a65099e17088c6b.dir
      size: 8251251
      nfiles: 2305
    - path: output/ddos/reports/search/knn/brotli/Assumed/1000/
      hash: md5
      md5: 9d92c87d6a1f76d6d96a44093be563a3.dir
      size: 209104
      nfiles: 72
  grid_search@1000-ddos-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/brotli/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 487abf71a0940532a5c24e02e8281d80
      size: 1270664
    - path: output/ddos/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5e9ebdff0710028e10620954b6023aef
      size: 3148735
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/brotli/Enforced/1000/
      hash: md5
      md5: 0c2135ce6b346644e7e5621c540428b1.dir
      size: 8262743
      nfiles: 2305
    - path: output/ddos/reports/search/knn/brotli/Enforced/1000/
      hash: md5
      md5: 1efea58b9e129ae5d46462d3feac3ae8.dir
      size: 209161
      nfiles: 72
  grid_search@1000-ddos-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/brotli/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 3b154b98e933d3bd532dc710f8927f5c
      size: 1460796
    - path: output/ddos/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: af1f730f6966eb52c30bca10b3ffa675
      size: 3622500
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/brotli/Average/1000/
      hash: md5
      md5: edf220c3fb23a43e869228fd33235d8e.dir
      size: 8249708
      nfiles: 2305
    - path: output/ddos/reports/search/knn/brotli/Average/1000/
      hash: md5
      md5: 9799e57b7898343a07bf0ed2ad2353c5.dir
      size: 209102
      nfiles: 72
  grid_search@1000-ddos-knn-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/levenshtein/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: dac930e8eccab543e7f4a650691154ab
      size: 1664240
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: fb8ac9e0087dcae0cd6b7487dc08e822.dir
      size: 8331315
      nfiles: 2305
    - path: output/ddos/reports/search/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 8ac99eb9ec42cc07122d1992643225a5.dir
      size: 209606
      nfiles: 72
  grid_search@1000-ddos-knn-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/levenshtein/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 3c2013a4d10bd99f5e9c75bd232b747e.dir
      size: 8328312
      nfiles: 2305
    - path: output/ddos/reports/search/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 112e87ceca052d51e08ef2577f69aa74.dir
      size: 209585
      nfiles: 72
  grid_search@1000-ddos-knn-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/levenshtein/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a268ee6f77a836e6c12e1affdf32314c
      size: 666683
    - path: output/ddos/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 822a61fffbfcf86daf49f13a7126ef48.dir
      size: 8340525
      nfiles: 2305
    - path: output/ddos/reports/search/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: dbb04149dd9add3e6caeff740088c00f.dir
      size: 209649
      nfiles: 72
  grid_search@1000-ddos-knn-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/levenshtein/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5ce75f11bc0521c7c7043b998baff55f
      size: 655767
    - path: output/ddos/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 0cfe70ee365817376f28466d67861145
      size: 1637364
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/levenshtein/Average/1000/
      hash: md5
      md5: f4f9335a6ae976449fe22c9d70ffeee7.dir
      size: 8328061
      nfiles: 2305
    - path: output/ddos/reports/search/knn/levenshtein/Average/1000/
      hash: md5
      md5: e9070f892cb779c50255b9294bf92ffb.dir
      size: 209572
      nfiles: 72
  grid_search@1000-ddos-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/ratio/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/ratio/Vanilla/1000/
      hash: md5
      md5: e26bf49cfdd4c1360ab39942ced10223.dir
      size: 8238959
      nfiles: 2305
    - path: output/ddos/reports/search/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 65ad25d7f48e9878f89f725944981a0b.dir
      size: 209024
      nfiles: 72
  grid_search@1000-ddos-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/ratio/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f7133776538aaba3c5f470a9d6ca3863
      size: 6041868
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/ratio/Assumed/1000/
      hash: md5
      md5: 91e12ed8c9dd2bef538bc2981c2f7159.dir
      size: 8235506
      nfiles: 2305
    - path: output/ddos/reports/search/knn/ratio/Assumed/1000/
      hash: md5
      md5: 3aa04327dbda219f2aa285cae9f9f404.dir
      size: 208990
      nfiles: 72
  grid_search@1000-ddos-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/ratio/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/ratio/Enforced/1000/
      hash: md5
      md5: b7f71d25103b0848b13fed5e7c55e1f3.dir
      size: 8247545
      nfiles: 2305
    - path: output/ddos/reports/search/knn/ratio/Enforced/1000/
      hash: md5
      md5: acbf0d185d9fd9ffc9c2164c03df0aee.dir
      size: 209060
      nfiles: 72
  grid_search@1000-ddos-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=ddos data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=ddos ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/ddos/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/ddos/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      files.directory=output/ddos files.reports=reports/search/knn/ratio/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/ddos/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 2ee90f432c6f314aaeaca3aa8804c68e
      size: 2416653
    - path: output/ddos/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 41d8155ababba141e3acffb07e9a8620
      size: 6041960
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/search/knn/ratio/Average/1000/
      hash: md5
      md5: 71380fdd431ce3f32b1bba430134b43f.dir
      size: 8235593
      nfiles: 2305
    - path: output/ddos/reports/search/knn/ratio/Average/1000/
      hash: md5
      md5: a74dd29f09b2e13e8354326addd719c7.dir
      size: 208991
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/gzip/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a67b3f206762ede54f3bf67f62024d64
      size: 674041
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 605de42b1ab775f6bd4c12bb9e6892b7
      size: 1683148
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 8c43f1fd29283be93aec0abd9969da7c.dir
      size: 6562649
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 9e03155fee0771fbc139ea559d0d2eb2.dir
      size: 207356
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/gzip/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a67b3f206762ede54f3bf67f62024d64
      size: 674041
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 9d3ddef96b42a885963b9a68b1acbe9b
      size: 1679343
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: dfb4ce92e94966a0e57be131d19d4e90.dir
      size: 6559767
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: 5f9b2b151ab83dcdd9344753fc016944.dir
      size: 207312
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/gzip/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 50aad53908d271d8ac279690d7efc47f
      size: 673206
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: d7737d320a52abffeba62146a6258d9f
      size: 1677929
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/gzip/Enforced/1000/
      hash: md5
      md5: 73bdbcd6e70aa26dd54938a75ff9a56e.dir
      size: 6570134
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/gzip/Enforced/1000/
      hash: md5
      md5: 57fa11f8f2b99b105f3657a9c78645ec.dir
      size: 207412
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/gzip/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: db1d7132c280ab3076c14334b87a5c7c
      size: 793467
    - path: output/kdd_nsl/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 43be7e6b08ac3a194d599240110e7973
      size: 1977763
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/gzip/Average/1000/
      hash: md5
      md5: 26419120442cb3fa344aa68ebe5b7ecd.dir
      size: 6560143
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/gzip/Average/1000/
      hash: md5
      md5: 379b8561ebfce4e75cbac9919bdbbb11.dir
      size: 207350
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/bz2/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: c83d8c457d0a3bee5fd376f1efd86840
      size: 637674
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 66aa0c19441d0a9f3184ec817734f887
      size: 1586189
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/bz2/Vanilla/1000/
      hash: md5
      md5: fa764866b6e9ac6c20298cd4cfa30fb5.dir
      size: 6550444
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/bz2/Vanilla/1000/
      hash: md5
      md5: d70879b5637f8dba6f7691c6c7a6681f.dir
      size: 207304
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/bz2/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: c83d8c457d0a3bee5fd376f1efd86840
      size: 637674
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 66aa0c19441d0a9f3184ec817734f887
      size: 1586189
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/bz2/Assumed/1000/
      hash: md5
      md5: 034968d20306f91fd4d04095749669de.dir
      size: 6547649
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/bz2/Assumed/1000/
      hash: md5
      md5: e3868fa28b21558c4278844c1c42a5a8.dir
      size: 207260
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/bz2/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: d0d0e7ecfbb0dbaaa5deac1efebe852d
      size: 637677
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 96c9985b08ca4f4071ba96340d28c53f
      size: 1584893
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/bz2/Enforced/1000/
      hash: md5
      md5: b03d6f561c2a9cd4fa9e63b9f9fb84e1.dir
      size: 6557456
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/bz2/Enforced/1000/
      hash: md5
      md5: 67232bda9468c71e440278e71ce2b683.dir
      size: 207331
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/bz2/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: d0d0e7ecfbb0dbaaa5deac1efebe852d
      size: 637677
    - path: output/kdd_nsl/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: 96c9985b08ca4f4071ba96340d28c53f
      size: 1584893
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/bz2/Average/1000/
      hash: md5
      md5: a95a6f976c02eda940ee2c4aff86a4ef.dir
      size: 6547903
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/bz2/Average/1000/
      hash: md5
      md5: b1d62fa6d7b599bbbf5f01ce4d9ddc7d.dir
      size: 207269
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/brotli/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: da6de065c98b2f458cc838c2fe0359b5
      size: 758244
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: ea2fafe58d1e55f5d8f613972dc82ff8
      size: 1891311
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 5b8695e5fed3781b15ea915ea31d31d6.dir
      size: 6587663
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/brotli/Vanilla/1000/
      hash: md5
      md5: e54aa4c2db3c19318e9eaf9db4f87a10.dir
      size: 207522
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/brotli/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: da6de065c98b2f458cc838c2fe0359b5
      size: 758244
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 4c463003df65e01a75db7961d70892fa
      size: 1892169
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/brotli/Assumed/1000/
      hash: md5
      md5: 9d436233c00edc0d1e71c0e8fe03a6c7.dir
      size: 6584980
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/brotli/Assumed/1000/
      hash: md5
      md5: f00db70d6d9008e836f6a8c6778e0e0c.dir
      size: 207489
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/brotli/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 5b47ef255f48610cda8618784ef23c00
      size: 758626
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: bc3572eddab286c4ad24ffe80e4cd5a1
      size: 1895058
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/brotli/Enforced/1000/
      hash: md5
      md5: d6dc4aa98bf82fce649866dc8a64ccf7.dir
      size: 6595340
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/brotli/Enforced/1000/
      hash: md5
      md5: 92c91a9564a22085000d5c3f56b65dd9.dir
      size: 207596
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/brotli/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 0e01c722756a31e0328b3a795835bed9
      size: 896872
    - path: output/kdd_nsl/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: e3da6260675abbea7c829f124285f20f
      size: 2236219
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/brotli/Average/1000/
      hash: md5
      md5: 812d26973e5819456fe2f9e05d07162c.dir
      size: 6585173
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/brotli/Average/1000/
      hash: md5
      md5: 42a909bdee7b50180a11e7263e21d211.dir
      size: 207520
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/levenshtein/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: a306cbe665214aecec0c2a739efcef99
      size: 994733
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: e9d8a27c56d2f9c5c0106a316922ee3f.dir
      size: 6651589
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 033a3563028a700b67bf60166bcae7b2.dir
      size: 208054
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/levenshtein/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 13cd2fc11ab97e2c0715dc19c4e86440.dir
      size: 6648802
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: dc2053f039cdaf7a800f1bb1f0bde69c.dir
      size: 208020
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/levenshtein/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 956a508a3eecc527fcfa39f4fdca86fc
      size: 398451
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: f958f72178b0427d84dbb93a96864280.dir
      size: 6658418
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 00040ad8259ab58f91ca6741571626df.dir
      size: 208084
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/levenshtein/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: df88b940d193736c20aab13286b88093
      size: 416205
    - path: output/kdd_nsl/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: c674981cd5097267401dbfd59bbb34cb
      size: 1040026
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/levenshtein/Average/1000/
      hash: md5
      md5: 3997b7144e52ff779c95e5b6cf888aa4.dir
      size: 6648818
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/levenshtein/Average/1000/
      hash: md5
      md5: cbff0ecf2db1063a6a7adb529686d0e7.dir
      size: 208020
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/ratio/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 4fcf722a9fb7b652d26a61dd41c4e40a
      size: 738549
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 207db04decab64acf9d2ec2e22754388
      size: 1839567
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 78f0473afc1349162de7340a3975d323.dir
      size: 6576184
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 5a0e74190967971b01f26ed7b7992929.dir
      size: 207457
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/ratio/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 4fcf722a9fb7b652d26a61dd41c4e40a
      size: 738549
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 207db04decab64acf9d2ec2e22754388
      size: 1839567
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/ratio/Assumed/1000/
      hash: md5
      md5: a5177fec03b57c55c85d153739ab2c4e.dir
      size: 6573045
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/ratio/Assumed/1000/
      hash: md5
      md5: 296822414b0fb38b70a89f3ef2d976a9.dir
      size: 207439
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/ratio/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 081900c84a4478429442764bf0d55fac
      size: 738547
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 5751150091700f7bab9359dd9e52d38f
      size: 1839604
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/ratio/Enforced/1000/
      hash: md5
      md5: 9a9520f3160857e33e1f16d59c573480.dir
      size: 6582854
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/ratio/Enforced/1000/
      hash: md5
      md5: 6f87608b83d04b20eef5a63503e78442.dir
      size: 207493
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/ratio/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: 081900c84a4478429442764bf0d55fac
      size: 738547
    - path: output/kdd_nsl/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 5751150091700f7bab9359dd9e52d38f
      size: 1839604
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/ratio/Average/1000/
      hash: md5
      md5: ecaca84d839301239df53021434bbf0d.dir
      size: 6572756
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/ratio/Average/1000/
      hash: md5
      md5: 822ba2a1b86a8586bed232415fc0d48e.dir
      size: 207431
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=hamming 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/hamming/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 82daae721234b3cd9e654c075f3b082c
      size: 1341768
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/hamming/Vanilla/1000/
      hash: md5
      md5: 03d935948bba9da461edd186314c3e98.dir
      size: 6600933
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/hamming/Vanilla/1000/
      hash: md5
      md5: b01d7deb4dc84d05c6e47912caba3611.dir
      size: 207629
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=hamming 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/hamming/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/hamming/Assumed/1000/
      hash: md5
      md5: a35b6785061343e7c24220729eab3599.dir
      size: 6598046
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/hamming/Assumed/1000/
      hash: md5
      md5: a912a908d3bc186167970268fb241542.dir
      size: 207616
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/hamming/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 47db9641f37fff1cec9e22354305d165
      size: 536172
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/hamming/Enforced/1000/
      hash: md5
      md5: f576e29d5ceb4732195bd8a055b1945e.dir
      size: 6607664
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/hamming/Enforced/1000/
      hash: md5
      md5: 53931aabb55ac509d91a62cc154061b8.dir
      size: 207679
      nfiles: 72
  grid_search@1000-kdd_nsl-knn-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=kdd_nsl ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix_train=output/kdd_nsl/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/kdd_nsl/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      files.directory=output/kdd_nsl files.reports=reports/search/knn/hamming/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 5a3d965d23fdaf091483c937dd6ef938
      size: 525644
    - path: output/kdd_nsl/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: be0ed79de51ddb7ff57cd41d723b55a9
      size: 1315432
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/search/knn/hamming/Average/1000/
      hash: md5
      md5: abc2407e8e76a260ff2eb19c1ebf9e1d.dir
      size: 6597730
      nfiles: 2305
    - path: output/kdd_nsl/reports/search/knn/hamming/Average/1000/
      hash: md5
      md5: 102dfc1c16fd6a07231b493f2153a156.dir
      size: 207606
      nfiles: 72
  grid_search@1000-sms_spam-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/gzip/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 7ec77ed41932615d3d9dad4435f36940
      size: 939768
    - path: output/sms_spam/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 0e7eff68617278403defe7feb28a7f9a
      size: 2354247
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 7c1b1219286b2296723a58920e6432a6.dir
      size: 6578179
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 94b819a66a661ed389c1fc079760b391.dir
      size: 207647
      nfiles: 72
  grid_search@1000-sms_spam-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/gzip/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 7ec77ed41932615d3d9dad4435f36940
      size: 939768
    - path: output/sms_spam/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 6bf1205eed0f7b37e8ffe52a4ae13e8c
      size: 2357192
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: 7227e5d6be21e7571ebbdb9f78f6c059.dir
      size: 6575298
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: 4207a62e1f349623c8eca67817e1e4fd.dir
      size: 207625
      nfiles: 72
  grid_search@1000-sms_spam-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/gzip/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 5587572b3b2a843801441ab83ed8dd17
      size: 941054
    - path: output/sms_spam/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 59ebda3deef57d69dd835757d63658ed
      size: 2352090
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/gzip/Enforced/1000/
      hash: md5
      md5: 6a27aa4dbbf2197ea8767b07c21ee58a.dir
      size: 6584855
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/gzip/Enforced/1000/
      hash: md5
      md5: bcd450883e129c6319eda7789867b253.dir
      size: 207669
      nfiles: 72
  grid_search@1000-sms_spam-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/gzip/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: b9bcadc38dea024b7881c537c677a81a
      size: 1096642
    - path: output/sms_spam/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 58b138e9df2b2eff896b6bc617315dd9
      size: 2745291
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/gzip/Average/1000/
      hash: md5
      md5: d480f5cf56d8cfa7ccb21c86ee72c6b1.dir
      size: 6575147
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/gzip/Average/1000/
      hash: md5
      md5: e4809c7f37e2405614e4e20d7b9cd55b.dir
      size: 207609
      nfiles: 72
  grid_search@1000-sms_spam-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/bz2/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 970ec8ed3de77c4e422d80f7bf9f5415
      size: 1013813
    - path: output/sms_spam/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 600684d7b3232c5c3636406da9669b59
      size: 2531656
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/bz2/Vanilla/1000/
      hash: md5
      md5: cc7c89e333f8730ed072463539fcb69d.dir
      size: 6565318
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/bz2/Vanilla/1000/
      hash: md5
      md5: 4c7ef19f8c2aa8a1fea5e90b1c3e0747.dir
      size: 207533
      nfiles: 72
  grid_search@1000-sms_spam-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/bz2/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 970ec8ed3de77c4e422d80f7bf9f5415
      size: 1013813
    - path: output/sms_spam/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 600684d7b3232c5c3636406da9669b59
      size: 2531656
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/bz2/Assumed/1000/
      hash: md5
      md5: 4019b71d943d76931b187d809fc096a6.dir
      size: 6562379
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/bz2/Assumed/1000/
      hash: md5
      md5: 1220d275f8a806f442e1e7cc32341c04.dir
      size: 207503
      nfiles: 72
  grid_search@1000-sms_spam-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/bz2/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: aa84a4da00adb3c1cbe3ba4018e3e657
      size: 1013788
    - path: output/sms_spam/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: b064eb9e03388152b16edee324a546fa
      size: 2529914
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/bz2/Enforced/1000/
      hash: md5
      md5: ba27f389d732a440fb8a610f1e76b5cb.dir
      size: 6571963
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/bz2/Enforced/1000/
      hash: md5
      md5: 8a75d8365ec8260e1e2601dc97c3ef75.dir
      size: 207577
      nfiles: 72
  grid_search@1000-sms_spam-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/bz2/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: aa84a4da00adb3c1cbe3ba4018e3e657
      size: 1013788
    - path: output/sms_spam/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: b064eb9e03388152b16edee324a546fa
      size: 2529914
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/bz2/Average/1000/
      hash: md5
      md5: 230e0b22712ceb73e0e5115cacc65342.dir
      size: 6562074
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/bz2/Average/1000/
      hash: md5
      md5: 6587b1643d65112ad3f28690703918fc.dir
      size: 207500
      nfiles: 72
  grid_search@1000-sms_spam-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/brotli/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 0735e5f539997da8352841d940741b66
      size: 1027748
    - path: output/sms_spam/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: aca6751e43cc4bdcd43b9adabff9db03
      size: 2564341
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/brotli/Vanilla/1000/
      hash: md5
      md5: bd4c3fc465e1d6a212a2ba6e6a0881ae.dir
      size: 6603494
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 26998df4402c44380fb414fc22e02193.dir
      size: 207813
      nfiles: 72
  grid_search@1000-sms_spam-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/brotli/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 0735e5f539997da8352841d940741b66
      size: 1027748
    - path: output/sms_spam/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c7f2fadde298d95b8af56b6b58b645fe
      size: 2573818
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/brotli/Assumed/1000/
      hash: md5
      md5: 7985912abdec86db37a69508dc734246.dir
      size: 6600601
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/brotli/Assumed/1000/
      hash: md5
      md5: e99d491a593cdc19383beb71f08916b9.dir
      size: 207782
      nfiles: 72
  grid_search@1000-sms_spam-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/brotli/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: ba12ec1952aee0afa7f35ca9a180df0d
      size: 1028005
    - path: output/sms_spam/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: e19849867e695eb08c8d3484eeb9679a
      size: 2564188
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/brotli/Enforced/1000/
      hash: md5
      md5: 2a85e83ab230da99f42e75fe93fe08d7.dir
      size: 6610174
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/brotli/Enforced/1000/
      hash: md5
      md5: 4faf4b324c53af5b76fd1b37c33d7113.dir
      size: 207853
      nfiles: 72
  grid_search@1000-sms_spam-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/brotli/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 51258b45e223af081a0b81b2d8270755
      size: 1178834
    - path: output/sms_spam/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: e992f2bef3329ebf90e1513b4926f549
      size: 2942881
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/brotli/Average/1000/
      hash: md5
      md5: 27b33bd66cae740957181855dabb0d4a.dir
      size: 6600123
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/brotli/Average/1000/
      hash: md5
      md5: 6a51132db2c3a9dcbbdcdb9a57df7371.dir
      size: 207762
      nfiles: 72
  grid_search@1000-sms_spam-knn-levenshtein-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/levenshtein/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 174c8b407cafc1271ae198cdb19ec3ae
      size: 1320998
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: 9dfbe6018eb9c4dcbc5e6590106f63a5.dir
      size: 6666253
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/levenshtein/Vanilla/1000/
      hash: md5
      md5: f11729829a44013c9dce6864578f83ec.dir
      size: 208281
      nfiles: 72
  grid_search@1000-sms_spam-knn-levenshtein-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/levenshtein/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Assumed/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 8385fcc515dcaee780e389701efd9ecd.dir
      size: 6663095
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/levenshtein/Assumed/1000/
      hash: md5
      md5: 1e7db2b0251133128fa31e5f42322e0b.dir
      size: 208256
      nfiles: 72
  grid_search@1000-sms_spam-knn-levenshtein-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/levenshtein/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Enforced/test-1000-400-0.npz
      hash: md5
      md5: a273695d86e3270ae5ecd34117855367
      size: 526463
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: ab32ef3f937a8bebcdd32981e938caa6.dir
      size: 6673341
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/levenshtein/Enforced/1000/
      hash: md5
      md5: 8d9158bdb1af755081a681ce846b53a6.dir
      size: 208336
      nfiles: 72
  grid_search@1000-sms_spam-knn-levenshtein-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/levenshtein/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Average/test-1000-400-0.npz
      hash: md5
      md5: 5f253a630f9344e2c7602da98122ecfb
      size: 534451
    - path: output/sms_spam/distance_matrix/knn/levenshtein/Average/train-1000-400-0.npz
      hash: md5
      md5: 1d5d4ab8c9020da5f95c3610ab3ba2fd
      size: 1344085
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/levenshtein/Average/1000/
      hash: md5
      md5: 53503bc52178e6b57f9965fca43271f1.dir
      size: 6663205
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/levenshtein/Average/1000/
      hash: md5
      md5: 6d8644c002f483de265b9f525b8f7402.dir
      size: 208235
      nfiles: 72
  grid_search@1000-sms_spam-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/ratio/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 1d00aac00cf16da11c8a303faf7e9338
      size: 1311374
    - path: output/sms_spam/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: c2255f2a5dc8fb620cdc0a852b14e955
      size: 3266447
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 6a06fbcff03c66d2c51291810c0ed939.dir
      size: 6590911
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 19d4c4b53e55ef62ca607fd0f5ea0947.dir
      size: 207748
      nfiles: 72
  grid_search@1000-sms_spam-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/ratio/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 1d00aac00cf16da11c8a303faf7e9338
      size: 1311374
    - path: output/sms_spam/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: c2255f2a5dc8fb620cdc0a852b14e955
      size: 3266447
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/ratio/Assumed/1000/
      hash: md5
      md5: 62a60f3aba71c3d73ca3c06291029bf6.dir
      size: 6588249
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/ratio/Assumed/1000/
      hash: md5
      md5: 54df59f50548b33d40039b91f5139d32.dir
      size: 207720
      nfiles: 72
  grid_search@1000-sms_spam-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/ratio/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: ace8c634acaf483f9e80e78ca1c29d68
      size: 1311370
    - path: output/sms_spam/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: d3d55be58508fe3f604913343c542933
      size: 3266569
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/ratio/Enforced/1000/
      hash: md5
      md5: 1d7a9bd310a68a845719fa64d4b934fc.dir
      size: 6597686
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/ratio/Enforced/1000/
      hash: md5
      md5: 7a794a96a42f7f7dcf6ee60cf74f4644.dir
      size: 207784
      nfiles: 72
  grid_search@1000-sms_spam-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/ratio/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: ace8c634acaf483f9e80e78ca1c29d68
      size: 1311370
    - path: output/sms_spam/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: d3d55be58508fe3f604913343c542933
      size: 3266569
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/ratio/Average/1000/
      hash: md5
      md5: 570943c6fd28148edac16eb4c50f4e91.dir
      size: 6587856
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/ratio/Average/1000/
      hash: md5
      md5: 42f7506846ea2c1caf73597f121a7344.dir
      size: 207708
      nfiles: 72
  grid_search@1000-sms_spam-knn-hamming-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=hamming 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/hamming/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/hamming/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/knn/hamming/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 301c05c553de88726de85cb0573ba266
      size: 1260551
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/hamming/Vanilla/1000/
      hash: md5
      md5: 88240b1d4feeea3e24ad1a0ea78b24e7.dir
      size: 6616041
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/hamming/Vanilla/1000/
      hash: md5
      md5: 9328373c0b56ef9269344057966a9355.dir
      size: 207921
      nfiles: 72
  grid_search@1000-sms_spam-knn-hamming-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=hamming 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/hamming/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/hamming/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/knn/hamming/Assumed/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/hamming/Assumed/1000/
      hash: md5
      md5: db648191a4580abb4fe327eb914b93c6.dir
      size: 6613507
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/hamming/Assumed/1000/
      hash: md5
      md5: 1effd532903935c4cefe4b9462b68f2e.dir
      size: 207888
      nfiles: 72
  grid_search@1000-sms_spam-knn-hamming-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/hamming/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/hamming/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 8444711e4b302559c8768e8b5291946c
      size: 501535
    - path: output/sms_spam/distance_matrix/knn/hamming/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/hamming/Enforced/1000/
      hash: md5
      md5: 59911d0bf95a00449a8e017e0e69e16c.dir
      size: 6622585
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/hamming/Enforced/1000/
      hash: md5
      md5: 67aaed39e0886a5e6b41dbec1dd8c383.dir
      size: 207955
      nfiles: 72
  grid_search@1000-sms_spam-knn-hamming-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=sms_spam ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix_train=output/sms_spam/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/sms_spam/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      files.directory=output/sms_spam files.reports=reports/search/knn/hamming/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/sms_spam/distance_matrix/knn/hamming/Average/test-1000-400-0.npz
      hash: md5
      md5: 41a8bfbb1f470c49e6eea1343d5fd6c2
      size: 518308
    - path: output/sms_spam/distance_matrix/knn/hamming/Average/train-1000-400-0.npz
      hash: md5
      md5: 0b16f741cff151e081d968ea683a7085
      size: 1302591
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/search/knn/hamming/Average/1000/
      hash: md5
      md5: 4fd17c817db61a02b0404a57c4cd8a2a.dir
      size: 6613312
      nfiles: 2305
    - path: output/sms_spam/reports/search/knn/hamming/Average/1000/
      hash: md5
      md5: 976162a682d66675b2b6f2179d04871f.dir
      size: 207885
      nfiles: 72
  grid_search@1000-truthseeker-knn-gzip-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/gzip/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/gzip/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: b03e676f5fdefd2b9ac8cbfcb0be73d4
      size: 988342
    - path: output/truthseeker/distance_matrix/knn/gzip/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: 46283ec8adba7ff583ebd74be014ed4a
      size: 2478121
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: 204b21abf876ef5f4a243b5a32ea06b3.dir
      size: 6647263
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/gzip/Vanilla/1000/
      hash: md5
      md5: fbd1b5e475a7ea2d4b20e225b1db654d.dir
      size: 208647
      nfiles: 72
  grid_search@1000-truthseeker-knn-gzip-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/gzip/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/gzip/Assumed/test-1000-400-0.npz
      hash: md5
      md5: b03e676f5fdefd2b9ac8cbfcb0be73d4
      size: 988342
    - path: output/truthseeker/distance_matrix/knn/gzip/Assumed/train-1000-400-0.npz
      hash: md5
      md5: cdb1db0860c25b2c883631c4caa7630b
      size: 2478448
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: e6ef6c87123f6e7ad86da81f6847169e.dir
      size: 6644383
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/gzip/Assumed/1000/
      hash: md5
      md5: b5ca13df53b7f7856f4819c06bdd8eb6.dir
      size: 208624
      nfiles: 72
  grid_search@1000-truthseeker-knn-gzip-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/gzip/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/gzip/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 6cd2f9262fea3f34bb56255576c06775
      size: 989814
    - path: output/truthseeker/distance_matrix/knn/gzip/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 685684da4de63b950264296ff4959cfb
      size: 2478327
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/gzip/Enforced/1000/
      hash: md5
      md5: 5ffc64dbec6d96163d845fa8989b284a.dir
      size: 6653906
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/gzip/Enforced/1000/
      hash: md5
      md5: ec4e32d4ee8038aaa9cdac66f9bdca7c.dir
      size: 208681
      nfiles: 72
  grid_search@1000-truthseeker-knn-gzip-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/gzip/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/gzip/Average/test-1000-400-0.npz
      hash: md5
      md5: 608e871bf1e1fec0008b77ff98a40f00
      size: 1196334
    - path: output/truthseeker/distance_matrix/knn/gzip/Average/train-1000-400-0.npz
      hash: md5
      md5: 9071c6195de9fe133d76c5f5fbc499b8
      size: 3005721
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/gzip/Average/1000/
      hash: md5
      md5: a0d9e478c70e2232f11323b2029b6519.dir
      size: 6644281
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/gzip/Average/1000/
      hash: md5
      md5: e49046cb260390402bba83fbdbf744cc.dir
      size: 208606
      nfiles: 72
  grid_search@1000-truthseeker-knn-bz2-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/bz2/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/bz2/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/knn/bz2/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: f72479d77e2fcc61c36078d31e1efe81
      size: 3009529
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/bz2/Vanilla/1000/
      hash: md5
      md5: 21fbeb3304292d79e53c33f6c506988d.dir
      size: 6634627
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/bz2/Vanilla/1000/
      hash: md5
      md5: 9091af1108444565972be384fbddcb0f.dir
      size: 208551
      nfiles: 72
  grid_search@1000-truthseeker-knn-bz2-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/bz2/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/bz2/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/knn/bz2/Assumed/train-1000-400-0.npz
      hash: md5
      md5: f72479d77e2fcc61c36078d31e1efe81
      size: 3009529
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/bz2/Assumed/1000/
      hash: md5
      md5: 08eb56366b5defa31993fd8fb8159401.dir
      size: 6631748
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/bz2/Assumed/1000/
      hash: md5
      md5: e4895e55b53b40499f1ee2a9fddf42b0.dir
      size: 208505
      nfiles: 72
  grid_search@1000-truthseeker-knn-bz2-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/bz2/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/bz2/Enforced/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/knn/bz2/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 3dc781f9f7818610e4730a1dae57cefb
      size: 3007733
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/bz2/Enforced/1000/
      hash: md5
      md5: e7d62557cd18cca82e55243cc2553009.dir
      size: 6641556
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/bz2/Enforced/1000/
      hash: md5
      md5: eb7a6d3d4fdc0615f68ea8f319da062a.dir
      size: 208590
      nfiles: 72
  grid_search@1000-truthseeker-knn-bz2-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/bz2/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/bz2/Average/test-1000-400-0.npz
      hash: md5
      md5: 9b30f6e26ef9f59b78c0e9da2595a5c5
      size: 1194619
    - path: output/truthseeker/distance_matrix/knn/bz2/Average/train-1000-400-0.npz
      hash: md5
      md5: 3dc781f9f7818610e4730a1dae57cefb
      size: 3007733
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/bz2/Average/1000/
      hash: md5
      md5: 644539a499b94eb5cae5e4b974d57f97.dir
      size: 6631623
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/bz2/Average/1000/
      hash: md5
      md5: 5ffe66d6e9bfae8aeb8b5f9934b10a12.dir
      size: 208532
      nfiles: 72
  grid_search@1000-truthseeker-knn-brotli-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/brotli/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/brotli/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: 200bbc944110e47913b911daa7516b48
      size: 1141875
    - path: output/truthseeker/distance_matrix/knn/brotli/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: e0b381a74939a2cd11523b59780b2644
      size: 2886694
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/brotli/Vanilla/1000/
      hash: md5
      md5: 672b6e2e491242c470b9304646d65f24.dir
      size: 6672594
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/brotli/Vanilla/1000/
      hash: md5
      md5: bea8f1f0c5cf6d128c59bf7400061da6.dir
      size: 208816
      nfiles: 72
  grid_search@1000-truthseeker-knn-brotli-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/brotli/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/brotli/Assumed/test-1000-400-0.npz
      hash: md5
      md5: 200bbc944110e47913b911daa7516b48
      size: 1141875
    - path: output/truthseeker/distance_matrix/knn/brotli/Assumed/train-1000-400-0.npz
      hash: md5
      md5: a182794136c058c81109818943918019
      size: 2887373
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/brotli/Assumed/1000/
      hash: md5
      md5: 69b2583d6e0466e67d19809de13a6134.dir
      size: 6669657
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/brotli/Assumed/1000/
      hash: md5
      md5: 342a0af9294563d4c99ddffbc052f392.dir
      size: 208818
      nfiles: 72
  grid_search@1000-truthseeker-knn-brotli-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/brotli/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/brotli/Enforced/test-1000-400-0.npz
      hash: md5
      md5: d4397e78831db175f6786c99df277099
      size: 1142498
    - path: output/truthseeker/distance_matrix/knn/brotli/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 7f69d9b103a6a6ab85f2dfe710ab773c
      size: 2884987
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/brotli/Enforced/1000/
      hash: md5
      md5: 0ebdd4d721709cd79bd67a99346f2404.dir
      size: 6679052
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/brotli/Enforced/1000/
      hash: md5
      md5: 6289cbacea44b6fc914c2fb1e83a2028.dir
      size: 208873
      nfiles: 72
  grid_search@1000-truthseeker-knn-brotli-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=brotli 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/brotli/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/brotli/Average/test-1000-400-0.npz
      hash: md5
      md5: 96b30b7b8341180e18f7ff79541f574a
      size: 1321353
    - path: output/truthseeker/distance_matrix/knn/brotli/Average/train-1000-400-0.npz
      hash: md5
      md5: 81417b988f2cee164f3deefbcde86245
      size: 3338300
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/brotli/Average/1000/
      hash: md5
      md5: 5cf49b01f897da75f601fdcf9446b740.dir
      size: 6669361
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/brotli/Average/1000/
      hash: md5
      md5: 9066e3f65183100e5706ee4c448177f7.dir
      size: 208813
      nfiles: 72
  grid_search@1000-truthseeker-knn-ratio-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/ratio/Vanilla/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Vanilla" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/ratio/Vanilla/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/knn/ratio/Vanilla/train-1000-400-0.npz
      hash: md5
      md5: b346623860e650edbec8a695cc7f3dd8
      size: 4559563
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/ratio/Vanilla/1000/
      hash: md5
      md5: c5f6c0d3cfa274a94d1996d38de3a9e8.dir
      size: 6659625
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/ratio/Vanilla/1000/
      hash: md5
      md5: 325cec04fc581fcc85a1701863c727c0.dir
      size: 208727
      nfiles: 72
  grid_search@1000-truthseeker-knn-ratio-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=false ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/ratio/Assumed/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Assumed" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/ratio/Assumed/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/knn/ratio/Assumed/train-1000-400-0.npz
      hash: md5
      md5: b346623860e650edbec8a695cc7f3dd8
      size: 4559563
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/ratio/Assumed/1000/
      hash: md5
      md5: a59710103ff0ad2a0e6ae4c04a1bc91b.dir
      size: 6656778
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/ratio/Assumed/1000/
      hash: md5
      md5: f984589f6963c15b0c12052c3cb87875.dir
      size: 208709
      nfiles: 72
  grid_search@1000-truthseeker-knn-ratio-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/ratio/Enforced/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Enforced" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/ratio/Enforced/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/knn/ratio/Enforced/train-1000-400-0.npz
      hash: md5
      md5: 9ccd226bdc461f1dbb6bb6b71c20f80c
      size: 4559666
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/ratio/Enforced/1000/
      hash: md5
      md5: 6b326b2b1d8841a40b5510ce4e351d66.dir
      size: 6666659
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/ratio/Enforced/1000/
      hash: md5
      md5: d71f3df33a6f156c2418a41b131afca9.dir
      size: 208772
      nfiles: 72
  grid_search@1000-truthseeker-knn-ratio-algorithm3:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker data.sample.test_size=400
      ++data.sample.train_size=1000 ++dataset=truthseeker ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix_train=output/truthseeker/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      ++model.init.distance_matrix_test=output/truthseeker/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      files.directory=output/truthseeker files.reports=reports/search/knn/ratio/Average/1000/400/0/
      hydra.sweeper.n_jobs=1 hydra.launcher.n_jobs=1 ++algorithm="Average" --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 90d278f27b15b1b273a40db83528cf72
      size: 2347
    - path: output/truthseeker/distance_matrix/knn/ratio/Average/test-1000-400-0.npz
      hash: md5
      md5: f0e438f65adf80a25be6bcc767a896a4
      size: 1838795
    - path: output/truthseeker/distance_matrix/knn/ratio/Average/train-1000-400-0.npz
      hash: md5
      md5: 9ccd226bdc461f1dbb6bb6b71c20f80c
      size: 4559666
    - path: params.yaml
      hash: md5
      md5: d7c5cc73d65055178e26d42584e14483
      size: 1297
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: 
              output/${dataset}/logs/precomputed/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
          sweep:
            dir: 
              output/${dataset}/logs/search/${model_name}/${model.init.metric}/${algorithm}/${data.sample.train_size}
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: maximize
              metric_names: accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.GridSampler
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${algorithm}
            n_trials: 4096
            n_jobs: 1
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.metric: gzip,bz2,brotli,levenshtein,ratio,hamming
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.transform: None,abs,square,exp
              ++model.init.distance_matrix_train: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/train-${data.sample.train_size}-400-0.npz
              ++model.init.distance_matrix_test: 
                output/${dataset}/distance_matrix/${model_name}/${model.init.metric}/${algorithm}/test-${data.sample.test_size}-400-0.npz
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 1
            prefer: processes
            verbose: 1
            timeout: ${oc.env:DECKARD_TIMEOUT, 1800}
            pre_dispatch: 2*${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/truthseeker/logs/search/knn/ratio/Average/1000/
      hash: md5
      md5: bd0e891aeb0e7c04261f9540a84ce9f1.dir
      size: 6656515
      nfiles: 2305
    - path: output/truthseeker/reports/search/knn/ratio/Average/1000/
      hash: md5
      md5: b17d2c710458f36cbd4928d06a3cd41e.dir
      size: 208716
      nfiles: 72
  compile@kdd_nsl-knn-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/kdd_nsl/reports/precomputed/knn  --results_file
      output/kdd_nsl/reports/precomputed/knn.csv
    deps:
    - path: output/kdd_nsl/reports/precomputed/knn/
      hash: md5
      md5: 64d57463c5edcd2c029fe48e6c71cad4.dir
      size: 412629
      nfiles: 144
    outs:
    - path: output/kdd_nsl/reports/precomputed/knn.csv
      hash: md5
      md5: e157331b8f2ad8c1891fb493eb33b647
      size: 64562
  compile@kdd_nsl-svc-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/kdd_nsl/reports/precomputed/svc  --results_file
      output/kdd_nsl/reports/precomputed/svc.csv
    deps:
    - path: output/kdd_nsl/reports/precomputed/svc/
      hash: md5
      md5: a2bffbdc8971df74b8faf166b9522c9b.dir
      size: 207507
      nfiles: 72
    outs:
    - path: output/kdd_nsl/reports/precomputed/svc.csv
      hash: md5
      md5: 53366efcf8feb3bc933d7c968a9c8b3f
      size: 33693
  compile@kdd_nsl-logistic-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/kdd_nsl/reports/precomputed/logistic  --results_file
      output/kdd_nsl/reports/precomputed/logistic.csv
    deps:
    - path: output/kdd_nsl/reports/precomputed/logistic/
      hash: md5
      md5: 5add4c7017518727f64b09676aeb82eb.dir
      size: 207748
      nfiles: 72
    outs:
    - path: output/kdd_nsl/reports/precomputed/logistic.csv
      hash: md5
      md5: 0194c457bd86fe4fbd75bff3e63e7aad
      size: 34325
  compile@sms_spam-knn-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/sms_spam/reports/precomputed/knn  --results_file
      output/sms_spam/reports/precomputed/knn.csv
    deps:
    - path: output/sms_spam/reports/precomputed/knn/
      hash: md5
      md5: 17312bb1e1a2d6353f7e2e4adbea1623.dir
      size: 413135
      nfiles: 144
    outs:
    - path: output/sms_spam/reports/precomputed/knn.csv
      hash: md5
      md5: 1466a1a5a569142d35a32ba49213a8cc
      size: 64682
  compile@sms_spam-svc-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/sms_spam/reports/precomputed/svc  --results_file
      output/sms_spam/reports/precomputed/svc.csv
    deps:
    - path: output/sms_spam/reports/precomputed/svc/
      hash: md5
      md5: 7ecd20d1c8e8062375af5c41c5ddd87f.dir
      size: 207762
      nfiles: 72
    outs:
    - path: output/sms_spam/reports/precomputed/svc.csv
      hash: md5
      md5: c18dd3a0cdf81a9d6f38eb10e5994cd0
      size: 33767
  compile@sms_spam-logistic-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/sms_spam/reports/precomputed/logistic  --results_file
      output/sms_spam/reports/precomputed/logistic.csv
    deps:
    - path: output/sms_spam/reports/precomputed/logistic/
      hash: md5
      md5: bab51c45d30349ec34097fdb072a4942.dir
      size: 208024
      nfiles: 72
    outs:
    - path: output/sms_spam/reports/precomputed/logistic.csv
      hash: md5
      md5: 7d58d7996b1d8bc4bea6e1204c080384
      size: 34441
  compile@ddos-knn-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/ddos/reports/precomputed/knn  --results_file
      output/ddos/reports/precomputed/knn.csv
    deps:
    - path: output/ddos/reports/precomputed/knn/
      hash: md5
      md5: 5d44d2774312d575aee5b6d2d4eba2a0.dir
      size: 415777
      nfiles: 144
    outs:
    - path: output/ddos/reports/precomputed/knn.csv
      hash: md5
      md5: 398743a2b387b3246e7bffad8e3ca71a
      size: 66056
  compile@ddos-svc-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/ddos/reports/precomputed/svc  --results_file
      output/ddos/reports/precomputed/svc.csv
    deps:
    - path: output/ddos/reports/precomputed/svc/
      hash: md5
      md5: a6bc09fa304d938962e0c9b1a5ef8ccd.dir
      size: 209079
      nfiles: 72
    outs:
    - path: output/ddos/reports/precomputed/svc.csv
      hash: md5
      md5: eb715254f89d6f53687a4b184213fbed
      size: 34459
  compile@ddos-logistic-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/ddos/reports/precomputed/logistic  --results_file
      output/ddos/reports/precomputed/logistic.csv
    deps:
    - path: output/ddos/reports/precomputed/logistic/
      hash: md5
      md5: 0f65df998ef7a21dc0a33bd2371e98d4.dir
      size: 209337
      nfiles: 72
    outs:
    - path: output/ddos/reports/precomputed/logistic.csv
      hash: md5
      md5: 7b2b5010db17290f0f1c5844d0383694
      size: 35125
  compile@truthseeker-knn-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/truthseeker/reports/precomputed/knn  --results_file
      output/truthseeker/reports/precomputed/knn.csv
    deps:
    - path: output/truthseeker/reports/precomputed/knn/
      hash: md5
      md5: dc466c0f42c9070ff2d447ffcd813375.dir
      size: 415219
      nfiles: 144
    outs:
    - path: output/truthseeker/reports/precomputed/knn.csv
      hash: md5
      md5: 380af81832a5f96018cfe06ac45fe03a
      size: 66978
  compile@truthseeker-svc-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/truthseeker/reports/precomputed/svc  --results_file
      output/truthseeker/reports/precomputed/svc.csv
    deps:
    - path: output/truthseeker/reports/precomputed/svc/
      hash: md5
      md5: d79280d2d99d017528d4743c743cc072.dir
      size: 208778
      nfiles: 72
    outs:
    - path: output/truthseeker/reports/precomputed/svc.csv
      hash: md5
      md5: d9b9aaff2595f88174c024191bca43a9
      size: 34863
  compile@truthseeker-logistic-precomputed:
    cmd: python -m deckard.layers.compile  --report_folder output/truthseeker/reports/precomputed/logistic  --results_file
      output/truthseeker/reports/precomputed/logistic.csv
    deps:
    - path: output/truthseeker/reports/precomputed/logistic/
      hash: md5
      md5: 24b8bba4103f248d96fda119726deb12.dir
      size: 209019
      nfiles: 72
    outs:
    - path: output/truthseeker/reports/precomputed/logistic.csv
      hash: md5
      md5: 74721a61c654a7833e3616d3f916f925
      size: 35495
  clean@kdd_nsl-knn-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/kdd_nsl/reports/precomputed/knn.csv
      -o output/kdd_nsl/plots//precomputed/knn.csv -c conf/clean.yaml
    deps:
    - path: output/kdd_nsl/reports/precomputed/knn.csv
      hash: md5
      md5: e157331b8f2ad8c1891fb493eb33b647
      size: 64562
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/kdd_nsl/plots//precomputed/knn.csv
      hash: md5
      md5: 6cd0c5dc2a42a423ce72bb2ebfa5f2d2
      size: 52851
  clean@kdd_nsl-svc-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/kdd_nsl/reports/precomputed/svc.csv
      -o output/kdd_nsl/plots//precomputed/svc.csv -c conf/clean.yaml
    deps:
    - path: output/kdd_nsl/reports/precomputed/svc.csv
      hash: md5
      md5: 53366efcf8feb3bc933d7c968a9c8b3f
      size: 33693
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/kdd_nsl/plots//precomputed/svc.csv
      hash: md5
      md5: 427a1b2610c3185b635883bc8fd57557
      size: 27721
  clean@kdd_nsl-logistic-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/kdd_nsl/reports/precomputed/logistic.csv
      -o output/kdd_nsl/plots//precomputed/logistic.csv -c conf/clean.yaml
    deps:
    - path: output/kdd_nsl/reports/precomputed/logistic.csv
      hash: md5
      md5: 0194c457bd86fe4fbd75bff3e63e7aad
      size: 34325
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/kdd_nsl/plots//precomputed/logistic.csv
      hash: md5
      md5: 65042992c4241a676e725300c2af8e94
      size: 28576
  clean@sms_spam-knn-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/sms_spam/reports/precomputed/knn.csv
      -o output/sms_spam/plots//precomputed/knn.csv -c conf/clean.yaml
    deps:
    - path: output/sms_spam/reports/precomputed/knn.csv
      hash: md5
      md5: 1466a1a5a569142d35a32ba49213a8cc
      size: 64682
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/sms_spam/plots//precomputed/knn.csv
      hash: md5
      md5: 387de8a23c21a93358e42643506c5f3b
      size: 53006
  clean@sms_spam-svc-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/sms_spam/reports/precomputed/svc.csv
      -o output/sms_spam/plots//precomputed/svc.csv -c conf/clean.yaml
    deps:
    - path: output/sms_spam/reports/precomputed/svc.csv
      hash: md5
      md5: c18dd3a0cdf81a9d6f38eb10e5994cd0
      size: 33767
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/sms_spam/plots//precomputed/svc.csv
      hash: md5
      md5: 2977e2315f4c9bde19694dae19b09e95
      size: 27813
  clean@sms_spam-logistic-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/sms_spam/reports/precomputed/logistic.csv
      -o output/sms_spam/plots//precomputed/logistic.csv -c conf/clean.yaml
    deps:
    - path: output/sms_spam/reports/precomputed/logistic.csv
      hash: md5
      md5: 7d58d7996b1d8bc4bea6e1204c080384
      size: 34441
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/sms_spam/plots//precomputed/logistic.csv
      hash: md5
      md5: 897a27b687e1d5da0b14f3ba3766e072
      size: 28681
  clean@ddos-knn-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/ddos/reports/precomputed/knn.csv
      -o output/ddos/plots//precomputed/knn.csv -c conf/clean.yaml
    deps:
    - path: output/ddos/reports/precomputed/knn.csv
      hash: md5
      md5: 398743a2b387b3246e7bffad8e3ca71a
      size: 66056
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/ddos/plots//precomputed/knn.csv
      hash: md5
      md5: b8396030b49ebd3da0a63aa9209223fc
      size: 54508
  clean@ddos-svc-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/ddos/reports/precomputed/svc.csv
      -o output/ddos/plots//precomputed/svc.csv -c conf/clean.yaml
    deps:
    - path: output/ddos/reports/precomputed/svc.csv
      hash: md5
      md5: eb715254f89d6f53687a4b184213fbed
      size: 34459
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/ddos/plots//precomputed/svc.csv
      hash: md5
      md5: 6f7d2a90a18d4859d6dc0cb3a477b424
      size: 28573
  clean@ddos-logistic-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/ddos/reports/precomputed/logistic.csv
      -o output/ddos/plots//precomputed/logistic.csv -c conf/clean.yaml
    deps:
    - path: output/ddos/reports/precomputed/logistic.csv
      hash: md5
      md5: 7b2b5010db17290f0f1c5844d0383694
      size: 35125
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/ddos/plots//precomputed/logistic.csv
      hash: md5
      md5: 14d8ee94ac4463853976afff17b941c8
      size: 29432
  clean@truthseeker-knn-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/truthseeker/reports/precomputed/knn.csv
      -o output/truthseeker/plots//precomputed/knn.csv -c conf/clean.yaml
    deps:
    - path: output/truthseeker/reports/precomputed/knn.csv
      hash: md5
      md5: 380af81832a5f96018cfe06ac45fe03a
      size: 66978
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/truthseeker/plots//precomputed/knn.csv
      hash: md5
      md5: 3b5e62e97bdc45897956a49ae8e75483
      size: 55087
  clean@truthseeker-svc-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/truthseeker/reports/precomputed/svc.csv
      -o output/truthseeker/plots//precomputed/svc.csv -c conf/clean.yaml
    deps:
    - path: output/truthseeker/reports/precomputed/svc.csv
      hash: md5
      md5: d9b9aaff2595f88174c024191bca43a9
      size: 34863
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/truthseeker/plots//precomputed/svc.csv
      hash: md5
      md5: 99c3ce100a4c57d6b30f46a320c3775f
      size: 28833
  clean@truthseeker-logistic-precomputed:
    cmd: python -m deckard.layers.clean_data  -i output/truthseeker/reports/precomputed/logistic.csv
      -o output/truthseeker/plots//precomputed/logistic.csv -c conf/clean.yaml
    deps:
    - path: output/truthseeker/reports/precomputed/logistic.csv
      hash: md5
      md5: 74721a61c654a7833e3616d3f916f925
      size: 35495
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.condensing_method: Control
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
          model.init.transform: D
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
            brotli: Brotli
          model_name:
            GzipSVC: NCD-SVC
            GzipLogisticRegressor: NCD-Logistic
            GzipKNN: NCD-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.transform:
            abs: $|D|$
            square: $D^2$
            exp_neg_gamma_001: $e^{-D/.001}$
            exp_neg_gamma_01: $e^{-D/.01}$
            exp_neg_gamma_1: $e^{-D/.1}$
            exp_neg_gamma1000: $e^{-D/1000}$
            exp_neg_gamma100: $e^{-D/100}$
            exp_neg_gamma10: $e^{-D/10}$
            exp_neg: $e^{-D}$
            avg_with_transpose: (D + D^T)/2
            linear_kernel: D * D^T
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: output/truthseeker/plots//precomputed/logistic.csv
      hash: md5
      md5: b664fca0c09420894fadbcd4dbabcf72
      size: 29675
