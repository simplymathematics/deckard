schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train
    deps:
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/default/predictions.json
      hash: md5
      md5: b2f54b5bf191b2ff88dee36692dea434
      size: 702
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
  test_each_method@knn-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=knn  model.init.m=10  files.name=knn
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn hydra.run.dir=kdd_nsl/logs/method/knn
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f8a4019adc566855c2a704a0311ff7c4
      size: 489
    - path: params.yaml
      hash: md5
      md5: f6a5538a55c3c37d8a2d6d1d4eb95ec2
      size: 1467
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/method/knn
      hash: md5
      md5: f902bdd8882aa06bba0d1fef19c4a313.dir
      size: 11613
      nfiles: 4
    - path: kdd_nsl/reports/train/knn/score_dict.json
      hash: md5
      md5: 4e7f0750779df5202e5dec6228f94f99
      size: 490
  test_each_method@knn-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=knn  model.init.m=10  files.name=knn
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      hydra.run.dir=truthseeker/logs/method/knn ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f8a4019adc566855c2a704a0311ff7c4
      size: 489
    - path: params.yaml
      hash: md5
      md5: f6a5538a55c3c37d8a2d6d1d4eb95ec2
      size: 1467
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/knn
      hash: md5
      md5: 5a52da2681ff444c53a1623722c2d431.dir
      size: 11642
      nfiles: 4
    - path: truthseeker/reports/train/knn/score_dict.json
      hash: md5
      md5: f09f746efa5c7a56f4dd1a3e20a7ab6b
      size: 485
  test_each_method@svc-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=svc  model.init.m=10  files.name=svc
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn hydra.run.dir=kdd_nsl/logs/method/svc
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f8a4019adc566855c2a704a0311ff7c4
      size: 489
    - path: params.yaml
      hash: md5
      md5: f6a5538a55c3c37d8a2d6d1d4eb95ec2
      size: 1467
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/method/svc
      hash: md5
      md5: 433b30d37ba64e71527ac2d837b44fa2.dir
      size: 11612
      nfiles: 4
    - path: kdd_nsl/reports/train/svc/score_dict.json
      hash: md5
      md5: f41538adb6ffa9182ea126c85c353abf
      size: 489
  test_each_method@svc-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=svc  model.init.m=10  files.name=svc
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      hydra.run.dir=truthseeker/logs/method/svc ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f8a4019adc566855c2a704a0311ff7c4
      size: 489
    - path: params.yaml
      hash: md5
      md5: f6a5538a55c3c37d8a2d6d1d4eb95ec2
      size: 1467
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/svc
      hash: md5
      md5: bc37655235ef0d2919a62c85456d379c.dir
      size: 11645
      nfiles: 4
    - path: truthseeker/reports/train/svc/score_dict.json
      hash: md5
      md5: 97f1fed3ee2887773ca9a50eeeb5b1ed
      size: 488
  test_each_method@medoid-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=medoid  model.init.m=10  files.name=medoid
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn hydra.run.dir=kdd_nsl/logs/method/medoid
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f8a4019adc566855c2a704a0311ff7c4
      size: 489
    - path: params.yaml
      hash: md5
      md5: f6a5538a55c3c37d8a2d6d1d4eb95ec2
      size: 1467
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/method/medoid
      hash: md5
      md5: 5b972c1f6a8c4ebff94a088e2be12b28.dir
      size: 11661
      nfiles: 4
    - path: kdd_nsl/reports/train/medoid/score_dict.json
      hash: md5
      md5: 10a0913632dea0d6717263ba1854b1e2
      size: 484
  test_each_method@medoid-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=medoid  model.init.m=10  files.name=medoid
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=medoid
      hydra.run.dir=truthseeker/logs/method/medoid ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/medoid
      hash: md5
      md5: 7b6fef8487e5b8dec0f76f4b4fc59ccb.dir
      size: 10226
      nfiles: 4
    - path: truthseeker/reports/train/medoid/score_dict.json
      hash: md5
      md5: 8cebb3ee0098d2ee2bb4130e346e8e0f
      size: 282
  test_each_method@sum-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=sum  model.init.m=10  files.name=sum
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn hydra.run.dir=kdd_nsl/logs/method/sum
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f8a4019adc566855c2a704a0311ff7c4
      size: 489
    - path: params.yaml
      hash: md5
      md5: f6a5538a55c3c37d8a2d6d1d4eb95ec2
      size: 1467
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/method/sum
      hash: md5
      md5: 41cd7632a1d85e7380d14b0e8eccc819.dir
      size: 11607
      nfiles: 4
    - path: kdd_nsl/reports/train/sum/score_dict.json
      hash: md5
      md5: 2a97e468ea2e9071e1f7d5bdb1e7495b
      size: 484
  test_each_method@sum-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=sum  model.init.m=10  files.name=sum
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=sum
      hydra.run.dir=truthseeker/logs/method/sum ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/sum
      hash: md5
      md5: e7f9741f777d98f3d3416264b9f3e6b2.dir
      size: 10164
      nfiles: 4
    - path: truthseeker/reports/train/sum/score_dict.json
      hash: md5
      md5: d49a3cbdeb348bbf9ad3b59e9e8e0e32
      size: 283
  test_each_method@random-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=random  model.init.m=10  files.name=random
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn hydra.run.dir=kdd_nsl/logs/method/random
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f8a4019adc566855c2a704a0311ff7c4
      size: 489
    - path: params.yaml
      hash: md5
      md5: f6a5538a55c3c37d8a2d6d1d4eb95ec2
      size: 1467
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/method/random
      hash: md5
      md5: 723e8c93428a09edb21943a20fca5c3c.dir
      size: 11639
      nfiles: 4
    - path: kdd_nsl/reports/train/random/score_dict.json
      hash: md5
      md5: ed402e68904e8888b8ba6b0bebf6fa05
      size: 488
  test_each_method@random-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=random  model.init.m=10  files.name=random
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      hydra.run.dir=truthseeker/logs/method/random ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f8a4019adc566855c2a704a0311ff7c4
      size: 489
    - path: params.yaml
      hash: md5
      md5: f6a5538a55c3c37d8a2d6d1d4eb95ec2
      size: 1467
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/random
      hash: md5
      md5: f785fe50b4007a169c37e6e9cb856268.dir
      size: 11670
      nfiles: 4
    - path: truthseeker/reports/train/random/score_dict.json
      hash: md5
      md5: 8bfb4b2efa55e9944cec7331401762f9
      size: 485
  prepare_distance_matrices@0-10-kdd_nsl:
    cmd: python -m deckard.layers.optimise  files.name=0-10 stage=train  data=kdd_nsl
      dataset=kdd_nsl data.sample.random_state=0 data.sample.train_size=10 dataset=kdd_nsl
      files.directory=kdd_nsl model_name=gzip_classifier model=gzip_classifier model.init.distance_matrix=kdd_nsl/model/gzip_classifier/gzip/0-10.npz
      model.init.method=random  model.init.m=100 ++raise_exception=True
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 3332d80113acf55f8e69e46aea82a1cc
      size: 412
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix: kdd_nsl/model/gzip_classifier/gzip/0-100.npz
            k: 1
            m: -1
            method:
            name: gzip_classifier.GzipClassifier
          library: sklearn
        model_name: gzip_classifier
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/model/gzip_classifier/gzip/0-10.npz
      hash: md5
      md5: 1b745ff8dbc88f247f3245d9efd6de7e
      size: 208
    - path: kdd_nsl/reports/train/0-10/score_dict.json
      hash: md5
      md5: cae521db2dcda14d0d3ed880c26adf62
      size: 233
  prepare_distance_matrices@0-100-kdd_nsl:
    cmd: python -m deckard.layers.optimise  files.name=0-100 stage=train  data=kdd_nsl
      dataset=kdd_nsl data.sample.random_state=0 data.sample.train_size=100 dataset=kdd_nsl
      files.directory=kdd_nsl model_name=gzip_classifier model=gzip_classifier model.init.distance_matrix=kdd_nsl/model/gzip_classifier/gzip/0-100.npz
      model.init.method=random  model.init.m=100 ++raise_exception=True
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 222b4b55b1b16639ce30218bf60c1f32
      size: 412
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
  data:
    cmd: python data_prep.py
    deps:
    - path: data_prep.py
      hash: md5
      md5: ed6ce38e7b430ac26af8b13b6fc3d3e0
      size: 5231
    outs:
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
  test_symmetric_methods@true-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.method=random
      model.init.m=10  files.name=symmetric_true files.directory=kdd_nsl data=kdd_nsl
      dataset=kdd_nsl model_name=gzip_knn model.init.symmetric=true hydra.run.dir=kdd_nsl/logs/symmetric/true
      model.init.distance_matrix=kdd_nsl/model/gzip_knn/None/symmetric_true.npz ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    - path: raw_data/
      hash: md5
      md5: d897229dd67895957a0a4330ce95b09a.dir
      size: 42279674
      nfiles: 4
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/model/gzip_knn/None/symmetric_true.npz
      hash: md5
      md5: 1b745ff8dbc88f247f3245d9efd6de7e
      size: 208
    - path: kdd_nsl/reports/train/symmetric_true/score_dict.json
      hash: md5
      md5: bb10a010ac3f8790cdbe4310288efc63
      size: 432
  test_symmetric_methods@true-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.method=random
      model.init.m=10  files.name=symmetric_true files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=gzip_knn model.init.symmetric=true hydra.run.dir=truthseeker/logs/symmetric/true
      model.init.distance_matrix=truthseeker/model/gzip_knn/None/symmetric_true.npz
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    - path: raw_data/
      hash: md5
      md5: d897229dd67895957a0a4330ce95b09a.dir
      size: 42279674
      nfiles: 4
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/model/gzip_knn/None/symmetric_true.npz
      hash: md5
      md5: f71a2727e708fdfb7867a6983f3aa8cf
      size: 223
    - path: truthseeker/reports/train/symmetric_true/score_dict.json
      hash: md5
      md5: 6d7a4eb01733e4e2fda1c40b5562646c
      size: 434
  test_symmetric_methods@true-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.method=random
      model.init.m=10  files.name=symmetric_true files.directory=sms_spam data=sms_spam
      dataset=sms_spam model_name=gzip_knn model.init.symmetric=true hydra.run.dir=sms_spam/logs/symmetric/true
      model.init.distance_matrix=sms_spam/model/gzip_knn/None/symmetric_true.npz ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    - path: raw_data/
      hash: md5
      md5: d897229dd67895957a0a4330ce95b09a.dir
      size: 42279674
      nfiles: 4
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/model/gzip_knn/None/symmetric_true.npz
      hash: md5
      md5: 1b745ff8dbc88f247f3245d9efd6de7e
      size: 208
    - path: sms_spam/reports/train/symmetric_true/score_dict.json
      hash: md5
      md5: 0b8d690ffca7173942d490a2f0cbeec4
      size: 432
  test_symmetric_methods@true-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.method=random
      model.init.m=10  files.name=symmetric_true files.directory=ddos data=ddos dataset=ddos
      model_name=gzip_knn model.init.symmetric=true hydra.run.dir=ddos/logs/symmetric/true
      model.init.distance_matrix=ddos/model/gzip_knn/None/symmetric_true.npz ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    - path: raw_data/
      hash: md5
      md5: d897229dd67895957a0a4330ce95b09a.dir
      size: 42279674
      nfiles: 4
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/model/gzip_knn/None/symmetric_true.npz
      hash: md5
      md5: 1b745ff8dbc88f247f3245d9efd6de7e
      size: 208
    - path: ddos/reports/train/symmetric_true/score_dict.json
      hash: md5
      md5: 2c12176f8bf7355f284e059b2527cf44
      size: 418
  test_symmetric_methods@false-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.method=random
      model.init.m=10  files.name=symmetric_false files.directory=kdd_nsl data=kdd_nsl
      dataset=kdd_nsl model_name=gzip_knn model.init.symmetric=false hydra.run.dir=kdd_nsl/logs/symmetric/false
      model.init.distance_matrix=kdd_nsl/model/gzip_knn/None/symmetric_false.npz ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    - path: raw_data/
      hash: md5
      md5: d897229dd67895957a0a4330ce95b09a.dir
      size: 42279674
      nfiles: 4
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/model/gzip_knn/None/symmetric_false.npz
      hash: md5
      md5: 9a9fcf9ba5dbc34eb2ca1f203088fc47
      size: 740
    - path: kdd_nsl/reports/train/symmetric_false/score_dict.json
      hash: md5
      md5: 8ae56e642565330a37e731472a6c2d76
      size: 429
  test_symmetric_methods@false-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.method=random
      model.init.m=10  files.name=symmetric_false files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=gzip_knn model.init.symmetric=false hydra.run.dir=truthseeker/logs/symmetric/false
      model.init.distance_matrix=truthseeker/model/gzip_knn/None/symmetric_false.npz
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    - path: raw_data/
      hash: md5
      md5: d897229dd67895957a0a4330ce95b09a.dir
      size: 42279674
      nfiles: 4
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/model/gzip_knn/None/symmetric_false.npz
      hash: md5
      md5: b02cc76ddfb10d1e0e63e0f6e05cdaae
      size: 1791
    - path: truthseeker/reports/train/symmetric_false/score_dict.json
      hash: md5
      md5: 4ef36cb0b198d778dc8e0e6ff282d778
      size: 433
  test_symmetric_methods@false-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.method=random
      model.init.m=10  files.name=symmetric_false files.directory=sms_spam data=sms_spam
      dataset=sms_spam model_name=gzip_knn model.init.symmetric=false hydra.run.dir=sms_spam/logs/symmetric/false
      model.init.distance_matrix=sms_spam/model/gzip_knn/None/symmetric_false.npz
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    - path: raw_data/
      hash: md5
      md5: d897229dd67895957a0a4330ce95b09a.dir
      size: 42279674
      nfiles: 4
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/model/gzip_knn/None/symmetric_false.npz
      hash: md5
      md5: ac71e5af3607731b783a490caf81c37f
      size: 694
    - path: sms_spam/reports/train/symmetric_false/score_dict.json
      hash: md5
      md5: 66d92f0ed630b08fbddb1a9c07f13981
      size: 432
  test_symmetric_methods@false-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.method=random
      model.init.m=10  files.name=symmetric_false files.directory=ddos data=ddos dataset=ddos
      model_name=gzip_knn model.init.symmetric=false hydra.run.dir=ddos/logs/symmetric/false
      model.init.distance_matrix=ddos/model/gzip_knn/None/symmetric_false.npz ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    - path: raw_data/
      hash: md5
      md5: d897229dd67895957a0a4330ce95b09a.dir
      size: 42279674
      nfiles: 4
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/model/gzip_knn/None/symmetric_false.npz
      hash: md5
      md5: 0d3f08d9c6cb8ddc6d3e68f8208c9bc5
      size: 821
    - path: ddos/reports/train/symmetric_false/score_dict.json
      hash: md5
      md5: ba81be29d56943d6d573597c93ba8081
      size: 412
  test_each_compressor@gzip-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=gzip files.directory=kdd_nsl
      data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.method=random model.init.distance_matrix=kdd_nsl/model/gzip_knn/None/gzip.npz
      model.init.compressor=gzip  model.init.m=10 hydra.run.dir=kdd_nsl/logs/compressor/gzip
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/gzip/score_dict.json
      hash: md5
      md5: b3f76b5e7fe68821d9336c4968888b08
      size: 431
  test_each_compressor@gzip-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=gzip files.directory=truthseeker
      data=truthseeker dataset=truthseeker model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=truthseeker/model/gzip_knn/None/gzip.npz model.init.compressor=gzip  model.init.m=10
      hydra.run.dir=truthseeker/logs/compressor/gzip ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/gzip/score_dict.json
      hash: md5
      md5: df9b8a302dfb3b85b5c3c7623d86383e
      size: 434
  test_each_compressor@gzip-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=gzip files.directory=sms_spam
      data=sms_spam dataset=sms_spam model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=sms_spam/model/gzip_knn/None/gzip.npz model.init.compressor=gzip  model.init.m=10
      hydra.run.dir=sms_spam/logs/compressor/gzip ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/gzip/score_dict.json
      hash: md5
      md5: 39a6710366ed557259ef981fc0b45a6a
      size: 432
  test_each_compressor@gzip-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=gzip files.directory=ddos
      data=ddos dataset=ddos model_name=gzip_knn model.init.method=random model.init.distance_matrix=ddos/model/gzip_knn/None/gzip.npz
      model.init.compressor=gzip  model.init.m=10 hydra.run.dir=ddos/logs/compressor/gzip
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/gzip/score_dict.json
      hash: md5
      md5: 1919cb29d6196b8dd14c01458e341a6b
      size: 414
  test_each_compressor@zstd-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=zstd files.directory=kdd_nsl
      data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.method=random model.init.distance_matrix=kdd_nsl/model/gzip_knn/None/zstd.npz
      model.init.compressor=zstd  model.init.m=10 hydra.run.dir=kdd_nsl/logs/compressor/zstd
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/zstd/score_dict.json
      hash: md5
      md5: 868509c201cbb0093818357427896da7
      size: 416
  test_each_compressor@zstd-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=zstd files.directory=truthseeker
      data=truthseeker dataset=truthseeker model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=truthseeker/model/gzip_knn/None/zstd.npz model.init.compressor=zstd  model.init.m=10
      hydra.run.dir=truthseeker/logs/compressor/zstd ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/zstd/score_dict.json
      hash: md5
      md5: 89546ca3a3510fd73671341863c69cb9
      size: 434
  test_each_compressor@zstd-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=zstd files.directory=sms_spam
      data=sms_spam dataset=sms_spam model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=sms_spam/model/gzip_knn/None/zstd.npz model.init.compressor=zstd  model.init.m=10
      hydra.run.dir=sms_spam/logs/compressor/zstd ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/zstd/score_dict.json
      hash: md5
      md5: e5a10b0013b032b22dd6cc596a7810bb
      size: 429
  test_each_compressor@zstd-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=zstd files.directory=ddos
      data=ddos dataset=ddos model_name=gzip_knn model.init.method=random model.init.distance_matrix=ddos/model/gzip_knn/None/zstd.npz
      model.init.compressor=zstd  model.init.m=10 hydra.run.dir=ddos/logs/compressor/zstd
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/zstd/score_dict.json
      hash: md5
      md5: 898feb287504053c9de9c1a809733c4b
      size: 432
  test_each_compressor@pkl-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=pkl files.directory=kdd_nsl
      data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.method=random model.init.distance_matrix=kdd_nsl/model/gzip_knn/None/pkl.npz
      model.init.compressor=pkl  model.init.m=10 hydra.run.dir=kdd_nsl/logs/compressor/pkl
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/pkl/score_dict.json
      hash: md5
      md5: 3e01c227095014ab9f4665ea98e7f3b5
      size: 430
  test_each_compressor@pkl-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=pkl files.directory=truthseeker
      data=truthseeker dataset=truthseeker model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=truthseeker/model/gzip_knn/None/pkl.npz model.init.compressor=pkl  model.init.m=10
      hydra.run.dir=truthseeker/logs/compressor/pkl ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/pkl/score_dict.json
      hash: md5
      md5: 85d4598fcbe6077a465a9edeadd3843a
      size: 430
  test_each_compressor@pkl-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=pkl files.directory=sms_spam
      data=sms_spam dataset=sms_spam model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=sms_spam/model/gzip_knn/None/pkl.npz model.init.compressor=pkl  model.init.m=10
      hydra.run.dir=sms_spam/logs/compressor/pkl ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/pkl/score_dict.json
      hash: md5
      md5: a4667414e7721ee7ed489df1e412e0b0
      size: 431
  test_each_compressor@pkl-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=pkl files.directory=ddos
      data=ddos dataset=ddos model_name=gzip_knn model.init.method=random model.init.distance_matrix=ddos/model/gzip_knn/None/pkl.npz
      model.init.compressor=pkl  model.init.m=10 hydra.run.dir=ddos/logs/compressor/pkl
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/pkl/score_dict.json
      hash: md5
      md5: 340261dd836239b846699c4c687b3042
      size: 432
  test_each_compressor@bz2-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=bz2 files.directory=kdd_nsl
      data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.method=random model.init.distance_matrix=kdd_nsl/model/gzip_knn/None/bz2.npz
      model.init.compressor=bz2  model.init.m=10 hydra.run.dir=kdd_nsl/logs/compressor/bz2
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/bz2/score_dict.json
      hash: md5
      md5: 05fd4b45d252c648d4afb4ba3ffc05e4
      size: 430
  test_each_compressor@bz2-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=bz2 files.directory=truthseeker
      data=truthseeker dataset=truthseeker model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=truthseeker/model/gzip_knn/None/bz2.npz model.init.compressor=bz2  model.init.m=10
      hydra.run.dir=truthseeker/logs/compressor/bz2 ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/bz2/score_dict.json
      hash: md5
      md5: 1b3094ea4075cb1b5b8cd3f74bf0c3dc
      size: 432
  test_each_compressor@bz2-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=bz2 files.directory=sms_spam
      data=sms_spam dataset=sms_spam model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=sms_spam/model/gzip_knn/None/bz2.npz model.init.compressor=bz2  model.init.m=10
      hydra.run.dir=sms_spam/logs/compressor/bz2 ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/bz2/score_dict.json
      hash: md5
      md5: 45303b7d052fb91e65c9f3ad97999b6a
      size: 431
  test_each_compressor@bz2-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=bz2 files.directory=ddos
      data=ddos dataset=ddos model_name=gzip_knn model.init.method=random model.init.distance_matrix=ddos/model/gzip_knn/None/bz2.npz
      model.init.compressor=bz2  model.init.m=10 hydra.run.dir=ddos/logs/compressor/bz2
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/bz2/score_dict.json
      hash: md5
      md5: fdfa470b2053f561dea2e047423b54cd
      size: 431
  test_each_precompute@True-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=precompute_True
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=kdd_nsl/model/gzip_knn/None/True.npz +model.init.precompute=True  model.init.m=10  hydra.run.dir=kdd_nsl/logs/precompute/True
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/precompute_True/score_dict.json
      hash: md5
      md5: f5c9a9ce41a0680f1e18874d6f21bd25
      size: 433
  test_each_precompute@True-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=precompute_True
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model.init.method=random model.init.distance_matrix=truthseeker/model/gzip_knn/None/True.npz
      +model.init.precompute=True  model.init.m=10  hydra.run.dir=truthseeker/logs/precompute/True
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/precompute_True/score_dict.json
      hash: md5
      md5: 76dcdbf7dc1fb63ce7b978c2f6bef8a2
      size: 435
  test_each_precompute@True-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=precompute_True
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model.init.method=random model.init.distance_matrix=sms_spam/model/gzip_knn/None/True.npz
      +model.init.precompute=True  model.init.m=10  hydra.run.dir=sms_spam/logs/precompute/True
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/precompute_True/score_dict.json
      hash: md5
      md5: fe9a23520513840fe4a90fb8413e62da
      size: 432
  test_each_precompute@True-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=precompute_True
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=ddos/model/gzip_knn/None/True.npz +model.init.precompute=True  model.init.m=10  hydra.run.dir=ddos/logs/precompute/True
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/precompute_True/score_dict.json
      hash: md5
      md5: 0d72c99dc99df13629a383ca9745712e
      size: 429
  test_each_precompute@False-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=precompute_False
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=kdd_nsl/model/gzip_knn/None/False.npz +model.init.precompute=False  model.init.m=10  hydra.run.dir=kdd_nsl/logs/precompute/False
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/precompute_False/score_dict.json
      hash: md5
      md5: d225ea006c02f56f552431e223ef6576
      size: 429
  test_each_precompute@False-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=precompute_False
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model.init.method=random model.init.distance_matrix=truthseeker/model/gzip_knn/None/False.npz
      +model.init.precompute=False  model.init.m=10  hydra.run.dir=truthseeker/logs/precompute/False
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/precompute_False/score_dict.json
      hash: md5
      md5: e8094fb43b55432d298346a0a291ac71
      size: 431
  test_each_precompute@False-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=precompute_False
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model.init.method=random model.init.distance_matrix=sms_spam/model/gzip_knn/None/False.npz
      +model.init.precompute=False  model.init.m=10  hydra.run.dir=sms_spam/logs/precompute/False
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/precompute_False/score_dict.json
      hash: md5
      md5: 0f3b13aba3cc817f2327769f36b54939
      size: 432
  test_each_precompute@False-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  files.name=precompute_False
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_knn model.init.method=random
      model.init.distance_matrix=ddos/model/gzip_knn/None/False.npz +model.init.precompute=False  model.init.m=10  hydra.run.dir=ddos/logs/precompute/False
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/precompute_False/score_dict.json
      hash: md5
      md5: 9cc47f921a908ad81e486980d134f453
      size: 418
  test_each_metric@levenshtein-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=levenshtein  files.name=levenshtein
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.distance_matrix=kdd_nsl/model/gzip_knn/ncd/levenshtein.npz
      hydra.sweeper.n_jobs=1 hydra.run.dir=kdd_nsl/logs/metric/levenshtein ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/levenshtein/score_dict.json
      hash: md5
      md5: 4f517489b794c13bbbbb477bd7b14ea8
      size: 248
  test_each_metric@levenshtein-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=levenshtein  files.name=levenshtein
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model.init.distance_matrix=truthseeker/model/gzip_knn/ncd/levenshtein.npz hydra.sweeper.n_jobs=1
      hydra.run.dir=truthseeker/logs/metric/levenshtein ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/levenshtein/score_dict.json
      hash: md5
      md5: 2f0fa43167cde43c2d8c901ee6bc360d
      size: 250
  test_each_metric@levenshtein-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=levenshtein  files.name=levenshtein
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model.init.distance_matrix=sms_spam/model/gzip_knn/ncd/levenshtein.npz hydra.sweeper.n_jobs=1
      hydra.run.dir=sms_spam/logs/metric/levenshtein ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/levenshtein/score_dict.json
      hash: md5
      md5: bb8456e5a2457e841619d5750922bd0c
      size: 246
  test_each_metric@levenshtein-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=levenshtein  files.name=levenshtein
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_knn model.init.distance_matrix=ddos/model/gzip_knn/ncd/levenshtein.npz
      hydra.sweeper.n_jobs=1 hydra.run.dir=ddos/logs/metric/levenshtein ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/levenshtein/score_dict.json
      hash: md5
      md5: 1956a0651292bf6919a103e46c0c5906
      size: 248
  test_each_metric@ratio-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=ratio  files.name=ratio
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.distance_matrix=kdd_nsl/model/gzip_knn/ncd/ratio.npz
      hydra.sweeper.n_jobs=1 hydra.run.dir=kdd_nsl/logs/metric/ratio ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/ratio/score_dict.json
      hash: md5
      md5: 841058c500666af10a3a84fd7769e53d
      size: 244
  test_each_metric@ratio-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=ratio  files.name=ratio
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model.init.distance_matrix=truthseeker/model/gzip_knn/ncd/ratio.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=truthseeker/logs/metric/ratio ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/ratio/score_dict.json
      hash: md5
      md5: 5cbc24c928a073a9459428d4e1984ba1
      size: 426
  test_each_metric@ratio-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=ratio  files.name=ratio
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model.init.distance_matrix=sms_spam/model/gzip_knn/ncd/ratio.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=sms_spam/logs/metric/ratio ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/ratio/score_dict.json
      hash: md5
      md5: b8ea7bf8de9af2250f1a2c84695be1f9
      size: 425
  test_each_metric@ratio-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=ratio  files.name=ratio
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_knn model.init.distance_matrix=ddos/model/gzip_knn/ncd/ratio.npz
      hydra.sweeper.n_jobs=8 hydra.run.dir=ddos/logs/metric/ratio ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/ratio/score_dict.json
      hash: md5
      md5: 5f9750a5729db8f4912f50a8610fc48c
      size: 429
  test_each_metric@hamming-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=hamming  files.name=hamming
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.distance_matrix=kdd_nsl/model/gzip_knn/ncd/hamming.npz
      hydra.sweeper.n_jobs=8 hydra.run.dir=kdd_nsl/logs/metric/hamming ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/hamming/score_dict.json
      hash: md5
      md5: ed699605a76c4116a461994f139da237
      size: 429
  test_each_metric@hamming-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=hamming  files.name=hamming
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model.init.distance_matrix=truthseeker/model/gzip_knn/ncd/hamming.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=truthseeker/logs/metric/hamming ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/hamming/score_dict.json
      hash: md5
      md5: 8a3f87734f208a61bc27114729fd4fd6
      size: 432
  test_each_metric@hamming-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=hamming  files.name=hamming
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model.init.distance_matrix=sms_spam/model/gzip_knn/ncd/hamming.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=sms_spam/logs/metric/hamming ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/hamming/score_dict.json
      hash: md5
      md5: 0c0988090568dc526d0137ff7e38ca6a
      size: 428
  test_each_metric@hamming-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=hamming  files.name=hamming
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_knn model.init.distance_matrix=ddos/model/gzip_knn/ncd/hamming.npz
      hydra.sweeper.n_jobs=8 hydra.run.dir=ddos/logs/metric/hamming ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/hamming/score_dict.json
      hash: md5
      md5: 949f7ea27f2521fbbb2b05ec3a111346
      size: 428
  test_each_metric@jaro-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=jaro  files.name=jaro
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.distance_matrix=kdd_nsl/model/gzip_knn/ncd/jaro.npz
      hydra.sweeper.n_jobs=8 hydra.run.dir=kdd_nsl/logs/metric/jaro ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/jaro/score_dict.json
      hash: md5
      md5: 3bd4e5c89097070d439c3f13359ff369
      size: 428
  test_each_metric@jaro-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=jaro  files.name=jaro
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model.init.distance_matrix=truthseeker/model/gzip_knn/ncd/jaro.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=truthseeker/logs/metric/jaro ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/jaro/score_dict.json
      hash: md5
      md5: b86d70f18ea7ee85132f4d8407058d60
      size: 429
  test_each_metric@jaro-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=jaro  files.name=jaro
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model.init.distance_matrix=sms_spam/model/gzip_knn/ncd/jaro.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=sms_spam/logs/metric/jaro ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/jaro/score_dict.json
      hash: md5
      md5: b7550248d10852d10a16610f707ea50f
      size: 429
  test_each_metric@jaro-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=jaro  files.name=jaro
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_knn model.init.distance_matrix=ddos/model/gzip_knn/ncd/jaro.npz
      hydra.sweeper.n_jobs=8 hydra.run.dir=ddos/logs/metric/jaro ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/jaro/score_dict.json
      hash: md5
      md5: e7987cb2d248f7eaa20a842bbcacc442
      size: 430
  test_each_metric@jaro_winkler-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=jaro_winkler  files.name=jaro_winkler
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.distance_matrix=kdd_nsl/model/gzip_knn/ncd/jaro_winkler.npz
      hydra.sweeper.n_jobs=8 hydra.run.dir=kdd_nsl/logs/metric/jaro_winkler ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/jaro_winkler/score_dict.json
      hash: md5
      md5: a44e09663d05f8330352712ccfd72f17
      size: 428
  test_each_metric@jaro_winkler-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=jaro_winkler  files.name=jaro_winkler
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model.init.distance_matrix=truthseeker/model/gzip_knn/ncd/jaro_winkler.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=truthseeker/logs/metric/jaro_winkler ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/jaro_winkler/score_dict.json
      hash: md5
      md5: 2a80298804f36bc7af477e11ff9f6679
      size: 428
  test_each_metric@jaro_winkler-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=jaro_winkler  files.name=jaro_winkler
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model.init.distance_matrix=sms_spam/model/gzip_knn/ncd/jaro_winkler.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=sms_spam/logs/metric/jaro_winkler ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/reports/train/jaro_winkler/score_dict.json
      hash: md5
      md5: 8b7d0f92e14d74042fb8cd907e3a8274
      size: 430
  test_each_metric@jaro_winkler-ddos:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=jaro_winkler  files.name=jaro_winkler
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_knn model.init.distance_matrix=ddos/model/gzip_knn/ncd/jaro_winkler.npz
      hydra.sweeper.n_jobs=8 hydra.run.dir=ddos/logs/metric/jaro_winkler ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/reports/train/jaro_winkler/score_dict.json
      hash: md5
      md5: aa4130c79130ddbaaebaa35a1cae7d91
      size: 426
  test_each_metric@seqratio-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=seqratio  files.name=seqratio
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model.init.distance_matrix=kdd_nsl/model/gzip_knn/ncd/seqratio.npz
      hydra.sweeper.n_jobs=8 hydra.run.dir=kdd_nsl/logs/metric/seqratio ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/reports/train/seqratio/score_dict.json
      hash: md5
      md5: 9075115a02136aaa59bd87074589ce42
      size: 430
  test_each_metric@seqratio-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=seqratio  files.name=seqratio
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model.init.distance_matrix=truthseeker/model/gzip_knn/ncd/seqratio.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=truthseeker/logs/metric/seqratio ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/reports/train/seqratio/score_dict.json
      hash: md5
      md5: ac2bdff9261ce4c9e511294dd69b19f8
      size: 434
  test_each_metric@seqratio-sms_spam:
    cmd: 'python -m deckard.layers.optimise  stage=train  model.init.metric=seqratio  files.name=seqratio
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model.init.distance_matrix=sms_spam/model/gzip_knn/ncd/seqratio.npz hydra.sweeper.n_jobs=8
      hydra.run.dir=sms_spam/logs/metric/seqratio ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 14173762472fe294a1d3228b4ee83d4b
      size: 431
    - path: params.yaml
      hash: md5
      md5: 4999b48c21cb63a45801003d03576594
      size: 2082
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 10
            train_size: 10
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
              nb_classes: 2
            library: sklearn
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 10
              train_size: 10
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            compressor: gzip
            distance_matrix:
            k: 1
            m: -1
            method:
            metric: ncd
  test_each_method@ddos-random:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=random  model.init.m=3
      data.sample.train_size=100 files.name=random files.directory=ddos data=ddos
      dataset=ddos model_name=random hydra.run.dir=ddos/logs/method/random ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/method/random
      hash: md5
      md5: ff1f493467b5b0da0f051bdfe25aef26.dir
      size: 10123
      nfiles: 4
    - path: ddos/reports/train/random/score_dict.json
      hash: md5
      md5: 58b82877334dd0b19c2f740051caf1db
      size: 281
  test_each_method@ddos-medoid:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=medoid  model.init.m=3
      data.sample.train_size=100 files.name=medoid files.directory=ddos data=ddos
      dataset=ddos model_name=medoid hydra.run.dir=ddos/logs/method/medoid ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/method/medoid
      hash: md5
      md5: e800aed4b1d76e681e1dbbaa7632e58b.dir
      size: 10148
      nfiles: 4
    - path: ddos/reports/train/medoid/score_dict.json
      hash: md5
      md5: 08d75ef95bf68d7de6728692a3eb9575
      size: 280
  test_each_method@ddos-sum:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=sum  model.init.m=3
      data.sample.train_size=100 files.name=sum files.directory=ddos data=ddos dataset=ddos
      model_name=sum hydra.run.dir=ddos/logs/method/sum ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/method/sum
      hash: md5
      md5: 4259e1d6f109364c575f92ba587fe585.dir
      size: 10086
      nfiles: 4
    - path: ddos/reports/train/sum/score_dict.json
      hash: md5
      md5: a59703025d62ec2faf74ba8983c1f7a0
      size: 281
  test_each_method@ddos-svc:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=svc  model.init.m=3
      data.sample.train_size=100 files.name=svc files.directory=ddos data=ddos dataset=ddos
      model_name=svc hydra.run.dir=ddos/logs/method/svc ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/method/svc
      hash: md5
      md5: 6dcd2c18d30a5358eacdab8168c0f1fc.dir
      size: 10088
      nfiles: 4
    - path: ddos/reports/train/svc/score_dict.json
      hash: md5
      md5: 6019d20bf153c5b34efc5dba3afd0ab5
      size: 283
  test_each_method@ddos-condensed:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=condensed  model.init.m=1
      files.name=condensed files.directory=ddos data=ddos dataset=ddos model_name=condensed
      hydra.run.dir=ddos/logs/method/condensed ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/method/condensed
      hash: md5
      md5: 5dfc9ebfe1c6f3e496814c86a05a5329.dir
      size: 10117
      nfiles: 4
    - path: ddos/reports/train/condensed/score_dict.json
      hash: md5
      md5: 56bcddf54558d9cdd1a7587878aceffa
      size: 284
  test_each_method@ddos-hardness:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=hardness  model.init.m=3
      data.sample.train_size=100 files.name=hardness files.directory=ddos data=ddos
      dataset=ddos model_name=hardness hydra.run.dir=ddos/logs/method/hardness ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/method/hardness
      hash: md5
      md5: d1e36ebb9b1dc315843cfc603678d88e.dir
      size: 10192
      nfiles: 4
    - path: ddos/reports/train/hardness/score_dict.json
      hash: md5
      md5: de7065b3ae3f1a89244ad727cd5b8c4b
      size: 282
  test_each_method@ddos-nearmiss:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=nearmiss  model.init.m=3
      data.sample.train_size=100 files.name=nearmiss files.directory=ddos data=ddos
      dataset=ddos model_name=nearmiss hydra.run.dir=ddos/logs/method/nearmiss ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/method/nearmiss
      hash: md5
      md5: e35226f6ef50850a6029a4a5db80d0f3.dir
      size: 10192
      nfiles: 4
    - path: ddos/reports/train/nearmiss/score_dict.json
      hash: md5
      md5: ee49e79c37b930005c0d654ffbde6a78
      size: 282
  test_each_method@truthseeker-svc:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=svc  model.init.m=3
      data.sample.train_size=100 files.name=svc files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=svc hydra.run.dir=truthseeker/logs/method/svc
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/svc
      hash: md5
      md5: 7f9ad95f5b5a7d8ea8a41d09560bca7e.dir
      size: 10252
      nfiles: 4
    - path: truthseeker/reports/train/svc/score_dict.json
      hash: md5
      md5: dca27d752d8d9db2b52a61d9e0d9bebf
      size: 283
  test_each_method@truthseeker-medoid:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=medoid  model.init.m=3
      data.sample.train_size=100 files.name=medoid files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=medoid hydra.run.dir=truthseeker/logs/method/medoid
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/medoid
      hash: md5
      md5: 57b1e2e154ae8653331898992d0d7f7c.dir
      size: 10316
      nfiles: 4
    - path: truthseeker/reports/train/medoid/score_dict.json
      hash: md5
      md5: a728020aeb632257e52cc9b13337870e
      size: 284
  test_each_method@truthseeker-sum:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=sum  model.init.m=3
      data.sample.train_size=100 files.name=sum files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=sum hydra.run.dir=truthseeker/logs/method/sum
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/sum
      hash: md5
      md5: b8934f0660e9e6043e5a7117d2e3d462.dir
      size: 10252
      nfiles: 4
    - path: truthseeker/reports/train/sum/score_dict.json
      hash: md5
      md5: 0a4117f35aab6ec4b41ac526f8715aa2
      size: 283
  test_each_method@truthseeker-random:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=random  model.init.m=3
      data.sample.train_size=100 files.name=random files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=random hydra.run.dir=truthseeker/logs/method/random
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/random
      hash: md5
      md5: a77f4e67f85e529063b18617cda5525a.dir
      size: 10289
      nfiles: 4
    - path: truthseeker/reports/train/random/score_dict.json
      hash: md5
      md5: 08f3cc499d61caaa4ab912af1a2ff558
      size: 283
  test_each_method@truthseeker-nearmiss:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=nearmiss  model.init.m=3
      data.sample.train_size=100 files.name=nearmiss files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=nearmiss hydra.run.dir=truthseeker/logs/method/nearmiss
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/nearmiss
      hash: md5
      md5: 6ea3f0a574d7abd052e3ee5466356e13.dir
      size: 10359
      nfiles: 4
    - path: truthseeker/reports/train/nearmiss/score_dict.json
      hash: md5
      md5: f03918d65cac7f21e210a14be8ee1373
      size: 285
  test_each_method@truthseeker-hardness:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=hardness  model.init.m=3
      data.sample.train_size=100 files.name=hardness files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=hardness hydra.run.dir=truthseeker/logs/method/hardness
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/hardness
      hash: md5
      md5: c5ea09925ae34a0fee42f1ec06d88090.dir
      size: 10355
      nfiles: 4
    - path: truthseeker/reports/train/hardness/score_dict.json
      hash: md5
      md5: 87bdbb0cafd4462b87035af79efc81c5
      size: 281
  test_each_method@truthseeker-knn:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=knn  model.init.m=3
      data.sample.train_size=100 files.name=knn files.directory=truthseeker data=truthseeker
      dataset=truthseeker model_name=knn hydra.run.dir=truthseeker/logs/method/knn
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/method/knn
      hash: md5
      md5: 5c5fe8f17151816b01d863f51db3d01a.dir
      size: 10254
      nfiles: 4
    - path: truthseeker/reports/train/knn/score_dict.json
      hash: md5
      md5: 4157a5deabda43d207a543b9f038b5af
      size: 285
  test_each_method@ddos-knn:
    cmd: 'python -m deckard.layers.optimise  stage=train  +model.init.sampling_method=knn  model.init.m=3
      data.sample.train_size=100 files.name=knn files.directory=ddos data=ddos dataset=ddos
      model_name=knn hydra.run.dir=ddos/logs/method/knn ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 064e5bb42979e36c917c538b2a7bc0cc
      size: 489
    - path: params.yaml
      hash: md5
      md5: 8e937140db56a135e97c05461c573520
      size: 1345
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/method/knn
      hash: md5
      md5: 352c64d9819e53769e8d36fb83b45b66.dir
      size: 10089
      nfiles: 4
    - path: ddos/reports/train/knn/score_dict.json
      hash: md5
      md5: 78616ed6b3370a8e953c28e2f07999c3
      size: 284
  condense@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.test_size=100 model_name=gzip_logistic model=gzip_logistic hydra.sweeper.study_name=condense_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=32 hydra.sweep.dir=sms_spam/logs/condense/gzip_logistic/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_logistic/study.csv
      ++data.sample.train_size='int(interval(30, 1000))' ++data.sample.random_state='int(interval(10000,
      20000))' ++data.sample.stratify=True model.init.m='tag(log, interval(.1, 1))'
      +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=sms_spam
      files.reports=reports/condense/gzip_logistic/ hydra.launcher.n_jobs=32 --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/model/best_gzip_logistic_sms_spam.yaml
      hash: md5
      md5: 026fca7fe5d7bb75c4a3ae245f86a2c2
      size: 332
    - path: sms_spam/logs/method/
      hash: md5
      md5: e8e327bbd5859a6c1c362fd482435727.dir
      size: 69377
      nfiles: 24
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: int(interval(20, 1000))
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.1, 1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/gzip_logistic/
      hash: md5
      md5: 9496098bd1497b6c46124e40e665ee74.dir
      size: 14280
      nfiles: 5
    - path: sms_spam/reports/condense/gzip_logistic/
      hash: md5
      md5: c7e2a43c1dc170c3d593825f57ad0e9b.dir
      size: 2707
      nfiles: 3
  condense@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.test_size=100 model_name=gzip_svc model=gzip_svc hydra.sweeper.study_name=condense_gzip_svc_truthseeker
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=32 hydra.sweep.dir=truthseeker/logs/condense/gzip_svc/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_svc/study.csv ++data.sample.train_size='int(interval(30,
      1000))' ++data.sample.random_state='int(interval(10000, 20000))' ++data.sample.stratify=True
      model.init.m='tag(log, interval(.1, 1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker files.reports=reports/condense/gzip_svc/ hydra.launcher.n_jobs=32
      --config-name gzip_svc --multirun
    deps:
    - path: conf/model/best_gzip_svc_truthseeker.yaml
      hash: md5
      md5: 97d9d5857744b1cc077513ac5a659f62
      size: 302
    - path: truthseeker/logs/method/
      hash: md5
      md5: 6f6693db2bb9520dc7956f0d0c003e23.dir
      size: 116543
      nfiles: 44
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: int(interval(20, 1000))
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.1, 1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/gzip_svc/
      hash: md5
      md5: bd7cbae34fd6feecf60a49cb537b0f80.dir
      size: 13751
      nfiles: 5
    - path: truthseeker/reports/condense/gzip_svc/
      hash: md5
      md5: a24584cdc3464b86b6ff88b90dc62e5e.dir
      size: 2701
      nfiles: 3
  condense@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.test_size=100 model_name=gzip_svc model=best_gzip_svc_sms_spam hydra.sweeper.study_name=condense_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/gzip_svc/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_svc/study.csv model.init.m='tag(log,
      interval(.01, .1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam files.reports=reports/condense/gzip_svc/ hydra.launcher.n_jobs=16
      --config-name condense --multirun
    deps:
    - path: conf/model/best_gzip_svc_sms_spam.yaml
      hash: md5
      md5: 771cd8e3b1368f0fbb30e518002db80f
      size: 317
    - path: sms_spam/logs/method/
      hash: md5
      md5: e8e327bbd5859a6c1c362fd482435727.dir
      size: 69377
      nfiles: 24
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/gzip_svc/
      hash: md5
      md5: c6ef4ecf2bec03894b2f2018cffc0888.dir
      size: 1597147
      nfiles: 513
    - path: sms_spam/reports/condense/gzip_svc/
      hash: md5
      md5: aff4ca5c41e7043fe0d36b4a669ad6a7.dir
      size: 344414
      nfiles: 381
  condense@ddos-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.test_size=100
      model_name=gzip_svc model=best_gzip_svc_ddos hydra.sweeper.study_name=condense_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/gzip_svc/
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_svc/study.csv model.init.m='tag(log,
      interval(.01, .1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos files.reports=reports/condense/gzip_svc/ hydra.launcher.n_jobs=16
      ++raise_exception=True --config-name condense --multirun
    deps:
    - path: conf/model/best_gzip_svc_ddos.yaml
      hash: md5
      md5: f2ec5b2ff8103b93ca61a5b86888a3e6
      size: 305
    - path: ddos/logs/method/
      hash: md5
      md5: 7128c67930147170f54fb89880528199.dir
      size: 120518
      nfiles: 48
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/gzip_svc/
      hash: md5
      md5: 98f11cc76f9f370871bfb325ec4186e4.dir
      size: 1589126
      nfiles: 513
    - path: ddos/reports/condense/gzip_svc/
      hash: md5
      md5: 87ca8778bbdb8363a1e237019c87ebf5.dir
      size: 345583
      nfiles: 384
  condense@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.test_size=100 model_name=gzip_knn model=best_gzip_knn_sms_spam hydra.sweeper.study_name=condense_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/gzip_knn/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_knn/study.csv model.init.m='tag(log,
      interval(.01, .1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam files.reports=reports/condense/gzip_knn/ hydra.launcher.n_jobs=16
      --config-name condense --multirun
    deps:
    - path: conf/model/best_gzip_knn_sms_spam.yaml
      hash: md5
      md5: 430e2be20ddaa39808a6739627a98d77
      size: 259
    - path: sms_spam/logs/method/
      hash: md5
      md5: e8e327bbd5859a6c1c362fd482435727.dir
      size: 69377
      nfiles: 24
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/gzip_knn/
      hash: md5
      md5: a45625dcc1d1cc1f1e20d19440e1cdf1.dir
      size: 1559584
      nfiles: 513
    - path: sms_spam/reports/condense/gzip_knn/
      hash: md5
      md5: 0ac87faa8d16d77b4e7d5a96cfdde177.dir
      size: 335094
      nfiles: 384
  compile@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_knn  --results_file
      sms_spam/reports/gzip_knn.csv
    deps:
    - path: sms_spam/reports/gzip_knn/
      hash: md5
      md5: 38c0cad7b59bf73926190c02477c4522.dir
      size: 2225944
      nfiles: 1156
    outs:
    - path: sms_spam/reports/gzip_knn.csv
      hash: md5
      md5: 2b0d4f908e2594d5b9845690298581a7
      size: 574252
  compile@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_knn  --results_file
      truthseeker/reports/gzip_knn.csv
    deps:
    - path: truthseeker/reports/gzip_knn/
      hash: md5
      md5: 4cf25ef922211d37e19599a896676c1a.dir
      size: 3213846
      nfiles: 1679
    outs:
    - path: truthseeker/reports/gzip_knn.csv
      hash: md5
      md5: 6ba7561cd39180787ac956633517a321
      size: 867197
  compile@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_knn  --results_file
      kdd_nsl/reports/gzip_knn.csv
    deps:
    - path: kdd_nsl/reports/gzip_knn/
      hash: md5
      md5: 26844b83475cc89ccf3e8f98b926a4af.dir
      size: 4882146
      nfiles: 2549
    outs:
    - path: kdd_nsl/reports/gzip_knn.csv
      hash: md5
      md5: 5e3a6a02802d5e2fc57142ee367e7b0f
      size: 1297878
  compile@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_svc  --results_file
      truthseeker/reports/gzip_svc.csv
    deps:
    - path: truthseeker/reports/gzip_svc/
      hash: md5
      md5: 643c0afcb0e41897bd1b1d6a839a99c5.dir
      size: 2286448
      nfiles: 1172
    outs:
    - path: truthseeker/reports/gzip_svc.csv
      hash: md5
      md5: 53bad1dc701714e6024ca8678976378f
      size: 600439
  compile@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_logistic  --results_file
      truthseeker/reports/gzip_logistic.csv
    deps:
    - path: truthseeker/reports/gzip_logistic/
      hash: md5
      md5: 4677ee579fda13aa8b7b5c14702e8971.dir
      size: 2992473
      nfiles: 1474
    outs:
    - path: truthseeker/reports/gzip_logistic.csv
      hash: md5
      md5: 742bfe9e8ffb58494c90cc0c04d0195a
      size: 811740
  compile@ddos-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_logistic  --results_file
      ddos/reports/gzip_logistic.csv
    deps:
    - path: ddos/reports/gzip_logistic/
      hash: md5
      md5: 0507b35c33d9b85b8ec7da67b8933aab.dir
      size: 2351373
      nfiles: 1153
    outs:
    - path: ddos/reports/gzip_logistic.csv
      hash: md5
      md5: ece12a4d8c4bd9cc612ff5be8681e74c
      size: 600963
  compile@ddos-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_knn  --results_file
      ddos/reports/gzip_knn.csv
    deps:
    - path: ddos/reports/gzip_knn/
      hash: md5
      md5: 5c8f1f9a65c9fb63748a895e72d717bc.dir
      size: 2238924
      nfiles: 1156
    outs:
    - path: ddos/reports/gzip_knn.csv
      hash: md5
      md5: 8b72c02c68f19558148b00d45f687065
      size: 574796
  compile@kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_logistic  --results_file
      kdd_nsl/reports/gzip_logistic.csv
    deps:
    - path: kdd_nsl/reports/gzip_logistic/
      hash: md5
      md5: 3aeb5c48705ab27b778a9491eed59809.dir
      size: 4497613
      nfiles: 2264
    outs:
    - path: kdd_nsl/reports/gzip_logistic.csv
      hash: md5
      md5: 6cc3ab785e209db15bc691bd420dbf21
      size: 1204370
  compile@kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_svc  --results_file
      kdd_nsl/reports/gzip_svc.csv
    deps:
    - path: kdd_nsl/reports/gzip_svc/
      hash: md5
      md5: ad0c1ca59562640bc26f992a29c9c7fc.dir
      size: 4197696
      nfiles: 2176
    outs:
    - path: kdd_nsl/reports/gzip_svc.csv
      hash: md5
      md5: 005010c2ae2b28474dd9ed2b072129fe
      size: 1113249
  compile@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_logistic  --results_file
      sms_spam/reports/gzip_logistic.csv
    deps:
    - path: sms_spam/reports/gzip_logistic/
      hash: md5
      md5: 97a5527f07a609bebd4f30e0a383d03e.dir
      size: 2293677
      nfiles: 1121
    outs:
    - path: sms_spam/reports/gzip_logistic.csv
      hash: md5
      md5: 3442281f20f9c036d095937294f2edd9
      size: 586377
  compile@ddos-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_svc  --results_file
      ddos/reports/gzip_svc.csv
    deps:
    - path: ddos/reports/gzip_svc/
      hash: md5
      md5: fa7187512fc8375d97128988d2e6d98d.dir
      size: 2256153
      nfiles: 1156
    outs:
    - path: ddos/reports/gzip_svc.csv
      hash: md5
      md5: d87f95d978b2b19b70941ce7552c06e6
      size: 577202
  compile@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_svc  --results_file
      sms_spam/reports/gzip_svc.csv
    deps:
    - path: sms_spam/reports/gzip_svc/
      hash: md5
      md5: 5f00d39d739b5377637c8b7d2b218fda.dir
      size: 2282179
      nfiles: 1177
    outs:
    - path: sms_spam/reports/gzip_svc.csv
      hash: md5
      md5: 00ad300e01df9a3d13b8f11261ee0d51
      size: 586255
  clean@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_svc.csv
      -o truthseeker/plots/clean_gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_svc.csv
      hash: md5
      md5: 53bad1dc701714e6024ca8678976378f
      size: 600439
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: truthseeker/plots/clean_gzip_svc.csv
      hash: md5
      md5: b0b9b96aa9cfe04d5ef4aeb7d3161c21
      size: 469207
  clean@kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_svc.csv -o kdd_nsl/plots/clean_gzip_svc.csv
      -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_svc.csv
      hash: md5
      md5: 005010c2ae2b28474dd9ed2b072129fe
      size: 1113249
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: kdd_nsl/plots/clean_gzip_svc.csv
      hash: md5
      md5: 3eab27465c8dace737ffdae86ccbd512
      size: 859049
  clean@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_knn.csv -o kdd_nsl/plots/clean_gzip_knn.csv
      -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_knn.csv
      hash: md5
      md5: 5e3a6a02802d5e2fc57142ee367e7b0f
      size: 1297878
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: kdd_nsl/plots/clean_gzip_knn.csv
      hash: md5
      md5: 1c001f5a7008b439ee4c7946998cbe25
      size: 1002255
  clean@ddos-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_knn.csv -o ddos/plots/clean_gzip_knn.csv
      -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_knn.csv
      hash: md5
      md5: 8b72c02c68f19558148b00d45f687065
      size: 574796
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: ddos/plots/clean_gzip_knn.csv
      hash: md5
      md5: c730af75faf35ba958b15b2da82b25be
      size: 451405
  clean@ddos-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_svc.csv -o ddos/plots/clean_gzip_svc.csv
      -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_svc.csv
      hash: md5
      md5: d87f95d978b2b19b70941ce7552c06e6
      size: 577202
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: ddos/plots/clean_gzip_svc.csv
      hash: md5
      md5: df1bab8cf7ac0a2c4d38f322d8cdb672
      size: 442682
  clean@kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_logistic.csv
      -o kdd_nsl/plots/clean_gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_logistic.csv
      hash: md5
      md5: 6cc3ab785e209db15bc691bd420dbf21
      size: 1204370
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: kdd_nsl/plots/clean_gzip_logistic.csv
      hash: md5
      md5: 9d085b1fc1b5f70a6dd12c32037c62cd
      size: 894862
  clean@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_knn.csv
      -o truthseeker/plots/clean_gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_knn.csv
      hash: md5
      md5: 6ba7561cd39180787ac956633517a321
      size: 867197
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: truthseeker/plots/clean_gzip_knn.csv
      hash: md5
      md5: ff0162ac672b57d59126b965580901d9
      size: 620009
  clean@ddos-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_logistic.csv -o
      ddos/plots/clean_gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_logistic.csv
      hash: md5
      md5: ece12a4d8c4bd9cc612ff5be8681e74c
      size: 600963
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: ddos/plots/clean_gzip_logistic.csv
      hash: md5
      md5: 13ea685881d149d7a461d96500d30ce2
      size: 440028
  clean@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_knn.csv -o
      sms_spam/plots/clean_gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_knn.csv
      hash: md5
      md5: 2b0d4f908e2594d5b9845690298581a7
      size: 574252
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: sms_spam/plots/clean_gzip_knn.csv
      hash: md5
      md5: 13a5803849f7dfdefe18ba16b0a5010f
      size: 448070
  clean@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_logistic.csv
      -o sms_spam/plots/clean_gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_logistic.csv
      hash: md5
      md5: 3442281f20f9c036d095937294f2edd9
      size: 586377
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: sms_spam/plots/clean_gzip_logistic.csv
      hash: md5
      md5: d4a3634c577b059cc78bb2c5881ad97b
      size: 417456
  clean@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_svc.csv -o
      sms_spam/plots/clean_gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_svc.csv
      hash: md5
      md5: 00ad300e01df9a3d13b8f11261ee0d51
      size: 586255
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: sms_spam/plots/clean_gzip_svc.csv
      hash: md5
      md5: eafe99a7a63b5cbf8cc5b0350914e329
      size: 457290
  clean@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_logistic.csv
      -o truthseeker/plots/clean_gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_logistic.csv
      hash: md5
      md5: 742bfe9e8ffb58494c90cc0c04d0195a
      size: 811740
    params:
      conf/clean.yaml:
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: Gzip
            pkl: Pickle
            bz2: BZ2
            zstd: Zstd
            lzma: Lzma
          model_name:
            gzip_svc: k-SVC
            gzip_logistic: k-Logistic
            gzip_knn: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
    outs:
    - path: truthseeker/plots/clean_gzip_logistic.csv
      hash: md5
      md5: 873c41dfb698b326eb07c943479815cd
      size: 487547
  copy@sms_spam:
    cmd: 'rm -rf ~/Gzip-KNN/figs/sms_spam/ && mkdir -p ~/Gzip-KNN/figs/sms_spam/ &&
      cp -r sms_spam/plots/* ~/Gzip-KNN/figs/sms_spam/ '
    deps:
    - path: sms_spam/plots/
      hash: md5
      md5: fdd45f66ef3f19a6534f5c17c462e51d.dir
      size: 2793144
      nfiles: 12
  copy@truthseeker:
    cmd: 'rm -rf ~/Gzip-KNN/figs/truthseeker/ && mkdir -p ~/Gzip-KNN/figs/truthseeker/
      && cp -r truthseeker/plots/* ~/Gzip-KNN/figs/truthseeker/ '
    deps:
    - path: truthseeker/plots/
      hash: md5
      md5: 0f9bcee5cc68e6112b25a3951283fd0c.dir
      size: 3300727
      nfiles: 12
  copy@kdd_nsl:
    cmd: 'rm -rf ~/Gzip-KNN/figs/kdd_nsl/ && mkdir -p ~/Gzip-KNN/figs/kdd_nsl/ &&
      cp -r kdd_nsl/plots/* ~/Gzip-KNN/figs/kdd_nsl/ '
    deps:
    - path: kdd_nsl/plots/
      hash: md5
      md5: 0f5448bc5a774cdf6bc5bebc8a9b1b81.dir
      size: 5639869
      nfiles: 12
  copy@ddos:
    cmd: 'rm -rf ~/Gzip-KNN/figs/ddos/ && mkdir -p ~/Gzip-KNN/figs/ddos/ && cp -r
      ddos/plots/* ~/Gzip-KNN/figs/ddos/ '
    deps:
    - path: ddos/plots/
      hash: md5
      md5: d8b78aa870552a659236fb9ef896a11a.dir
      size: 2860891
      nfiles: 15
  condense@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.test_size=100 model_name=gzip_knn model=best_gzip_knn_truthseeker
      hydra.sweeper.study_name=condense_gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/gzip_knn/ hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_knn/study.csv
      model.init.m='tag(log, interval(.01, .1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker files.reports=reports/condense/gzip_knn/ hydra.launcher.n_jobs=16
      --config-name condense --multirun
    deps:
    - path: conf/model/best_gzip_knn_truthseeker.yaml
      hash: md5
      md5: 79baf4709c4a5f2535059ef8d1b6a082
      size: 258
    - path: truthseeker/logs/method/
      hash: md5
      md5: 6f6693db2bb9520dc7956f0d0c003e23.dir
      size: 116543
      nfiles: 44
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/gzip_knn/
      hash: md5
      md5: 029aa9a618d0edd127756b0b724a1742.dir
      size: 1568426
      nfiles: 513
    - path: truthseeker/reports/condense/gzip_knn/
      hash: md5
      md5: ef4ee3a0a4c954cea9b4f557a216e421.dir
      size: 353591
      nfiles: 374
  plot@ddos-gzip_knn:
    cmd: python -m deckard.layers.plots  --path ddos/plots/  --file ddos/plots/clean_gzip_knn.csv  -c
      conf/plots.yaml
    deps:
    - path: ddos/plots/clean_gzip_knn.csv
      hash: md5
      md5: c730af75faf35ba958b15b2da82b25be
      size: 451405
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_metric.pdf
          x: model.init.symmetric
          y: accuracy
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Accuracy
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
        - file: symmetric_vs_metric_train_time.pdf
          x: model.init.symmetric
          y: train_time
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Training Time (s)
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_accuracy.pdf
          x: model_name
          y: accuracy
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
          rotation: 90
        - file: models_vs_train_time.pdf
          x: model_name
          y: train_time
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Training Time (s)
          legend_title: Samples
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_predict_time.pdf
          x: model_name
          y: predict_time
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Prediction Time (s)
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
          rotation: 90
        line_plot:
        - file: metric_vs_accuracy.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_train_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_predict_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
    outs:
    - path: ddos/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: b8279045dcf3a1fc574578e991427e73
      size: 23629
    - path: ddos/plots/metric_vs_predict_time.pdf
      hash: md5
      md5: 1512c0c363753afc28a3c093cc8e252c
      size: 22784
    - path: ddos/plots/metric_vs_train_time.pdf
      hash: md5
      md5: dd17a922e53b59b2d9b2d91c1237bb54
      size: 22329
    - path: ddos/plots/models_vs_accuracy.pdf
      hash: md5
      md5: bbbc08a7161735b6174984688003809f
      size: 13970
    - path: ddos/plots/models_vs_predict_time.pdf
      hash: md5
      md5: 9b6acd61045df87af51626be2bdff7ab
      size: 15507
    - path: ddos/plots/models_vs_train_time.pdf
      hash: md5
      md5: 6a2303b531dfc78f20d9bf3dc62d8d42
      size: 16118
    - path: ddos/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 9cd54391a16400664710c9f0589a4d5f
      size: 22044
    - path: ddos/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 0397f39f681300638b6fcc7c2d4e3bda
      size: 21616
  plot@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.plots  --path kdd_nsl/plots/  --file kdd_nsl/plots/clean_gzip_knn.csv  -c
      conf/plots.yaml
    deps:
    - path: kdd_nsl/plots/clean_gzip_knn.csv
      hash: md5
      md5: 1c001f5a7008b439ee4c7946998cbe25
      size: 1002255
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_metric.pdf
          x: model.init.symmetric
          y: accuracy
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Accuracy
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
        - file: symmetric_vs_metric_train_time.pdf
          x: model.init.symmetric
          y: train_time
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Training Time (s)
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_accuracy.pdf
          x: model_name
          y: accuracy
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
          rotation: 90
        - file: models_vs_train_time.pdf
          x: model_name
          y: train_time
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Training Time (s)
          legend_title: Samples
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_predict_time.pdf
          x: model_name
          y: predict_time
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Prediction Time (s)
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
          rotation: 90
        line_plot:
        - file: metric_vs_accuracy.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_train_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_predict_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
    outs:
    - path: kdd_nsl/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: a146ab8c45d548ecd6c285a40c5d49e7
      size: 23228
    - path: kdd_nsl/plots/metric_vs_predict_time.pdf
      hash: md5
      md5: 59f7befb701cf34c5bf62a78206d7867
      size: 22642
    - path: kdd_nsl/plots/metric_vs_train_time.pdf
      hash: md5
      md5: 938036a897293cbf7dc0b4caa19a5596
      size: 22182
    - path: kdd_nsl/plots/models_vs_accuracy.pdf
      hash: md5
      md5: 0dad2f21fc6049c3a24972a35514ee71
      size: 15035
    - path: kdd_nsl/plots/models_vs_predict_time.pdf
      hash: md5
      md5: 4361ffb492bff25d3cde95fcdb941ced
      size: 16578
    - path: kdd_nsl/plots/models_vs_train_time.pdf
      hash: md5
      md5: 416681afbf2e0e87dcc7dfe97f0835fc
      size: 16239
    - path: kdd_nsl/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 05a28fb9adea7b847f396fdd96c37d02
      size: 22208
    - path: kdd_nsl/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 0a0a9daf98ab6efe98cb31b69cba2c65
      size: 21578
  plot@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.plots  --path truthseeker/plots/  --file truthseeker/plots/clean_gzip_knn.csv  -c
      conf/plots.yaml
    deps:
    - path: truthseeker/plots/clean_gzip_knn.csv
      hash: md5
      md5: ff0162ac672b57d59126b965580901d9
      size: 620009
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_metric.pdf
          x: model.init.symmetric
          y: accuracy
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Accuracy
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
        - file: symmetric_vs_metric_train_time.pdf
          x: model.init.symmetric
          y: train_time
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Training Time (s)
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_accuracy.pdf
          x: model_name
          y: accuracy
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
          rotation: 90
        - file: models_vs_train_time.pdf
          x: model_name
          y: train_time
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Training Time (s)
          legend_title: Samples
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_predict_time.pdf
          x: model_name
          y: predict_time
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Prediction Time (s)
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
          rotation: 90
        line_plot:
        - file: metric_vs_accuracy.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_train_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_predict_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
    outs:
    - path: truthseeker/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 3cef9a04adf0d3378d4627c1a8b097a7
      size: 23348
    - path: truthseeker/plots/metric_vs_predict_time.pdf
      hash: md5
      md5: a4a5f2426ffaf289e124fb09235e374b
      size: 22838
    - path: truthseeker/plots/metric_vs_train_time.pdf
      hash: md5
      md5: cda8914da9fabcfb40ea1eb0943e28d3
      size: 22333
    - path: truthseeker/plots/models_vs_accuracy.pdf
      hash: md5
      md5: 7ef865e460d2652c873cfe333e7a308d
      size: 15215
    - path: truthseeker/plots/models_vs_predict_time.pdf
      hash: md5
      md5: eb57bd848d231a47615e311dbd1102b1
      size: 17930
    - path: truthseeker/plots/models_vs_train_time.pdf
      hash: md5
      md5: e7bc6589ed86e8f5c3fbb5a747c652fe
      size: 17739
    - path: truthseeker/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 0e7c326bef4c0d835f810c67172b2698
      size: 22057
    - path: truthseeker/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: ce21956e382cc48f0a71ef7ccfd79751
      size: 21593
  plot@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.plots  --path sms_spam/plots/  --file sms_spam/plots/clean_gzip_knn.csv  -c
      conf/plots.yaml
    deps:
    - path: sms_spam/plots/clean_gzip_knn.csv
      hash: md5
      md5: 13a5803849f7dfdefe18ba16b0a5010f
      size: 448070
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_metric.pdf
          x: model.init.symmetric
          y: accuracy
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Accuracy
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
        - file: symmetric_vs_metric_train_time.pdf
          x: model.init.symmetric
          y: train_time
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Training Time (s)
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_accuracy.pdf
          x: model_name
          y: accuracy
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
          rotation: 90
        - file: models_vs_train_time.pdf
          x: model_name
          y: train_time
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Training Time (s)
          legend_title: Samples
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_predict_time.pdf
          x: model_name
          y: predict_time
          hue: dataset
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Prediction Time (s)
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
          rotation: 90
        line_plot:
        - file: metric_vs_accuracy.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_train_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_predict_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
    outs:
    - path: sms_spam/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 507715814c07145dbb140b2b6714973b
      size: 23499
    - path: sms_spam/plots/metric_vs_predict_time.pdf
      hash: md5
      md5: 97ec5498625837c79fc02850afba09f1
      size: 22606
    - path: sms_spam/plots/metric_vs_train_time.pdf
      hash: md5
      md5: f4c9d0805ea5d0ac8e1a2210ee788d47
      size: 22104
    - path: sms_spam/plots/models_vs_accuracy.pdf
      hash: md5
      md5: 2eb9ea23cba4e5b734565b7aacdcf43c
      size: 14146
    - path: sms_spam/plots/models_vs_predict_time.pdf
      hash: md5
      md5: b518bf6b070e7916ad71febd3d3face6
      size: 15523
    - path: sms_spam/plots/models_vs_train_time.pdf
      hash: md5
      md5: 617f20892ba643f5c47077af63ae727f
      size: 14895
    - path: sms_spam/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 40aa8607331327c4f667fda367defb5f
      size: 22033
    - path: sms_spam/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 775c0bdfc7d9524f1e63b8879ddefccd
      size: 21590
  merge@truthseeker:
    cmd: python merge.py --big_dir truthseeker/plots/ --data_file clean_gzip_knn.csv
      --little_dir_data_file clean_gzip_logistic.csv clean_gzip_svc.csv --output_folder
      truthseeker/plots/ --output_file merged.csv
    deps:
    - path: truthseeker/plots/clean_gzip_knn.csv
      hash: md5
      md5: ff0162ac672b57d59126b965580901d9
      size: 620009
    - path: truthseeker/plots/clean_gzip_logistic.csv
      hash: md5
      md5: 873c41dfb698b326eb07c943479815cd
      size: 487547
    - path: truthseeker/plots/clean_gzip_svc.csv
      hash: md5
      md5: b0b9b96aa9cfe04d5ef4aeb7d3161c21
      size: 469207
    outs:
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 8c62eb2b88334fccea1e7fcf0328e286
      size: 1551248
  merge@sms_spam:
    cmd: python merge.py --big_dir sms_spam/plots/ --data_file clean_gzip_knn.csv
      --little_dir_data_file clean_gzip_logistic.csv clean_gzip_svc.csv --output_folder
      sms_spam/plots/ --output_file merged.csv
    deps:
    - path: sms_spam/plots/clean_gzip_knn.csv
      hash: md5
      md5: 13a5803849f7dfdefe18ba16b0a5010f
      size: 448070
    - path: sms_spam/plots/clean_gzip_logistic.csv
      hash: md5
      md5: d4a3634c577b059cc78bb2c5881ad97b
      size: 417456
    - path: sms_spam/plots/clean_gzip_svc.csv
      hash: md5
      md5: eafe99a7a63b5cbf8cc5b0350914e329
      size: 457290
    outs:
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: 37ee37633fda4b5f9ee82bd1ceb4c227
      size: 1297715
  merge@ddos:
    cmd: python merge.py --big_dir ddos/plots/ --data_file clean_gzip_knn.csv --little_dir_data_file
      clean_gzip_logistic.csv clean_gzip_svc.csv --output_folder ddos/plots/ --output_file
      merged.csv
    deps:
    - path: ddos/plots/clean_gzip_knn.csv
      hash: md5
      md5: c730af75faf35ba958b15b2da82b25be
      size: 451405
    - path: ddos/plots/clean_gzip_logistic.csv
      hash: md5
      md5: 13ea685881d149d7a461d96500d30ce2
      size: 440028
    - path: ddos/plots/clean_gzip_svc.csv
      hash: md5
      md5: df1bab8cf7ac0a2c4d38f322d8cdb672
      size: 442682
    outs:
    - path: ddos/plots/merged.csv
      hash: md5
      md5: 403fa24d39db98be8839bf28950d486f
      size: 1308400
  merge@kdd_nsl:
    cmd: python merge.py --big_dir kdd_nsl/plots/ --data_file clean_gzip_knn.csv --little_dir_data_file
      clean_gzip_logistic.csv clean_gzip_svc.csv --output_folder kdd_nsl/plots/ --output_file
      merged.csv
    deps:
    - path: kdd_nsl/plots/clean_gzip_knn.csv
      hash: md5
      md5: 1c001f5a7008b439ee4c7946998cbe25
      size: 1002255
    - path: kdd_nsl/plots/clean_gzip_logistic.csv
      hash: md5
      md5: 9d085b1fc1b5f70a6dd12c32037c62cd
      size: 894862
    - path: kdd_nsl/plots/clean_gzip_svc.csv
      hash: md5
      md5: 3eab27465c8dace737ffdae86ccbd512
      size: 859049
    outs:
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 6b1695ffa807df0dfc018091e6530286
      size: 2704298
  plot@kdd_nsl:
    cmd: python -m deckard.layers.plots  --path kdd_nsl/plots/  --file kdd_nsl/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 6b1695ffa807df0dfc018091e6530286
      size: 2704298
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_metric.pdf
          x: model.init.symmetric
          y: accuracy
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Accuracy
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
        - file: symmetric_vs_metric_train_time.pdf
          x: model.init.symmetric
          y: train_time
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Training Time (s)
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_accuracy.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: Model
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
          rotation: 90
        - file: models_vs_train_time.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Training Time (s)
          legend_title: Samples
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_predict_time.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Prediction Time (s)
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
          rotation: 90
        line_plot:
        - file: metric_vs_accuracy.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_train_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_predict_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
    outs:
    - path: kdd_nsl/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 121120b8a2e9858ff4685486c63efe0e
      size: 23176
    - path: kdd_nsl/plots/metric_vs_predict_time.pdf
      hash: md5
      md5: ba7301da0f57d672a8f6b0c312dd0085
      size: 22877
    - path: kdd_nsl/plots/metric_vs_train_time.pdf
      hash: md5
      md5: 6d82438ed9cc7b11f12ecee234f30c57
      size: 22832
    - path: kdd_nsl/plots/models_vs_accuracy.pdf
      hash: md5
      md5: 1c6e19118695948c2ed0569698e6179f
      size: 25010
    - path: kdd_nsl/plots/models_vs_predict_time.pdf
      hash: md5
      md5: d117deeef1f2f9bdaf2d3c7305403126
      size: 20794
    - path: kdd_nsl/plots/models_vs_train_time.pdf
      hash: md5
      md5: a84044c489b2540b5377638eb0eef95d
      size: 20368
    - path: kdd_nsl/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: e86decc816d7792ffaa5bdaea9cd207d
      size: 22222
    - path: kdd_nsl/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 62d04dbddf1cf59ff361e9ae4919b486
      size: 22126
  plot@truthseeker:
    cmd: python -m deckard.layers.plots  --path truthseeker/plots/  --file truthseeker/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 8c62eb2b88334fccea1e7fcf0328e286
      size: 1551248
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_metric.pdf
          x: model.init.symmetric
          y: accuracy
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Accuracy
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
        - file: symmetric_vs_metric_train_time.pdf
          x: model.init.symmetric
          y: train_time
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Training Time (s)
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_accuracy.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: Model
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
          rotation: 90
        - file: models_vs_train_time.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Training Time (s)
          legend_title: Samples
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_predict_time.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Prediction Time (s)
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
          rotation: 90
        line_plot:
        - file: metric_vs_accuracy.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_train_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_predict_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
    outs:
    - path: truthseeker/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 5cf9c958859967e3c615533045593908
      size: 23503
    - path: truthseeker/plots/metric_vs_predict_time.pdf
      hash: md5
      md5: 83766dcb156fa3edbca2d862c7ac9816
      size: 22823
    - path: truthseeker/plots/metric_vs_train_time.pdf
      hash: md5
      md5: bd8f939e95f05272f1b3797f71622729
      size: 22308
    - path: truthseeker/plots/models_vs_accuracy.pdf
      hash: md5
      md5: e559d8f7a6dba235f2382f30a8b1f65e
      size: 20504
    - path: truthseeker/plots/models_vs_predict_time.pdf
      hash: md5
      md5: bed8e2895380f440eb0291e5017840cf
      size: 20083
    - path: truthseeker/plots/models_vs_train_time.pdf
      hash: md5
      md5: a2cc864f1d9ba95643c8d6c88106022a
      size: 19666
    - path: truthseeker/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 5d84fded0f889e23cef9bfc7653a2c1f
      size: 22228
    - path: truthseeker/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 5ce5e92218d99e3c3da728d7c817018f
      size: 21601
  plot@sms_spam:
    cmd: python -m deckard.layers.plots  --path sms_spam/plots/  --file sms_spam/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: 37ee37633fda4b5f9ee82bd1ceb4c227
      size: 1297715
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_metric.pdf
          x: model.init.symmetric
          y: accuracy
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Accuracy
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
        - file: symmetric_vs_metric_train_time.pdf
          x: model.init.symmetric
          y: train_time
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Training Time (s)
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_accuracy.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: Model
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
          rotation: 90
        - file: models_vs_train_time.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Training Time (s)
          legend_title: Samples
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_predict_time.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Prediction Time (s)
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
          rotation: 90
        line_plot:
        - file: metric_vs_accuracy.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_train_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_predict_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
    outs:
    - path: sms_spam/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 7da57ee42851335ad0dbebee2507e99d
      size: 22876
    - path: sms_spam/plots/metric_vs_predict_time.pdf
      hash: md5
      md5: dab5b9cf40da2a0e03298fc0874f117b
      size: 22144
    - path: sms_spam/plots/metric_vs_train_time.pdf
      hash: md5
      md5: ed3532fc421c775cea5bf6e551807499
      size: 22096
    - path: sms_spam/plots/models_vs_accuracy.pdf
      hash: md5
      md5: ce1bc080d051c202dded50d93bb246b4
      size: 22620
    - path: sms_spam/plots/models_vs_predict_time.pdf
      hash: md5
      md5: 6e0a18406525e3c71e871d5dc43bc698
      size: 19130
    - path: sms_spam/plots/models_vs_train_time.pdf
      hash: md5
      md5: 30b81edd5a38d77c0e435a5382c3d64a
      size: 18699
    - path: sms_spam/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 91d274fe5d7b43cb56fc0f217f8b3380
      size: 22217
    - path: sms_spam/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 59282e618c5d2d4e1a78646d7fda53f8
      size: 22831
  plot@ddos:
    cmd: python -m deckard.layers.plots  --path ddos/plots/  --file ddos/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: ddos/plots/merged.csv
      hash: md5
      md5: 403fa24d39db98be8839bf28950d486f
      size: 1308400
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_metric.pdf
          x: model.init.symmetric
          y: accuracy
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Accuracy
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
        - file: symmetric_vs_metric_train_time.pdf
          x: model.init.symmetric
          y: train_time
          hue: model.init.metric
          errorbar: se
          kind: bar
          titles:
          xlabels: ''
          ylabels: Training Time (s)
          legend_title: Metrics
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_accuracy.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: Model
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: linear
            ylim:
            - 0
            - 1
          rotation: 90
        - file: models_vs_train_time.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Training Time (s)
          legend_title: Samples
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
        - file: models_vs_predict_time.pdf
          x: model_name
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: bar
          titles:
          xlabels: Model
          ylabels: Prediction Time (s)
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
          set:
            yscale: log
          rotation: 90
        line_plot:
        - file: metric_vs_accuracy.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_train_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
        - file: metric_vs_predict_time.pdf
          hue: model.init.metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: log
          hue_order:
          - Gzip
          - Pickle
          - BZ2
          - Zstd
          - Lzma
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
    outs:
    - path: ddos/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: d6c48181947786290d7892642a3e019b
      size: 22886
    - path: ddos/plots/metric_vs_predict_time.pdf
      hash: md5
      md5: 6b4b67904fff009af4edb71d00106c19
      size: 22664
    - path: ddos/plots/metric_vs_train_time.pdf
      hash: md5
      md5: 428ea333166e3d9f07a55c0239570552
      size: 22156
    - path: ddos/plots/models_vs_accuracy.pdf
      hash: md5
      md5: 8ca13025efb9ec7a1b65b1f91438960c
      size: 21643
    - path: ddos/plots/models_vs_predict_time.pdf
      hash: md5
      md5: f10c1255422a2598081c2e55b6a7694e
      size: 20499
    - path: ddos/plots/models_vs_train_time.pdf
      hash: md5
      md5: 0663e594773e9a271336fae4f41d35c8
      size: 20074
    - path: ddos/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: 3dbfc687130c2c1549fba477f0c4ade3
      size: 22221
    - path: ddos/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 73decc1bce68e1bfae76a8a5dcd887c4
      size: 21594
  condense@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.test_size=100 model_name=gzip_logistic model=best_gzip_logistic_truthseeker
      hydra.sweeper.study_name=condense_gzip_logistic_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/gzip_logistic/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_logistic/study.csv
      model.init.m='tag(log, interval(.01, .1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker files.reports=reports/condense/gzip_logistic/ hydra.launcher.n_jobs=16
      --config-name condense --multirun
    deps:
    - path: conf/model/best_gzip_logistic_truthseeker.yaml
      hash: md5
      md5: 448e12c542f48c074057e9374743d61e
      size: 326
    - path: truthseeker/logs/method/
      hash: md5
      md5: 6f6693db2bb9520dc7956f0d0c003e23.dir
      size: 116543
      nfiles: 44
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/gzip_logistic/
      hash: md5
      md5: 79d74a0dfe0486ada3f03b24c68973dc.dir
      size: 1576129
      nfiles: 513
    - path: truthseeker/reports/condense/gzip_logistic/
      hash: md5
      md5: 3de3011b1d96e4990111f5b1601e3b9d.dir
      size: 400559
      nfiles: 343
  condense@ddos-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.test_size=100
      model_name=gzip_knn model=best_gzip_knn_ddos hydra.sweeper.study_name=condense_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/gzip_knn/
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_knn/study.csv model.init.m='tag(log,
      interval(.01, .1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos files.reports=reports/condense/gzip_knn/ hydra.launcher.n_jobs=16
      --config-name condense --multirun
    deps:
    - path: conf/model/best_gzip_knn_ddos.yaml
      hash: md5
      md5: 74721f3e7ab6096e246c486d6080e1ab
      size: 259
    - path: ddos/logs/method/
      hash: md5
      md5: 7128c67930147170f54fb89880528199.dir
      size: 120518
      nfiles: 48
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/gzip_knn/
      hash: md5
      md5: a2dc5aef876897f53c4076e4012b678a.dir
      size: 1542474
      nfiles: 513
    - path: ddos/reports/condense/gzip_knn/
      hash: md5
      md5: 781709e87f2e740f6a0f4e914ee9754f.dir
      size: 340848
      nfiles: 379
  condense@ddos-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.test_size=100
      model_name=gzip_logistic model=best_gzip_logistic_ddos hydra.sweeper.study_name=condense_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/gzip_logistic/
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_logistic/study.csv model.init.m='tag(log,
      interval(.01, .1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos files.reports=reports/condense/gzip_logistic/ hydra.launcher.n_jobs=16
      --config-name condense --multirun
    deps:
    - path: conf/model/best_gzip_logistic_ddos.yaml
      hash: md5
      md5: 9507b28fa5a18b501fe9d80ec33bed1c
      size: 334
    - path: ddos/logs/method/
      hash: md5
      md5: 7128c67930147170f54fb89880528199.dir
      size: 120518
      nfiles: 48
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/gzip_logistic/
      hash: md5
      md5: 4f8f846516837f0e7cd63c8911aff99a.dir
      size: 1623568
      nfiles: 513
    - path: ddos/reports/condense/gzip_logistic/
      hash: md5
      md5: 051b71717b4a7986a1965ebadf448838.dir
      size: 350870
      nfiles: 384
  condense@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.test_size=100 model_name=gzip_knn model=best_gzip_knn_kdd_nsl hydra.sweeper.study_name=condense_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/gzip_knn/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_knn/study.csv model.init.m='tag(log,
      interval(.01, .1))' +model.init.sampling_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl files.reports=reports/condense/gzip_knn/ hydra.launcher.n_jobs=16
      --config-name condense --multirun
    deps:
    - path: conf/model/best_gzip_knn_kdd_nsl.yaml
      hash: md5
      md5: 2697918626643d0136286367b83ee6b9
      size: 258
    - path: kdd_nsl/logs/method/
      hash: md5
      md5: de8764bbb2daa13261f3f5d1dff27a30.dir
      size: 79348
      nfiles: 28
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: ???
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 2
            direction: ${direction}
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              +model.init.sampling_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/gzip_knn/
      hash: md5
      md5: 7d53f3534ceb486e6601d344562cfb32.dir
      size: 1564530
      nfiles: 513
    - path: kdd_nsl/reports/condense/gzip_knn/
      hash: md5
      md5: 7e5a283215281be3ee4189ebd5a6e3f1.dir
      size: 342924
      nfiles: 384
  parse_params:
    cmd: python -m deckard.layers.parse
    deps:
    - path: conf/data/default.yaml
      hash: md5
      md5: 6c1a9ca0f6a0798fe74d19001946145a
      size: 21
    - path: conf/default.yaml
      hash: md5
      md5: a0a533f84a7ffce197e0db5439219faf
      size: 1504
    - path: conf/files/default.yaml
      hash: md5
      md5: 7a2df5f8b98699376c3fb4da05d70dea
      size: 306
    - path: conf/model/default.yaml
      hash: md5
      md5: ef15da6b54f8005e906750eccb079885
      size: 26
    - path: conf/scorers/default.yaml
      hash: md5
      md5: d8d00e7d284ea68b1244743dfef8f00c
      size: 280
    outs:
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
  test_each_metric@gzip-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/gzip/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=gzip  model.init.m=-1 hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/gzip/20
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/gzip/20
      hash: md5
      md5: 1ba7c981d7d8c6d35bd82d2889f15b63.dir
      size: 7478
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/gzip/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@zstd-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/zstd/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=zstd  model.init.m=-1 hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/zstd/20
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/zstd/20
      hash: md5
      md5: c7655e5cbaf6b6e3c948071759c546da.dir
      size: 7478
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/zstd/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@pkl-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/pkl/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=pkl  model.init.m=-1 hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/pkl/20
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/pkl/20
      hash: md5
      md5: 9f998f1bb562b1548a18bfbcfbf175ce.dir
      size: 7464
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/pkl/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@bz2-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/bz2/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=bz2  model.init.m=-1 hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/bz2/20
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/bz2/20
      hash: md5
      md5: 42c5cca4fb280919b4e4a83491d6e298.dir
      size: 7464
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/bz2/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@lzma-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/lzma/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=lzma  model.init.m=-1 hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/lzma/20
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/lzma/20
      hash: md5
      md5: bc34056fa7ddb781d5d5d0e4945707b1.dir
      size: 7478
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/lzma/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@levenshtein-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/levenshtein/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=levenshtein  model.init.m=-1
      hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/levenshtein/20 ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/levenshtein/20
      hash: md5
      md5: edd1276702ed94258009981ffa615cf8.dir
      size: 7555
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/levenshtein/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@ratio-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/ratio/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=ratio  model.init.m=-1
      hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/ratio/20 ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/ratio/20
      hash: md5
      md5: 730b5546dd21bc7d2913315e379fb3de.dir
      size: 7471
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/ratio/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@hamming-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/hamming/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=hamming  model.init.m=-1
      hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/hamming/20 ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/hamming/20
      hash: md5
      md5: fca32d1698ba623610282ccdbbb04676.dir
      size: 7499
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/hamming/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_dataset@gzip_knn-kdd_nsl:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_dataset  files.name=gzip_knn
      data.sample.train_size=100 files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl
      model_name=gzip_knn model=gzip_knn hydra.run.dir=kdd_nsl/logs/test_each_dataset/gzip_knn
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 41e95614d524a857c0260b13ce77202b
      size: 488
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_dataset/gzip_knn
      hash: md5
      md5: 955370e62c64341f4410f3f46f6d84fd.dir
      size: 7263
      nfiles: 4
    - path: kdd_nsl/reports/test_each_dataset/gzip_knn/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_dataset@gzip_knn-truthseeker:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_dataset  files.name=gzip_knn
      data.sample.train_size=100 files.directory=truthseeker data=truthseeker dataset=truthseeker
      model_name=gzip_knn model=gzip_knn hydra.run.dir=truthseeker/logs/test_each_dataset/gzip_knn
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 41e95614d524a857c0260b13ce77202b
      size: 488
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/test_each_dataset/gzip_knn
      hash: md5
      md5: f8dd2e14f7e12daed6ebfd9a552d6c4e.dir
      size: 7305
      nfiles: 4
    - path: truthseeker/reports/test_each_dataset/gzip_knn/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_dataset@ddos-gzip_knn:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_knn data.sample.train_size=100
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_knn model=gzip_knn
      hydra.run.dir=ddos/logs/train/gzip_knn ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/train/gzip_knn
      hash: md5
      md5: 34014062bdf037be909b6511c452f1b0.dir
      size: 8196
      nfiles: 4
    - path: ddos/reports/train/gzip_knn/score_dict.json
      hash: md5
      md5: 6bc7c1529294e0629279f82edf5ea291
      size: 490
  test_each_dataset@ddos-gzip_svc:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_svc data.sample.train_size=100
      files.directory=ddos data=ddos dataset=ddos model_name=gzip_svc model=gzip_svc
      hydra.run.dir=ddos/logs/train/gzip_svc ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/train/gzip_svc
      hash: md5
      md5: c7a8773d3d767c2512c5756208b10807.dir
      size: 8218
      nfiles: 4
    - path: ddos/reports/train/gzip_svc/score_dict.json
      hash: md5
      md5: e4b16dc85cf53ba288f3cd9f26210aaf
      size: 488
  test_each_dataset@ddos-gzip_logistic:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_logistic
      data.sample.train_size=100 files.directory=ddos data=ddos dataset=ddos model_name=gzip_logistic
      model=gzip_logistic hydra.run.dir=ddos/logs/train/gzip_logistic ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: ddos/logs/train/gzip_logistic
      hash: md5
      md5: 8480d22fd88afc847b24f596f7f030f6.dir
      size: 8336
      nfiles: 4
    - path: ddos/reports/train/gzip_logistic/score_dict.json
      hash: md5
      md5: da488217f0ed9104d516c2952f066d5c
      size: 490
  test_each_dataset@truthseeker-gzip_knn:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_knn data.sample.train_size=100
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_knn
      model=gzip_knn hydra.run.dir=truthseeker/logs/train/gzip_knn ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/train/gzip_knn
      hash: md5
      md5: 536447b8fd78cc00f3e3f3d698f719c4.dir
      size: 8301
      nfiles: 4
    - path: truthseeker/reports/train/gzip_knn/score_dict.json
      hash: md5
      md5: a66834b74b35f61d606432cf915880eb
      size: 485
  test_each_dataset@truthseeker-gzip_svc:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_svc data.sample.train_size=100
      files.directory=truthseeker data=truthseeker dataset=truthseeker model_name=gzip_svc
      model=gzip_svc hydra.run.dir=truthseeker/logs/train/gzip_svc ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/train/gzip_svc
      hash: md5
      md5: fa296f9d36a2ffe3bf04e6d68a038d63.dir
      size: 8327
      nfiles: 4
    - path: truthseeker/reports/train/gzip_svc/score_dict.json
      hash: md5
      md5: a15c98063dd637b89f7f83cdb9bc7aed
      size: 487
  test_each_dataset@truthseeker-gzip_logistic:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_logistic
      data.sample.train_size=100 files.directory=truthseeker data=truthseeker dataset=truthseeker
      model_name=gzip_logistic model=gzip_logistic hydra.run.dir=truthseeker/logs/train/gzip_logistic
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: truthseeker/logs/train/gzip_logistic
      hash: md5
      md5: 7e912ef73ed3e79c7447311085d096a9.dir
      size: 8443
      nfiles: 4
    - path: truthseeker/reports/train/gzip_logistic/score_dict.json
      hash: md5
      md5: b38dd1c454c449a38bb24d99e2f6d449
      size: 487
  test_each_dataset@sms_spam-gzip_knn:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_knn data.sample.train_size=100
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_knn
      model=gzip_knn hydra.run.dir=sms_spam/logs/train/gzip_knn ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/logs/train/gzip_knn
      hash: md5
      md5: 01cedc87d49f5a0c5540e98151ae5ce1.dir
      size: 8241
      nfiles: 4
    - path: sms_spam/reports/train/gzip_knn/score_dict.json
      hash: md5
      md5: de6ea155d85de59ed71b8898ee759d1b
      size: 488
  test_each_dataset@sms_spam-gzip_svc:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_svc data.sample.train_size=100
      files.directory=sms_spam data=sms_spam dataset=sms_spam model_name=gzip_svc
      model=gzip_svc hydra.run.dir=sms_spam/logs/train/gzip_svc ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/logs/train/gzip_svc
      hash: md5
      md5: 746507c1cf1ddd7b2c82cd6fb4dc8961.dir
      size: 8266
      nfiles: 4
    - path: sms_spam/reports/train/gzip_svc/score_dict.json
      hash: md5
      md5: e345d250dbf7a87e13e769df1466a891
      size: 489
  test_each_dataset@sms_spam-gzip_logistic:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_logistic
      data.sample.train_size=100 files.directory=sms_spam data=sms_spam dataset=sms_spam
      model_name=gzip_logistic model=gzip_logistic hydra.run.dir=sms_spam/logs/train/gzip_logistic
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: sms_spam/logs/train/gzip_logistic
      hash: md5
      md5: 0873e9fbe884022ce29dcad39692244b.dir
      size: 8382
      nfiles: 4
    - path: sms_spam/reports/train/gzip_logistic/score_dict.json
      hash: md5
      md5: 32d7c19c598002a11967d892680f28b3
      size: 489
  test_each_dataset@kdd_nsl-gzip_knn:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_knn data.sample.train_size=100
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_knn model=gzip_knn
      hydra.run.dir=kdd_nsl/logs/train/gzip_knn ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/train/gzip_knn
      hash: md5
      md5: eb397e4c9133b431e5a370cf48389a24.dir
      size: 8260
      nfiles: 4
    - path: kdd_nsl/reports/train/gzip_knn/score_dict.json
      hash: md5
      md5: fce876ed123f5404f27050b6be2f7915
      size: 490
  test_each_dataset@kdd_nsl-gzip_svc:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_svc data.sample.train_size=100
      files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl model_name=gzip_svc model=gzip_svc
      hydra.run.dir=kdd_nsl/logs/train/gzip_svc ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/train/gzip_svc
      hash: md5
      md5: 8fb91a0664ebd2b52486013e9a423a59.dir
      size: 8281
      nfiles: 4
    - path: kdd_nsl/reports/train/gzip_svc/score_dict.json
      hash: md5
      md5: 0c32dedcbbaa73104c3f8a6a293c9142
      size: 487
  test_each_dataset@kdd_nsl-gzip_logistic:
    cmd: 'python -m deckard.layers.optimise  stage=train files.name=gzip_logistic
      data.sample.train_size=100 files.directory=kdd_nsl data=kdd_nsl dataset=kdd_nsl
      model_name=gzip_logistic model=gzip_logistic hydra.run.dir=kdd_nsl/logs/train/gzip_logistic
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/train/gzip_logistic
      hash: md5
      md5: 9339f80b58012e157e77276043f56ef2.dir
      size: 8400
      nfiles: 4
    - path: kdd_nsl/reports/train/gzip_logistic/score_dict.json
      hash: md5
      md5: 42d0162e60c0a2a3fa14577fc87d80da
      size: 490
  test_each_metric@jaro-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/jaro/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=jaro  model.init.m=-1 hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/jaro/20
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/jaro/20
      hash: md5
      md5: 5db3a3821604041e7c04682d5b193b68.dir
      size: 7457
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/jaro/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@jaro_winkler-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/jaro_winkler/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=jaro_winkler  model.init.m=-1
      hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/jaro_winkler/20 ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/jaro_winkler/20
      hash: md5
      md5: 4148c047d6cfeec692ec4abed5c2bf0d.dir
      size: 7569
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/jaro_winkler/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_metric@seqratio-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_metric  files.name=gzip_knn/seqratio/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=seqratio  model.init.m=-1
      hydra.run.dir=kdd_nsl/logs/test_each_metric/gzip_knn/seqratio/20 ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_metric/gzip_knn/seqratio/20
      hash: md5
      md5: 4fb530bcc31f36c0686427d6f915a300.dir
      size: 7513
      nfiles: 4
    - path: kdd_nsl/reports/test_each_metric/gzip_knn/seqratio/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_model@gzip-gzip_knn-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_model  files.name=gzip_knn/gzip/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_knn model_name=gzip_knn model.init.metric=gzip  model.init.m=-1 hydra.run.dir=kdd_nsl/logs/test_each_model/gzip_knn/gzip/20
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_model/gzip_knn/gzip/20
      hash: md5
      md5: 091876589a79bc7469e20fbb4ac3c3d4.dir
      size: 7470
      nfiles: 4
    - path: kdd_nsl/reports/test_each_model/gzip_knn/gzip/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_model@gzip-gzip_svc-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_model  files.name=gzip_svc/gzip/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_svc model_name=gzip_knn model.init.metric=gzip  model.init.m=-1 hydra.run.dir=kdd_nsl/logs/test_each_model/gzip_svc/gzip/20
      ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_model/gzip_svc/gzip/20
      hash: md5
      md5: e6777bb7db2e5d2ad86feab414e68193.dir
      size: 7499
      nfiles: 4
    - path: kdd_nsl/reports/test_each_model/gzip_svc/gzip/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  test_each_model@gzip-gzip_logistic-kdd_nsl-20:
    cmd: 'python -m deckard.layers.optimise  stage=test_each_model  files.name=gzip_logistic/gzip/20
      files.directory=kdd_nsl data=kdd_nsl data.sample.train_size=20 dataset=kdd_nsl
      model=gzip_logistic model_name=gzip_knn model.init.metric=gzip  model.init.m=-1
      hydra.run.dir=kdd_nsl/logs/test_each_model/gzip_logistic/gzip/20 ++raise_exception=True '
    deps:
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 29ab1887ca13b11fa6895a3d3888f01e
      size: 490
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          _target_: deckard.base.files.FileConfig
          data_dir: data
          data_type: .csv
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          _target_: deckard.base.model.Model
          data:
            _target_: deckard.base.data.Data
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            _target_: deckard.base.model.ModelInitializer
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/logs/test_each_model/gzip_logistic/gzip/20
      hash: md5
      md5: 2c4dc837874a92fb4c8489bd6b69b954.dir
      size: 7562
      nfiles: 4
    - path: kdd_nsl/reports/test_each_model/gzip_logistic/gzip/20/score_dict.json
      hash: md5
      md5: 5d8bf090bc8e34df8ed01766adfca5eb
      size: 26
  grid_search@20-kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/20
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_knn/20/study.csv files.directory=kdd_nsl
      files.reports=reports/gzip_knn/20 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 04d89b3026f5179935abcfe121130ee2
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 0.5
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: kdd_nsl/logs/gzip_knn/20
      hash: md5
      md5: fd2c63b6b83cd609f8a5ff70441440b7.dir
      size: 1280146
      nfiles: 514
    - path: kdd_nsl/reports/gzip_knn/20/train/
      hash: md5
      md5: 6efc672c0a7a16d9959e63170b8ac946.dir
      size: 659524
      nfiles: 693
  grid_search@20-kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8
      hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/20 hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_logistic/20/study.csv
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/20 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 44c28c02d3f21a9722a1a0fd8303c73d
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 0.5
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: kdd_nsl/logs/gzip_logistic/20
      hash: md5
      md5: b4216adc48cd99c7ade3293d10202701.dir
      size: 1370231
      nfiles: 514
    - path: kdd_nsl/reports/gzip_logistic/20/train/
      hash: md5
      md5: 4dc8f90ff3774faf695b03a66ef14d42.dir
      size: 718779
      nfiles: 683
  grid_search@20-kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/20
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_svc/20/study.csv files.directory=kdd_nsl
      files.reports=reports/gzip_svc/20 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 7ddf265f5fcac5ad38482d43becb6240
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 0.5
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: kdd_nsl/logs/gzip_svc/20
      hash: md5
      md5: 8d5f651e084623c455ba635861bcdcd0.dir
      size: 1351901
      nfiles: 514
    - path: kdd_nsl/reports/gzip_svc/20/train/
      hash: md5
      md5: 2f595222a4597d23a6ee93d81968d50d.dir
      size: 854665
      nfiles: 943
  grid_search@20-truthseeker-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/20
      hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_knn/20/study.csv
      files.directory=truthseeker files.reports=reports/gzip_knn/20 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 04d89b3026f5179935abcfe121130ee2
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 0.5
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: truthseeker/logs/gzip_knn/20
      hash: md5
      md5: 115a729630ae2a354f18335c364d5a2f.dir
      size: 1271289
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/20/train/
      hash: md5
      md5: 8db00017c13521b76a4709ad5ee5e203.dir
      size: 342229
      nfiles: 376
  grid_search@20-truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      hydra.sweeper.study_name=gzip_logistic_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/20 
      hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_logistic/20/study.csv
      files.directory=truthseeker files.reports=reports/gzip_logistic/20 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 44c28c02d3f21a9722a1a0fd8303c73d
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 0.5
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: truthseeker/logs/gzip_logistic/20
      hash: md5
      md5: 0a275db0038a8bee22a86c237108038d.dir
      size: 1365861
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/20/train/
      hash: md5
      md5: 467a611bd7c270cff5043eaa2a15a990.dir
      size: 361274
      nfiles: 375
  grid_search@20-truthseeker-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/20
      hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_svc/20/study.csv
      files.directory=truthseeker files.reports=reports/gzip_svc/20 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 7ddf265f5fcac5ad38482d43becb6240
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 0.5
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: truthseeker/logs/gzip_svc/20
      hash: md5
      md5: 4db1c3259d3d70481edab40bc5846d13.dir
      size: 1306695
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/20/train/
      hash: md5
      md5: bf2ebabbd5f570522f98155ed69cae1a.dir
      size: 512646
      nfiles: 576
  grid_search@20-sms_spam-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/20
      hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_knn/20/study.csv files.directory=sms_spam
      files.reports=reports/gzip_knn/20 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: 04d89b3026f5179935abcfe121130ee2
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 0.5
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: sms_spam/logs/gzip_knn/20
      hash: md5
      md5: 0d3b237e0586ff4d6c95e704ef742a2f.dir
      size: 1258236
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/20/train/
      hash: md5
      md5: 5af399c77dc9be22edae692aa5a0429b.dir
      size: 339883
      nfiles: 374
  grid_search@20-sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      hydra.sweeper.study_name=gzip_logistic_sms_spam hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8
      hydra.sweep.dir=sms_spam/logs/gzip_logistic/20 hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_logistic/20/study.csv
      files.directory=sms_spam files.reports=reports/gzip_logistic/20 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 847d4d804fff0b6f2533f90820eebd04
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: sms_spam/logs/gzip_logistic/20
      hash: md5
      md5: cb3485ab935ddf05a786385f686a75ff.dir
      size: 1396472
      nfiles: 514
    - path: sms_spam/reports/gzip_logistic/20/train/
      hash: md5
      md5: 55e8dc65a0d6cc808ad887c5119b75c9.dir
      size: 567210
      nfiles: 544
  grid_search@20-sms_spam-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/20
      hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_svc/20/study.csv files.directory=sms_spam
      files.reports=reports/gzip_svc/20 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 957922cb6993eb99866232d944a4a106
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: sms_spam/logs/gzip_svc/20
      hash: md5
      md5: 72490b67a2f121f85f75b4a35828fc24.dir
      size: 1300497
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/20/train/
      hash: md5
      md5: b92aa2acab580e30d3c3cba5afb6bc98.dir
      size: 337764
      nfiles: 384
  grid_search@20-ddos-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/20
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_knn/20/study.csv files.directory=ddos
      files.reports=reports/gzip_knn/20 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: a58015cd6f327e171842b045a2524bfd
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: ddos/logs/gzip_knn/20
      hash: md5
      md5: e4948d5aac40e040df43fbafbc7e8431.dir
      size: 1258111
      nfiles: 513
    - path: ddos/reports/gzip_knn/20/train/
      hash: md5
      md5: fdc33a01f1f3ed629e9a409ab724f28a.dir
      size: 336976
      nfiles: 383
  grid_search@20-ddos-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_logistic hydra.sweeper.study_name=gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/20
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_logistic/20/study.csv
      files.directory=ddos files.reports=reports/gzip_logistic/20 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 847d4d804fff0b6f2533f90820eebd04
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: ddos/logs/gzip_logistic/20
      hash: md5
      md5: cedf81e12298ca376d0aad71c89a2474.dir
      size: 1338544
      nfiles: 513
    - path: ddos/reports/gzip_logistic/20/train/
      hash: md5
      md5: 392510c47d7267e45400b1aeff4989de.dir
      size: 383763
      nfiles: 362
  grid_search@20-ddos-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/20
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_svc/20/study.csv files.directory=ddos
      files.reports=reports/gzip_svc/20 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 957922cb6993eb99866232d944a4a106
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: ddos/logs/gzip_svc/20
      hash: md5
      md5: e722c155006dfb1d63d8027918059631.dir
      size: 1295050
      nfiles: 513
    - path: ddos/reports/gzip_svc/20/train/
      hash: md5
      md5: 03c17016e53ec85735281044e44a3da9.dir
      size: 342574
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/100
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_knn/100/study.csv files.directory=kdd_nsl
      files.reports=reports/gzip_knn/100 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: a58015cd6f327e171842b045a2524bfd
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: kdd_nsl/logs/gzip_knn/100
      hash: md5
      md5: 0655c027ad35a4c39917f6c86a647fee.dir
      size: 1284154
      nfiles: 514
    - path: kdd_nsl/reports/gzip_knn/100/train/
      hash: md5
      md5: 09ea1ef591933be60985fc4a918af0e3.dir
      size: 375404
      nfiles: 344
  grid_search@100-kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8
      hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/100 hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_logistic/100/study.csv
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/100 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 847d4d804fff0b6f2533f90820eebd04
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: kdd_nsl/logs/gzip_logistic/100
      hash: md5
      md5: 8688739ebbaf1ecfb0cee7351653dcdd.dir
      size: 1419973
      nfiles: 514
    - path: kdd_nsl/reports/gzip_logistic/100/train/
      hash: md5
      md5: b048f1724da91fc0129001ea52c6afbc.dir
      size: 369539
      nfiles: 373
  grid_search@100-kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/100
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_svc/100/study.csv files.directory=kdd_nsl
      files.reports=reports/gzip_svc/100 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 957922cb6993eb99866232d944a4a106
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: kdd_nsl/logs/gzip_svc/100
      hash: md5
      md5: ac5abf43ecd7219df0538e4eabc38483.dir
      size: 1375408
      nfiles: 514
    - path: kdd_nsl/reports/gzip_svc/100/train/
      hash: md5
      md5: ce44eb636a676d860b6a74c1e2b7bd6d.dir
      size: 346387
      nfiles: 384
  grid_search@100-truthseeker-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/100
      hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_knn/100/study.csv
      files.directory=truthseeker files.reports=reports/gzip_knn/100 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: a58015cd6f327e171842b045a2524bfd
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: truthseeker/logs/gzip_knn/100
      hash: md5
      md5: 96fbe48b38147ee5490e4032082c70a9.dir
      size: 1262746
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/100/train/
      hash: md5
      md5: b3277c4473c19eabcd4de8c4912963e5.dir
      size: 350712
      nfiles: 367
  grid_search@100-truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      hydra.sweeper.study_name=gzip_logistic_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/100 
      hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_logistic/100/study.csv
      files.directory=truthseeker files.reports=reports/gzip_logistic/100 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 847d4d804fff0b6f2533f90820eebd04
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: truthseeker/logs/gzip_logistic/100
      hash: md5
      md5: 0b884276bd5e5665a1f6f1da70ce0c0a.dir
      size: 1363656
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/100/train/
      hash: md5
      md5: b8787116e05d1f7cd360fcb656d8bc0d.dir
      size: 373739
      nfiles: 368
  grid_search@100-truthseeker-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/100
      hydra.callbacks.study_dump.output_file=truthseeker/logs/gzip_svc/100/study.csv
      files.directory=truthseeker files.reports=reports/gzip_svc/100 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 957922cb6993eb99866232d944a4a106
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: truthseeker/logs/gzip_svc/100
      hash: md5
      md5: efaa084603e8b096ac56f090dd4cbe59.dir
      size: 1370808
      nfiles: 514
    - path: truthseeker/reports/gzip_svc/100/train/
      hash: md5
      md5: 0fabc50448b4518eed20dfedd637ff89.dir
      size: 342354
      nfiles: 384
  grid_search@100-sms_spam-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/100
      hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_knn/100/study.csv
      files.directory=sms_spam files.reports=reports/gzip_knn/100 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: a58015cd6f327e171842b045a2524bfd
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: sms_spam/logs/gzip_knn/100
      hash: md5
      md5: ddc0cead734b37c40b25087975af51b6.dir
      size: 1292137
      nfiles: 514
    - path: sms_spam/reports/gzip_knn/100/train/
      hash: md5
      md5: ada083e1fe8057db8a72fefda6189c00.dir
      size: 358548
      nfiles: 342
  grid_search@100-sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      hydra.sweeper.study_name=gzip_logistic_sms_spam hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8
      hydra.sweep.dir=sms_spam/logs/gzip_logistic/100 hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_logistic/100/study.csv
      files.directory=sms_spam files.reports=reports/gzip_logistic/100 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 847d4d804fff0b6f2533f90820eebd04
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: sms_spam/logs/gzip_logistic/100
      hash: md5
      md5: fef64da3e42fb4af8fa4f94b2a23a75f.dir
      size: 1428456
      nfiles: 514
    - path: sms_spam/reports/gzip_logistic/100/train/
      hash: md5
      md5: 605532e5cdbf53556d7dc350ed96d1f2.dir
      size: 368029
      nfiles: 369
  grid_search@100-sms_spam-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/100
      hydra.callbacks.study_dump.output_file=sms_spam/logs/gzip_svc/100/study.csv
      files.directory=sms_spam files.reports=reports/gzip_svc/100 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 957922cb6993eb99866232d944a4a106
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: sms_spam/logs/gzip_svc/100
      hash: md5
      md5: dd065d6caa95d958e2497b16b75ee668.dir
      size: 1354661
      nfiles: 514
    - path: sms_spam/reports/gzip_svc/100/train/
      hash: md5
      md5: 39da5fb6785659650ef9929bcee4dbbf.dir
      size: 338043
      nfiles: 384
  grid_search@100-ddos-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/100
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_knn/100/study.csv files.directory=ddos
      files.reports=reports/gzip_knn/100 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: a58015cd6f327e171842b045a2524bfd
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: ddos/logs/gzip_knn/100
      hash: md5
      md5: 7df3b9dd5c7798760f5d79dd3ede6482.dir
      size: 1310012
      nfiles: 514
    - path: ddos/reports/gzip_knn/100/train/
      hash: md5
      md5: d9aaf8c127764ea612a1761c0fc77623.dir
      size: 337641
      nfiles: 383
  grid_search@100-ddos-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_logistic hydra.sweeper.study_name=gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/100
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_logistic/100/study.csv
      files.directory=ddos files.reports=reports/gzip_logistic/100 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 847d4d804fff0b6f2533f90820eebd04
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: ddos/logs/gzip_logistic/100
      hash: md5
      md5: eb116966604146f1c23f72b295acd44b.dir
      size: 1403955
      nfiles: 514
    - path: ddos/reports/gzip_logistic/100/train/
      hash: md5
      md5: 13d0d7a7623802c124ed258c25dd4c26.dir
      size: 371115
      nfiles: 370
  grid_search@100-ddos-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/100
      hydra.callbacks.study_dump.output_file=ddos/logs/gzip_svc/100/study.csv files.directory=ddos
      files.reports=reports/gzip_svc/100 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 957922cb6993eb99866232d944a4a106
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: ddos/logs/gzip_svc/100
      hash: md5
      md5: af3620f05c26e12c596d37e675e50136.dir
      size: 1353491
      nfiles: 514
    - path: ddos/reports/gzip_svc/100/train/
      hash: md5
      md5: 906f43db55d1fc4d31392cd6162df91d.dir
      size: 343722
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn hydra.sweeper.study_name=gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/300
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_knn/300/study.csv files.directory=kdd_nsl
      files.reports=reports/gzip_knn/300 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: a58015cd6f327e171842b045a2524bfd
      size: 2062
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 2
            n_jobs: 2
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              ++data.sample.random_state: int(interval(1, 10000))
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_knn
    outs:
    - path: kdd_nsl/logs/gzip_knn/300
      hash: md5
      md5: b0d9756ae481106fa18cad713328a119.dir
      size: 1268052
      nfiles: 514
    - path: kdd_nsl/reports/gzip_knn/300/train/
      hash: md5
      md5: 8a50e0763b3d1689d8cdf2dfb3b6bf4d.dir
      size: 413587
      nfiles: 301
  grid_search@300-kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8
      hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/300 hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_logistic/300/study.csv
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/300 hydra.launcher.n_jobs=16
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 847d4d804fff0b6f2533f90820eebd04
      size: 2205
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 1
            n_trials: 1
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1,l2,none
              +model.init.tol: 1e-4,1e-3,1e-2
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_logistic
    outs:
    - path: kdd_nsl/logs/gzip_logistic/300
      hash: md5
      md5: 4d74db40f71d31d7f977492b30a70aa8.dir
      size: 1445614
      nfiles: 514
    - path: kdd_nsl/reports/gzip_logistic/300/train/
      hash: md5
      md5: 1f57f30d53a0524b474e6b4e8c1fc17f.dir
      size: 378817
      nfiles: 368
  grid_search@300-kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc hydra.sweeper.study_name=gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/300
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/gzip_svc/300/study.csv files.directory=kdd_nsl
      files.reports=reports/gzip_svc/300 hydra.launcher.n_jobs=16 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 957922cb6993eb99866232d944a4a106
      size: 2131
    - path: params.yaml
      hash: md5
      md5: 9a178db02b5ad8f990c7a557790a36c7
      size: 1381
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: 1e-2,1e-1,1e0,1e1,1e2
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.precompute: true
              model.init.metric: gzip,lzma,bz2,pkl,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
              model_name: ${model_name}
              data.sample.random_state: int(interval(1, 10000))
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
        model_name: gzip_svc
    outs:
    - path: kdd_nsl/logs/gzip_svc/300
      hash: md5
      md5: 17a5ddfde60c4fd582db29a255f2c8ac.dir
      size: 1401149
      nfiles: 514
    - path: kdd_nsl/reports/gzip_svc/300/train/
      hash: md5
      md5: 97f15b6f23c53190b4f93cd9dc1fe764.dir
      size: 347078
      nfiles: 384
