schema: '2.0'
stages:
  data:
    cmd: python data_prep.py
    deps:
    - path: data_prep.py
      hash: md5
      md5: 18244c921ed2d7cbf25b8362b3ca33aa
      size: 5146
    outs:
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
  parse_params:
    cmd: python -m deckard.layers.parse
    deps:
    - path: conf/data
      hash: md5
      md5: d405445aa6668eb8895082ecc2b863c5.dir
      size: 2452
      nfiles: 9
    - path: conf/default.yaml
      hash: md5
      md5: a0a533f84a7ffce197e0db5439219faf
      size: 1504
    - path: conf/files
      hash: md5
      md5: 23716443bd515e95c89a4c698e6e2644.dir
      size: 300
      nfiles: 1
    - path: conf/model
      hash: md5
      md5: 0b241be12ec51816a3d6e2690f09af81.dir
      size: 4955
      nfiles: 16
    - path: conf/scorers
      hash: md5
      md5: e3e4a85af427799284ed28f899af4a90.dir
      size: 376
      nfiles: 2
    outs:
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
  train:
    cmd: python -m deckard.layers.experiment train
    deps:
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      params.yaml:
        data:
          drop:
          - id
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          data_dir: data
          data_file: kdd_nsl-0-100-100
          data_type: .pkl
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          data:
            drop:
            - id
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            condensing_method: None
            distance_matrix: kdd_nsl/model/gzip/100-100/0.npz
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          accuracy:
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/data/kdd_nsl-0-100-100.pkl/
      hash: md5
      md5: e4ba3bf8bf9a5602aa0b3df493f6a438
      size: 39291
    - path: kdd_nsl/reports/train/default/predictions.json
      hash: md5
      md5: 01b717fd4735f5bdc3cf2f9f77fd92ec
      size: 1608
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: bf60d34cee8b981f3c5669fdf4cfed78
      size: 471
  grid_search@20-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/20/symmetry_true files.directory=ddos
      files.reports=reports/gzip_knn/20/symmetry_true hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: debe24d925222cdb15082d70abe2b193.dir
      size: 1222770
      nfiles: 513
    - path: ddos/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: ad1e41af5f58c20bf2f4af9928876457.dir
      size: 409888
      nfiles: 366
  grid_search@20-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/20/symmetry_false
      files.directory=ddos files.reports=reports/gzip_knn/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: 1656b0265daefb94f0ee1fab90cf1b3a.dir
      size: 1185031
      nfiles: 513
    - path: ddos/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: b046cacf59505187743f53b26643b7f3.dir
      size: 40316
      nfiles: 36
  grid_search@20-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/20/symmetry_true
      files.directory=ddos files.reports=reports/gzip_logistic/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: d32b0b62292d108574abd4b7bdcac704.dir
      size: 1346769
      nfiles: 513
    - path: ddos/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 9f8de6c45140851381c9ddfedea16085.dir
      size: 446793
      nfiles: 384
  grid_search@20-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/20/symmetry_false
      files.directory=ddos files.reports=reports/gzip_logistic/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: 3d13e7e2e119f567b904999547da7339.dir
      size: 1344824
      nfiles: 513
    - path: ddos/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 41eb54c7bc49ad7a9db067b19465078c.dir
      size: 446593
      nfiles: 384
  grid_search@20-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/20/symmetry_true files.directory=ddos
      files.reports=reports/gzip_svc/20/symmetry_true hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: e49bfb186cd91e3d05f80b062d7935cf.dir
      size: 1258890
      nfiles: 513
    - path: ddos/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: fef833f6610b6c5c1c012ff22d288658.dir
      size: 435380
      nfiles: 384
  grid_search@20-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/20/symmetry_false
      files.directory=ddos files.reports=reports/gzip_svc/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 1f6c85a483495515c5b4e5e9b5bc1a3a.dir
      size: 1258923
      nfiles: 513
    - path: ddos/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: 8234b4e5b949adbde3aef6227679095b.dir
      size: 435282
      nfiles: 384
  grid_search@20-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/20/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_knn/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: e5bd751df99fb66230b378927ade556d.dir
      size: 1212319
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: 6d97a92314eca6d8656bf208dc26935a.dir
      size: 400095
      nfiles: 354
  grid_search@20-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/20/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_knn/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: 17197133ab2574fa61f3a035bd4a91ce.dir
      size: 1179649
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 291b1e8e63a1062417aa4a73d6524e87.dir
      size: 78720
      nfiles: 68
  grid_search@20-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/20/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: b0ecbc6d0774f5205c58ea01ae68ea7f.dir
      size: 1348998
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 6708ac29f7464ed5b65633d9c4fd14d0.dir
      size: 436752
      nfiles: 384
  grid_search@20-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/20/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: 4848dcbd3e70f20f5f9f6dbdb237559c.dir
      size: 1347312
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: c39513b61d0bdbc110fed615f0db8c7b.dir
      size: 436403
      nfiles: 384
  grid_search@20-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/20/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_svc/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: eb3d47ffc2c4fe0830574725df7affc6.dir
      size: 1261165
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: cb59116f466bdf13a47dada54a06a419.dir
      size: 425391
      nfiles: 384
  grid_search@20-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/20/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_svc/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 124b63152a1b8813d8c4e03dfced7d2b.dir
      size: 1256873
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: bcbb587fc9d4326e3da03fd2744b5b09.dir
      size: 424497
      nfiles: 384
  grid_search@20-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/20/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_knn/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: 3bff042b04d609cbcd779f07ec0e71a2.dir
      size: 1228152
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: bf3bb05e04cd04d55f370543e1cfa90f.dir
      size: 401325
      nfiles: 366
  grid_search@20-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/20/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_knn/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: 9caade90850d326b5b0a1095547785b3.dir
      size: 1186889
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 4052c9d24c2a2fdc38e7e6ad0557a102.dir
      size: 29612
      nfiles: 27
  grid_search@20-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/20/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: d11facae98e04cd463564e5d4c900584.dir
      size: 1352047
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 3c99ddf4e104954569ad5b15a1bdebc6.dir
      size: 437741
      nfiles: 384
  grid_search@20-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/20/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: c852e7d9868ddb2a53129229ba0b2bbb.dir
      size: 1352659
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 9a2672e63452da96e86b3fc5877242e3.dir
      size: 437752
      nfiles: 384
  grid_search@20-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/20/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_svc/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: 04f20c73d3ff843cc07543b0fcaca563.dir
      size: 1264276
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: 43bae1e4aa2b9411243e7e0156c8c67b.dir
      size: 426418
      nfiles: 384
  grid_search@20-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/20/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_svc/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 3c3a6dfecac2443bb08a9930f09481e4.dir
      size: 1262768
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: 7e946e92140231a5329feebad9ef4f91.dir
      size: 426045
      nfiles: 384
  grid_search@20-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/20/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_knn/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: 272f7fc74d593709b9ced2f76a2f0ac6.dir
      size: 1237412
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: 2c1bbf7bbb39ba103251fc29387e4cce.dir
      size: 405020
      nfiles: 366
  grid_search@20-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/20/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_knn/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: dabcf8f647a72c14573819a0004feaca.dir
      size: 1200135
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 25b32c3eb954273425679e7bb5ee675e.dir
      size: 43170
      nfiles: 39
  grid_search@20-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/20/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: 5c0b25af4c18697c12bfccfde7ec6183.dir
      size: 1361336
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 4a5580b1b89d1e2a16849b7f9c0b6338.dir
      size: 441658
      nfiles: 384
  grid_search@20-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/20/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: fb7ec16174e1bc68513b425804ecdf03.dir
      size: 1362511
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 09ef2de9e634ea382c040e008cb3585e.dir
      size: 441937
      nfiles: 384
  grid_search@20-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/20/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_svc/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: 03cd5bc403e52125a8be394635cb3cf0.dir
      size: 1273514
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: 13177fa66449428d98438f54252058e0.dir
      size: 430276
      nfiles: 384
  grid_search@20-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/20/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_svc/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: ebccf2bd23dd264a6a5ae6c4416cc225.dir
      size: 1272008
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: 31dea85c93f94eaa2b7fdee25c62ac5c.dir
      size: 429979
      nfiles: 384
  grid_search@100-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/100/symmetry_true
      files.directory=ddos files.reports=reports/gzip_knn/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: 5c1708f9f1c26af5a4eb15c296fb5ce1.dir
      size: 1199435
      nfiles: 513
    - path: ddos/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: eaa2becee64de1d6edc5fbe345e2e69b.dir
      size: 94176
      nfiles: 84
  grid_search@100-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/100/symmetry_false
      files.directory=ddos files.reports=reports/gzip_knn/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: 3b09965ed326b739a38ee2b29c2634a5.dir
      size: 1200716
      nfiles: 513
    - path: ddos/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: 6641dcdf293f2be2ae4fb8b6312ee513.dir
      size: 84180
      nfiles: 75
  grid_search@100-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/100/symmetry_true
      files.directory=ddos files.reports=reports/gzip_logistic/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: b42976ebe7c903597628efea8eab1d37.dir
      size: 1345426
      nfiles: 513
    - path: ddos/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: d4b073942c15a60b18902ff92dab4612.dir
      size: 446747
      nfiles: 384
  grid_search@100-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/100/symmetry_false
      files.directory=ddos files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: 80e3f0cb3fd04ace3d1acb61a3336ea4.dir
      size: 1347444
      nfiles: 513
    - path: ddos/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 29995c9ee46fa90c4cc5f7c91e66d62e.dir
      size: 447106
      nfiles: 384
  grid_search@100-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/100/symmetry_true
      files.directory=ddos files.reports=reports/gzip_svc/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: 28504c90a24c4a7d4c5943418462fb54.dir
      size: 1256383
      nfiles: 513
    - path: ddos/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 28c7804cef4d4d701e7991c23ad2b169.dir
      size: 435157
      nfiles: 384
  grid_search@100-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/100/symmetry_false
      files.directory=ddos files.reports=reports/gzip_svc/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: d33a6bc06c8c01f0cb9841ea83296cf6.dir
      size: 1257541
      nfiles: 513
    - path: ddos/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: c9d77e5f5ab3a97036c0514dc4221a3f.dir
      size: 435342
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/100/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_knn/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: 98b90dd12dc6ed78a4e7a8e63f1ee4e6.dir
      size: 1174565
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: b5f4ce07d28ccddc829f8dcf1d4179de.dir
      size: 75388
      nfiles: 62
  grid_search@100-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/100/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_knn/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: 27d11eb93a33ac4e7d11cc8a2573b1f2.dir
      size: 1195647
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: da4f33191a487eb8b2045c3f9cfd0057.dir
      size: 118234
      nfiles: 102
  grid_search@100-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/100/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: f53aa2b62366e96633c4ce22a333e201.dir
      size: 1349109
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 9e7e8c559b46175a79737f169f489ef4.dir
      size: 437082
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/100/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: f8d53ee83466ebfd4b3de8c9f50a2191.dir
      size: 1355286
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 0acbf737addf5ee8b39da82759704832.dir
      size: 438181
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/100/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_svc/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: 0187e40e4997c54ec179fdac3b771443.dir
      size: 1257412
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 2be4bbc2cbc569c0d674d5a0fc4691be.dir
      size: 424773
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/100/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_svc/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: e08eef5feaf145487b6e1fbe584820f5.dir
      size: 1260757
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: a04d603cbebaedb6d96639aaa1cdde57.dir
      size: 425334
      nfiles: 384
  grid_search@100-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/100/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_knn/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: e7caa5166f955d2ca0fffe40e230f618.dir
      size: 1211834
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: 45107b0e1fd5e79f6bdb96662fb9ff99.dir
      size: 128373
      nfiles: 116
  grid_search@100-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/100/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_knn/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: 89fd7942de9ec14121bb1104ff572efd.dir
      size: 1185664
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: a5a84fcece7e903433b593c04112057b.dir
      size: 95462
      nfiles: 83
  grid_search@100-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/100/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: dc2dc3bcc5451e2acbc40cc05b333d1d.dir
      size: 1353310
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 185c8ca7005735ff09866697fbbdcf4d.dir
      size: 438099
      nfiles: 384
  grid_search@100-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/100/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: 812d2008bb428cce0b0802a97b7fa024.dir
      size: 1355181
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: b280ef11c23b2f7dd066e943551d2286.dir
      size: 438365
      nfiles: 384
  grid_search@100-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/100/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_svc/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: 25304d2a52a87ff2a0d355a612277e97.dir
      size: 1263018
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 1e0148548dfb5601e97da11cf8c6a386.dir
      size: 426194
      nfiles: 384
  grid_search@100-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/100/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_svc/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: 1aef6e9ca8f5b944f3e7f50a7f06096b.dir
      size: 1263400
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: e5aaac7b5e69a8fa76f9e6d12a241d69.dir
      size: 426269
      nfiles: 384
  grid_search@100-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/100/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_knn/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: ef0c92196951d9ce388c19d4be15275a.dir
      size: 1210505
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: c55a4b2dbeb9e8fc3c5a65c35a1c68b5.dir
      size: 116257
      nfiles: 103
  grid_search@100-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/100/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_knn/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: d2c4e58f6476826b6b93fe34d533d820.dir
      size: 1210127
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: 8c422e1ec17ab2fb473dff2e30be9769.dir
      size: 179419
      nfiles: 156
  grid_search@100-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/100/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: 06cdb7b4c8d8ac85f51e5fcd08814317.dir
      size: 1362718
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 6f93537bb8ae6b19ab430458a478e8f2.dir
      size: 442042
      nfiles: 384
  grid_search@100-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/100/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: e19edb9a09fd001564016aeb03ac34a4.dir
      size: 1365716
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 9196b59cbdfc787851becc47a9a4c721.dir
      size: 442659
      nfiles: 384
  grid_search@100-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/100/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_svc/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: b503d14cd4b7e724c18d95adead8cb68.dir
      size: 1273550
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 0d787f0f103f6a60f4ddfa0765696b6d.dir
      size: 430386
      nfiles: 384
  grid_search@100-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/100/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_svc/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: 2dfe13c8b5f01e556b459409fbb1d4ba.dir
      size: 1275197
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: 14fdc00dd5ae4ac11be744c41c556af7.dir
      size: 430650
      nfiles: 384
  grid_search@300-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/300/symmetry_true
      files.directory=ddos files.reports=reports/gzip_knn/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: 1ad4f254603894ac16c01c5112eb600d.dir
      size: 1204815
      nfiles: 513
    - path: ddos/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: 00ebb2d0c1f196333b67cf24f9e4d975.dir
      size: 101175
      nfiles: 90
  grid_search@300-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/300/symmetry_false
      files.directory=ddos files.reports=reports/gzip_knn/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 8c6a7c04df187beedea9f06ae7401338.dir
      size: 1198256
      nfiles: 513
    - path: ddos/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: aa479aaf8acfd67284a365d7d90db9e2.dir
      size: 131635
      nfiles: 117
  grid_search@300-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/300/symmetry_true
      files.directory=ddos files.reports=reports/gzip_logistic/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: 0f9002703d6510d2ca261f97c549606a.dir
      size: 1346362
      nfiles: 513
    - path: ddos/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: 50de352495626210d59fbba24b97e742.dir
      size: 447558
      nfiles: 384
  grid_search@300-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/300/symmetry_false
      files.directory=ddos files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 60c1f417c6dd9c21f0918bda053b5550.dir
      size: 1348352
      nfiles: 513
    - path: ddos/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: 85bbf66282a4be1bc904d0b79bb482f8.dir
      size: 447901
      nfiles: 384
  grid_search@300-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/300/symmetry_true
      files.directory=ddos files.reports=reports/gzip_svc/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: 2e092983dd491ae2e36ed2c114152d74.dir
      size: 1256884
      nfiles: 513
    - path: ddos/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 1848b9c93eee9958b3955891fd1c3cc0.dir
      size: 435897
      nfiles: 384
  grid_search@300-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/300/symmetry_false
      files.directory=ddos files.reports=reports/gzip_svc/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: 76298975df0f66979aa031677c8ee85d.dir
      size: 1258835
      nfiles: 513
    - path: ddos/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 22b695be0f9a8ed51a24e2a2c134e867.dir
      size: 436152
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/300/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_knn/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: 2f25b47a3629bd060d65cfccc3822a49.dir
      size: 1174214
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: 17d0ca50b31a6f1a7c54ccd84fd16283.dir
      size: 82055
      nfiles: 68
  grid_search@300-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/300/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_knn/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: c958366e4751f47c8413d21f1b2dd846.dir
      size: 1178297
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: ea0681463a7f6137b4babec436487c44.dir
      size: 115008
      nfiles: 98
  grid_search@300-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/300/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: 06ae7543abab053a2cddb8005d807e4e.dir
      size: 1355937
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: 037914c2ae5985babad8beb5818388ed.dir
      size: 438805
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/300/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 82bd1c613165ec9f9b2f7062eaf483a9.dir
      size: 1356546
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: 8e3c60e138efb736a206fcaaecfc4f43.dir
      size: 438988
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/300/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_svc/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: fcd1f5b938237c3bb6b25723c9979d17.dir
      size: 1261797
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: b7efbb3b676ee3170022ec20e1b1bdfb.dir
      size: 426251
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/300/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_svc/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: ff928143850aea1c3b6300355a580d2f.dir
      size: 1263686
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 430c34782e78e574878f5e92a767237e.dir
      size: 426770
      nfiles: 384
  grid_search@300-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/300/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_knn/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: aa7ab0c2aaa977771a0db33e10167fa1.dir
      size: 1162363
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: b7ee668d0e59c4e5d722d9dae807b38d.dir
      size: 95926
      nfiles: 85
  grid_search@300-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/300/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_knn/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 8084b32ff92bb760948bc360520e6460.dir
      size: 1103176
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: 8108c4631275f809da57378890dcaccf.dir
      size: 6566
      nfiles: 5
  grid_search@300-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/300/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: f86b24e6e489c85d6194fa177dd1d381.dir
      size: 1354269
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: f84ffffbc6f1b700d9af59bd3ae9a35c.dir
      size: 438933
      nfiles: 384
  grid_search@300-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/300/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 0ce9fa265d1dfd1b21522cb3a189d8c2.dir
      size: 1355165
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: ff63f4982dd5d70986f661b85cde378b.dir
      size: 439041
      nfiles: 384
  grid_search@300-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/300/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_svc/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: 20527ae39a0c8368963712788385f544.dir
      size: 1260700
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 10d3b4fb7871b1f8172c63dfa0c3492d.dir
      size: 426369
      nfiles: 384
  grid_search@300-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/300/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_svc/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: fbfc546692fbaa6137fc0263bfb21011.dir
      size: 1263047
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 48f940046123446ec21837139912364f.dir
      size: 426830
      nfiles: 384
  grid_search@300-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/300/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_knn/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: 8e6cb5efdd7fe83dec6a5f242a3126fd.dir
      size: 1211079
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: 236228f851d92b64af909f00b46f3544.dir
      size: 200271
      nfiles: 174
  grid_search@300-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/300/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_knn/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 6d00773685808afe9ae09e8130da2897.dir
      size: 1201472
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: eb25d85c537c804761efe232a26bed33.dir
      size: 171264
      nfiles: 151
  grid_search@300-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/300/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: af67fcf3c726fec3e17bc3ba4c22b09b.dir
      size: 1363259
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: d3728bd1721b14afdcf3d51291e82d40.dir
      size: 442857
      nfiles: 384
  grid_search@300-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/300/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 04fd086586d699fa40ffdc7f7d7458bc.dir
      size: 1365083
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: eb0d93e53b6022ea0ba96c5c8c771eca.dir
      size: 442963
      nfiles: 384
  grid_search@300-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/300/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_svc/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: dfc8859e041a1c7ed531eb09d27019b9.dir
      size: 1274094
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 684a585382e811aa80b8dcdf0a15c5a5.dir
      size: 431059
      nfiles: 384
  grid_search@300-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/300/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_svc/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: d8119c0fe506ac0985d99a11ed20e37a.dir
      size: 1275743
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 17abdc6df1c9c17fad4ae6f42264254d.dir
      size: 431299
      nfiles: 384
  grid_search@500-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/500/symmetry_true
      files.directory=ddos files.reports=reports/gzip_knn/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 1f96352bfcd1b8505412d8d7170c6abd.dir
      size: 1202149
      nfiles: 513
    - path: ddos/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: 0beab1fb33df40645bf010e1319a9dab.dir
      size: 121243
      nfiles: 108
  grid_search@500-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/500/symmetry_false
      files.directory=ddos files.reports=reports/gzip_knn/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: f7703d4d40b1ea9ad5d41e64cbabf8e9.dir
      size: 1205756
      nfiles: 513
    - path: ddos/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 035b3b8c28de52e1cda43c8066368138.dir
      size: 131401
      nfiles: 116
  grid_search@500-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/500/symmetry_true
      files.directory=ddos files.reports=reports/gzip_logistic/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: b2125e72a926dd50541509870789d5f8.dir
      size: 1346140
      nfiles: 513
    - path: ddos/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 9d55959b8057984d6643a64a9b06709e.dir
      size: 447242
      nfiles: 384
  grid_search@500-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/500/symmetry_false
      files.directory=ddos files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: bd12a448fbaeec72df93ca456661357f.dir
      size: 1347841
      nfiles: 513
    - path: ddos/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: ab82c48a5050d1e089e91fdbc32d3734.dir
      size: 447574
      nfiles: 384
  grid_search@500-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/500/symmetry_true
      files.directory=ddos files.reports=reports/gzip_svc/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: 4aa2ffffb4df25c71d636e0548c80758.dir
      size: 1256842
      nfiles: 513
    - path: ddos/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: d2a808b2cee23805c530590cc973d873.dir
      size: 435556
      nfiles: 384
  grid_search@500-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/500/symmetry_false
      files.directory=ddos files.reports=reports/gzip_svc/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: 5d6646f65d1a51936f5b16244e66d36f.dir
      size: 1258646
      nfiles: 513
    - path: ddos/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 1c13295c06d15ac4e97d337a27b63264.dir
      size: 435877
      nfiles: 384
  grid_search@500-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/500/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_knn/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 74722bad33670460023e82d0944430b4.dir
      size: 1173079
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: d548d5a51a767fa9a838215a209f9b71.dir
      size: 85303
      nfiles: 72
  grid_search@500-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/500/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_knn/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: 5dce7c14969772c3f53cb6d9f5ca836d.dir
      size: 1169617
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 5d75ca8edfb0f0cf53df8fa504c4c352.dir
      size: 32845
      nfiles: 28
  grid_search@500-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/500/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: e6f70de5f551b3e6d4e2d79c47d56041.dir
      size: 1354340
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: b1fcdee142b6ba4cb6f1f55eec86b080.dir
      size: 438222
      nfiles: 384
  grid_search@500-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/500/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: 1432d4dd1f5eb667289f6025e83e45ad.dir
      size: 1356051
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: a4354e4a4e749c4498542d957dc7838c.dir
      size: 438519
      nfiles: 384
  grid_search@500-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/500/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_svc/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: 194fa4bc7f4637fd048e7b8ab1b4bca1.dir
      size: 1261470
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: d63ce8e17525155b63a5b946a12c97e5.dir
      size: 425946
      nfiles: 384
  grid_search@500-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/500/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_svc/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: 5fa5f7ab2888538f581adc83b06cd2f1.dir
      size: 1263448
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 680abbd617fb9404f44215bf4fd27e90.dir
      size: 426305
      nfiles: 384
  grid_search@500-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/500/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_knn/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 6e6fc129d19bc5443ab90ad63eb42ac4.dir
      size: 1101640
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: f9944a4234f236b0b1b6f65f2aa44924.dir
      size: 6563
      nfiles: 5
  grid_search@500-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/500/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_knn/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: 234718eebc523ba85e1a508c0c9c9700.dir
      size: 1103177
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 139bd96197c01d737e44ada047b972d4.dir
      size: 6567
      nfiles: 5
  grid_search@500-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/500/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: 6ae34741e739da4558dcf664258c8c59.dir
      size: 1353216
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 1d623dd4b1974208861a8db2158cc690.dir
      size: 438441
      nfiles: 384
  grid_search@500-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/500/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: c992155a2e4968e722b864f2c7dac469.dir
      size: 1353505
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: ea4eafb193d37136360e31e264640fed.dir
      size: 438326
      nfiles: 384
  grid_search@500-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/500/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_svc/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: e3126fb385d19c1afdb064aed73e5d3b.dir
      size: 1264349
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: 36f627b3ccd8c11f8c3561eeeda13fa6.dir
      size: 426846
      nfiles: 384
  grid_search@500-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/500/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_svc/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: b7544aeb4e84815f4e572900a35f5bec.dir
      size: 1265864
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 14fc2f085b577e06c3216e451e97bd61.dir
      size: 427109
      nfiles: 384
  grid_search@500-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/500/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_knn/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 394084b8e76f2464a936d97dc308d978.dir
      size: 1194615
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: c2469d75bb9a243fd56ab213e4391241.dir
      size: 185859
      nfiles: 153
  grid_search@500-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/500/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_knn/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: f32b5badacb1cff7f3157c2099f3c72b.dir
      size: 1199070
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 9d6412974692fab4a35923cb090b846d.dir
      size: 162831
      nfiles: 139
  grid_search@500-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/500/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: a90dda29fb833e5893b5efe82ab3aaa3.dir
      size: 1363281
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 484651a351a5454d44e20e3312511dc2.dir
      size: 442444
      nfiles: 384
  grid_search@500-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/500/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: 62f72c3e098a6c4020f20189223a82d5.dir
      size: 1364780
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: 58296a15760e8ba7a2b36d5381819770.dir
      size: 442663
      nfiles: 384
  grid_search@500-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/500/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_svc/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: dd342156de8cfb6d1df548c738db2059.dir
      size: 1273855
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: 4cd3d121eda79e020df8d3bcaf0935ed.dir
      size: 430704
      nfiles: 384
  grid_search@500-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/500/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_svc/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: c34179ee6f37646ae1bb6e67335d74aa.dir
      size: 1275480
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 03dbead0f122c9445893d886db1c2dbc.dir
      size: 430970
      nfiles: 384
  precompute_matrices@ddos-knn-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_knn model=gzip_knn model.init.condensing_method=null
      ++model.init.m=1 ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/
      hydra.sweeper.study_name=gzip_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true
      hash: md5
      md5: d89bef13e02c2547e2309f1a97b51fd0.dir
      size: 20405
      nfiles: 5
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: a163f3b10458ddd129c17bf1f0fed8c8.dir
      size: 2949738
      nfiles: 1
  precompute_matrices@ddos-knn-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_knn model=gzip_knn ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/symmetry_false/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_false
      hash: md5
      md5: 0146c3e4cf313a18db46f93418f00c90.dir
      size: 9438
      nfiles: 5
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@ddos-svc-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_svc model=gzip_svc ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/symmetry_true/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/svc/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/gzip/symmetry_true
      hash: md5
      md5: 0301482a8e404e04409ad50def62f0f1.dir
      size: 9704
      nfiles: 5
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
  precompute_matrices@ddos-svc-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_svc model=gzip_svc ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/symmetry_false/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/svc/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/gzip/symmetry_false
      hash: md5
      md5: f5bff3522360f243e0dbbf943c60fbe9.dir
      size: 9676
      nfiles: 5
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@ddos-logistic-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_logistic model=gzip_logistic ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/symmetry_true/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/logistic/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/logistic/gzip/symmetry_true
      hash: md5
      md5: 0ed905d519cd041d011c50ba8b5b5d42.dir
      size: 10070
      nfiles: 5
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
  precompute_matrices@ddos-logistic-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_logistic model=gzip_logistic ++model.init.m=1
      files.directory=ddos hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/symmetry_false/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/logistic/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/logistic/gzip/symmetry_false
      hash: md5
      md5: 8841033e813aa669e57f579ef362bbbd.dir
      size: 10093
      nfiles: 5
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
  precompute_matrices@kdd_nsl-knn-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/
      hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true
      hash: md5
      md5: 109ceee45094fc1bcbad50ba252f6d24.dir
      size: 10262
      nfiles: 5
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: deedaafe35482d338d97ae34629f2d20.dir
      size: 1701417
      nfiles: 1
  precompute_matrices@kdd_nsl-knn-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_knn_kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_false
      hash: md5
      md5: cb4deca66256c88c7bf3de677d11b4a9.dir
      size: 9351
      nfiles: 5
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@kdd_nsl-svc-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_svc_kdd_nsl
      files.reports=reports/condense/svc/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/svc/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/svc/gzip/symmetry_true
      hash: md5
      md5: 0ebe892168333ec703fd918c32d35886.dir
      size: 9687
      nfiles: 5
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
  precompute_matrices@kdd_nsl-svc-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_svc_kdd_nsl
      files.reports=reports/condense/svc/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/svc/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/svc/gzip/symmetry_false
      hash: md5
      md5: da8795bae71706fc84688751e8bfc733.dir
      size: 9729
      nfiles: 5
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@kdd_nsl-logistic-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic model.init.condensing_method=null ++model.init.m=1 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/logistic/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/logistic/gzip/symmetry_true/
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/logistic/gzip/symmetry_true
      hash: md5
      md5: 7aa3bf52e3ed6e12d23c6342fbe064a6.dir
      size: 11374
      nfiles: 5
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
  precompute_matrices@kdd_nsl-logistic-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=kdd_nsl hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      files.reports=reports/condense/logistic/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=kdd_nsl/logs/precompute/logistic/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/logistic/gzip/symmetry_false
      hash: md5
      md5: 5c3f56285a772120609f250c70c26225.dir
      size: 10002
      nfiles: 5
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
  precompute_matrices@truthseeker-knn-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_knn_truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true
      hash: md5
      md5: 0d2ef251fc36826cbff18f5e31fb8405.dir
      size: 9437
      nfiles: 5
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@truthseeker-knn-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_knn_truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_false
      hash: md5
      md5: 82c6a417060078bf74e40d978d749d41.dir
      size: 9430
      nfiles: 5
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
  precompute_matrices@truthseeker-logistic-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.condensing_method=None ++model.init.m=1 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/logistic/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/logistic/gzip/symmetry_true/
      hydra.sweeper.study_name=gzip_logistic_truthseeker hydra.launcher.n_jobs=-1
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/logistic/gzip/symmetry_true
      hash: md5
      md5: 2bb42b836f934e144f8eec45f5cba718.dir
      size: 13358
      nfiles: 5
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
  precompute_matrices@truthseeker-logistic-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_logistic_truthseeker
      files.reports=reports/condense/logistic/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/logistic/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/logistic/gzip/symmetry_false
      hash: md5
      md5: ea05d4ef2e26ec11c84bba9f68048c52.dir
      size: 10139
      nfiles: 5
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@sms_spam-knn-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_true/
      hydra.sweeper.study_name=gzip_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_true
      hash: md5
      md5: 5a79e6b23c9ec2e5c2f9cdebc0d72b37.dir
      size: 12574
      nfiles: 5
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 19b2c46f0162c1dbd066ba09e4ca93cd.dir
      size: 2364486
      nfiles: 1
  precompute_matrices@sms_spam-knn-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_knn model=gzip_knn
      ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_knn_sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 0a04ae993ca6f056090825a4b5ad78fa
      size: 1882
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_false
      hash: md5
      md5: af72813ff474411655e85aaff4a2bfcc.dir
      size: 9366
      nfiles: 5
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@sms_spam-svc-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/svc/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/svc/gzip/symmetry_true/
      hydra.sweeper.study_name=gzip_svc_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 1bb7b24238f513bfa2ac2f99cd30671d
      size: 1986
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/svc/gzip/symmetry_true
      hash: md5
      md5: 79fb71e65c12fd97058465758d45e4be.dir
      size: 10854
      nfiles: 5
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
  precompute_matrices@sms_spam-svc-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_svc_sms_spam
      files.reports=reports/condense/svc/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/svc/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/svc/gzip/symmetry_false
      hash: md5
      md5: 6d5f92219b9da1ba5fcf6c210d276e85.dir
      size: 9717
      nfiles: 5
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  precompute_matrices@sms_spam-logistic-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_logistic_sms_spam
      files.reports=reports/condense/logistic/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/logistic/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/logistic/gzip/symmetry_true
      hash: md5
      md5: 06a1a6f04f83e374cc5974587c9aaa56.dir
      size: 10022
      nfiles: 5
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
  precompute_matrices@sms_spam-logistic-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_logistic
      model=gzip_logistic ++model.init.m=1 files.directory=sms_spam hydra.sweeper.study_name=gzip_logistic_sms_spam
      files.reports=reports/condense/logistic/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=sms_spam/logs/precompute/logistic/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 95d80f17b442b3f31f7e1579b40d8285
      size: 2097
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/logistic/gzip/symmetry_false
      hash: md5
      md5: 774ad64e22bc585983be657401e4211c.dir
      size: 10035
      nfiles: 5
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
  condense@ddos-knn-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.9/symmetry_true/
      hash: md5
      md5: 4a123d788948ca1b980b7b77abcc889c.dir
      size: 1173776
      nfiles: 513
  condense@ddos-knn-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.9/symmetry_false/
      hash: md5
      md5: 1e972428837615b3cc85e13154e2e49c.dir
      size: 1160076
      nfiles: 513
  condense@ddos-knn-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.8/symmetry_true/
      hash: md5
      md5: 0ee1e4f97ad58dbb1253a88420f7dfa7.dir
      size: 1173811
      nfiles: 513
  condense@ddos-knn-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.8/symmetry_false/
      hash: md5
      md5: 19a678699d64db00ea36298650514405.dir
      size: 1175840
      nfiles: 513
  condense@ddos-knn-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.7/symmetry_true/
      hash: md5
      md5: 7252c16b758711443fb6353538a34a0f.dir
      size: 1170593
      nfiles: 513
  condense@ddos-knn-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.7/symmetry_false/
      hash: md5
      md5: 028d583cc5015622a26206827ea157aa.dir
      size: 1161289
      nfiles: 513
  condense@ddos-knn-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.6/symmetry_true/
      hash: md5
      md5: 89b1cb422918186b0ec0479e0d807480.dir
      size: 1174051
      nfiles: 513
  condense@ddos-knn-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.6/symmetry_false/
      hash: md5
      md5: 3c1687b9281abd5a81e2a8a81bce644e.dir
      size: 1175277
      nfiles: 513
  condense@ddos-knn-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.5/symmetry_true/
      hash: md5
      md5: 35487b7deb0cb24b37004ebf8995dd8b.dir
      size: 1174152
      nfiles: 513
  condense@ddos-knn-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.5/symmetry_false/
      hash: md5
      md5: 7fa018cc5bb15bc22bdb7620841e8be0.dir
      size: 1175536
      nfiles: 513
  condense@ddos-knn-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.4/symmetry_true/
      hash: md5
      md5: 5f5b1f18bc9acdc41f3a5b3807e16a30.dir
      size: 1173805
      nfiles: 513
  condense@ddos-knn-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.4/symmetry_false/
      hash: md5
      md5: 77a11ff580743f10adf93091a452019f.dir
      size: 1175819
      nfiles: 513
  condense@ddos-knn-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.3/symmetry_true/
      hash: md5
      md5: 31348d13111b526a779093e4ca77046d.dir
      size: 1174089
      nfiles: 513
  condense@ddos-knn-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.3/symmetry_false/
      hash: md5
      md5: 4d21b941bba9737c72c5152c2e4dd330.dir
      size: 1175881
      nfiles: 513
  condense@ddos-knn-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.2/symmetry_true/
      hash: md5
      md5: 3f92852396d592fbcde670db06f1f557.dir
      size: 1173846
      nfiles: 513
  condense@ddos-knn-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.2/symmetry_false/
      hash: md5
      md5: c9fb8cbf8a9329d743cc0475e8c59e1a.dir
      size: 1174976
      nfiles: 513
  condense@ddos-knn-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.1/symmetry_true/
      hash: md5
      md5: f2581ee8d9940c428dfd900b7d43f13c.dir
      size: 1173761
      nfiles: 513
  condense@ddos-knn-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=knn model=gzip_knn ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_ddos files.reports=reports/condense/knn/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/knn/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: ddos/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/knn/gzip/0.1/symmetry_false/
      hash: md5
      md5: c06977f71062deab4e363f8e26827af1.dir
      size: 1159680
      nfiles: 513
  condense@ddos-svc-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.9/symmetry_true/
      hash: md5
      md5: 9893daa196026aef3c7a503a98628f19.dir
      size: 1446807
      nfiles: 513
  condense@ddos-svc-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.9/symmetry_false/
      hash: md5
      md5: f69b7e8ad9e92bebc326542f27f10a9e.dir
      size: 1266726
      nfiles: 513
  condense@ddos-svc-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.8/symmetry_true/
      hash: md5
      md5: 675b2dfee0e5386853da94cace1a9e88.dir
      size: 1264976
      nfiles: 513
  condense@ddos-svc-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.8/symmetry_false/
      hash: md5
      md5: bb9c0907ccf775caf9a5f0fdd6bd8c5a.dir
      size: 1266525
      nfiles: 513
  condense@ddos-svc-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.7/symmetry_true/
      hash: md5
      md5: 0f425c4ce76b1fb466bcd78e94d80aa6.dir
      size: 1265088
      nfiles: 513
  condense@ddos-svc-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.7/symmetry_false/
      hash: md5
      md5: f488d7ecc864e649d33517328985db18.dir
      size: 1266340
      nfiles: 513
  condense@ddos-svc-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.6/symmetry_true/
      hash: md5
      md5: dda030acde4846a29ce050b069f48963.dir
      size: 1265196
      nfiles: 513
  condense@ddos-svc-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.6/symmetry_false/
      hash: md5
      md5: 97a42fd998b925d78243f70cf1d48c83.dir
      size: 1266740
      nfiles: 513
  condense@ddos-svc-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.5/symmetry_true/
      hash: md5
      md5: aadb5fa2962586e292e51d0ad28974f6.dir
      size: 1264817
      nfiles: 513
  condense@ddos-svc-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.5/symmetry_false/
      hash: md5
      md5: 3388e104c317a3d235af411d63c568fc.dir
      size: 1266315
      nfiles: 513
  condense@ddos-svc-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.4/symmetry_true/
      hash: md5
      md5: c388ddb3fa63a9417ac1cdbf432a3800.dir
      size: 1264991
      nfiles: 513
  condense@ddos-svc-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.4/symmetry_false/
      hash: md5
      md5: e5d4f8699f478d3ed772610e11afa9a5.dir
      size: 1266837
      nfiles: 513
  condense@ddos-svc-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.3/symmetry_true/
      hash: md5
      md5: 62b47a43e6d3fb795f2d8be8fd701ac1.dir
      size: 1264639
      nfiles: 513
  condense@ddos-svc-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.3/symmetry_false/
      hash: md5
      md5: ef6fa402451fbc778cc265530a779d78.dir
      size: 1266610
      nfiles: 513
  condense@ddos-svc-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.2/symmetry_true/
      hash: md5
      md5: 4c9ebd0f45914fbf96497e9fa2f9c165.dir
      size: 1264842
      nfiles: 513
  condense@ddos-svc-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.2/symmetry_false/
      hash: md5
      md5: d46d97871ea4a3f54abccf48af9a739b.dir
      size: 1266953
      nfiles: 513
  condense@ddos-svc-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.1/symmetry_true/
      hash: md5
      md5: 4ccb0adea75d5875fcec813abfd123b0.dir
      size: 1264414
      nfiles: 513
  condense@ddos-svc-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=svc model=gzip_svc ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos ++model.init.distance_matrix=ddos/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_ddos files.reports=reports/condense/svc/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/svc/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: ddos/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/svc/gzip/0.1/symmetry_false/
      hash: md5
      md5: 4a0a45a159fde66f111a677a1dd48afd.dir
      size: 1266852
      nfiles: 513
  condense@ddos-logistic-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.9
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.9/symmetry_true/
      hash: md5
      md5: 120ece1c2379e3e6a991efb79d290f4f.dir
      size: 1408794
      nfiles: 513
  condense@ddos-logistic-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.9
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.9/symmetry_false/
      hash: md5
      md5: 17ae3a9e99c8ba8b67e8d0735df33c08.dir
      size: 1404057
      nfiles: 513
  condense@ddos-logistic-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.8
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.8/symmetry_true/
      hash: md5
      md5: 06f5885001dac43d0fcd2c2a425a57be.dir
      size: 1316115
      nfiles: 513
  condense@ddos-logistic-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.8
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.8/symmetry_false/
      hash: md5
      md5: 35c9255668d57bc3011b9ab81fd6e751.dir
      size: 1493127
      nfiles: 513
  condense@ddos-logistic-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.7
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.7/symmetry_true/
      hash: md5
      md5: 1018be5cc34d267e3b2e06ab2b16312c.dir
      size: 1406898
      nfiles: 513
  condense@ddos-logistic-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.7
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.7/symmetry_false/
      hash: md5
      md5: ff6814e580be8aebe0652108dd572304.dir
      size: 1414822
      nfiles: 513
  condense@ddos-logistic-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.6
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.6/symmetry_true/
      hash: md5
      md5: 73f6ac4aaec1806ae722526d090292d9.dir
      size: 1408713
      nfiles: 513
  condense@ddos-logistic-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.6
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.6/symmetry_false/
      hash: md5
      md5: 22f9b32a8033250ef5d0b03ff7457108.dir
      size: 1411557
      nfiles: 513
  condense@ddos-logistic-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.5
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.5/symmetry_true/
      hash: md5
      md5: 736b195d2d2df0f616c418e2c3844b90.dir
      size: 1405495
      nfiles: 513
  condense@ddos-logistic-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.5
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.5/symmetry_false/
      hash: md5
      md5: 29623d53a0dea2ab4ba379b22f3372eb.dir
      size: 1404698
      nfiles: 513
  condense@ddos-logistic-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.4
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.4/symmetry_true/
      hash: md5
      md5: f84a44aea111eae29fdbc3ef49d56810.dir
      size: 1412716
      nfiles: 513
  condense@ddos-logistic-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.4
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.4/symmetry_false/
      hash: md5
      md5: 8e47c9cd2446e0c943357b9b893c20f5.dir
      size: 1412721
      nfiles: 513
  condense@ddos-logistic-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.3
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.3/symmetry_true/
      hash: md5
      md5: 6c07b0b7ffc7248cbcb09e7635a0842f.dir
      size: 1405450
      nfiles: 513
  condense@ddos-logistic-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.3
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.3/symmetry_false/
      hash: md5
      md5: 6af0ff66710a5910b14ba3fbde089fd6.dir
      size: 1411532
      nfiles: 513
  condense@ddos-logistic-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.2
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.2/symmetry_true/
      hash: md5
      md5: 85b9272596ab48ea631055ac6f243921.dir
      size: 1408585
      nfiles: 513
  condense@ddos-logistic-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.2
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.2/symmetry_false/
      hash: md5
      md5: 4f3d354213f4b802f014d6fa0b2c1d57.dir
      size: 1411384
      nfiles: 513
  condense@ddos-logistic-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.1
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.1/symmetry_true/
      hash: md5
      md5: fdaccaa8456c9d781ef2f3dc10d1df16.dir
      size: 1413666
      nfiles: 513
  condense@ddos-logistic-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=logistic model=gzip_logistic ++model.init.m=0.1
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_ddos files.reports=reports/condense/logistic/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=ddos/logs/logistic/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: ddos/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 6e3dbfb0f95801ec50ba9b5893efde06.dir
      size: 2954262
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/condense/logistic/gzip/0.1/symmetry_false/
      hash: md5
      md5: 3038984e5543418fa351645b47a27aac.dir
      size: 1412802
      nfiles: 513
  condense@kdd_nsl-knn-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_true/
      hash: md5
      md5: 2afba962f5b852ba0a42ef042d891452.dir
      size: 1237480
      nfiles: 513
  condense@kdd_nsl-knn-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_false/
      hash: md5
      md5: 2c69d36ead4f0c500872404b3992f19d.dir
      size: 1190210
      nfiles: 513
  condense@kdd_nsl-knn-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_true/
      hash: md5
      md5: 01b9f69342017f4d91187df94e471920.dir
      size: 1255031
      nfiles: 513
  condense@kdd_nsl-knn-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_false/
      hash: md5
      md5: ccc861f3000c39de3caf4cc6fa792a29.dir
      size: 1228456
      nfiles: 513
  condense@kdd_nsl-knn-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_true/
      hash: md5
      md5: e32900cef4eeef89d8ceeb548f30ddf5.dir
      size: 1248952
      nfiles: 513
  condense@kdd_nsl-knn-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_false/
      hash: md5
      md5: 2d75232663ae2784e95f89584fecb876.dir
      size: 1242185
      nfiles: 513
  condense@kdd_nsl-knn-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_true/
      hash: md5
      md5: 4675e2e56f039aa3f1bd5df7ffdec60d.dir
      size: 1246053
      nfiles: 513
  condense@kdd_nsl-knn-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_false/
      hash: md5
      md5: b4a1e6ce6dc0115088674261ba0e1ed8.dir
      size: 1248580
      nfiles: 513
  condense@kdd_nsl-knn-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_true/
      hash: md5
      md5: 266348eb0fcf1f29a434310d3a7570d5.dir
      size: 1249899
      nfiles: 513
  condense@kdd_nsl-knn-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_false/
      hash: md5
      md5: 3e4434b7ebbe06d2c319f8eba0a94d99.dir
      size: 1248928
      nfiles: 513
  condense@kdd_nsl-knn-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_true/
      hash: md5
      md5: a46a125f68f49dac139a6269fe47db45.dir
      size: 1253299
      nfiles: 513
  condense@kdd_nsl-knn-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_false/
      hash: md5
      md5: 1d4640f481fffd4f56a4a78e4fc788a3.dir
      size: 1237355
      nfiles: 513
  condense@kdd_nsl-knn-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_true/
      hash: md5
      md5: 2176e1739ea08ebd7fd893ca9edcdbea.dir
      size: 1250453
      nfiles: 513
  condense@kdd_nsl-knn-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_false/
      hash: md5
      md5: b49f584d75f1749719f111de1cc6e350.dir
      size: 1243362
      nfiles: 513
  condense@kdd_nsl-knn-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_true/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: deedaafe35482d338d97ae34629f2d20.dir
      size: 1701417
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_true/
      hash: md5
      md5: 74aeea25351a01d5ddf9e6318ad4e904.dir
      size: 1277905
      nfiles: 513
  condense@kdd_nsl-knn-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_false/
      hash: md5
      md5: 5cdacf7a9f2ad569f416ec9de9a74f6a.dir
      size: 1256553
      nfiles: 513
  condense@kdd_nsl-knn-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_true/
      hash: md5
      md5: 248f9b6e8225c6a221015c3802f7ea00.dir
      size: 1234717
      nfiles: 513
  condense@kdd_nsl-knn-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_kdd_nsl files.reports=reports/condense/knn/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/knn/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: kdd_nsl/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_false/
      hash: md5
      md5: 5b257ab195bc2ffca8d134310b3b4c9a.dir
      size: 1253497
      nfiles: 513
  condense@kdd_nsl-svc-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_true/
      hash: md5
      md5: 41566d5cf53eca27946e6f24ead2a91e.dir
      size: 1370992
      nfiles: 513
  condense@kdd_nsl-svc-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_false/
      hash: md5
      md5: 5695b25449234b0e75e32b7565bf4b6a.dir
      size: 1374167
      nfiles: 513
  condense@kdd_nsl-svc-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_true/
      hash: md5
      md5: dcaf4e03fa9180cfb81bd0225ded40f8.dir
      size: 1371875
      nfiles: 513
  condense@kdd_nsl-svc-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_false/
      hash: md5
      md5: 33bb676163f9b11b1c971f9531ae4f94.dir
      size: 1374132
      nfiles: 513
  condense@kdd_nsl-svc-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_true/
      hash: md5
      md5: 62be138a5cb1b151398e944a3b9e5895.dir
      size: 1371845
      nfiles: 513
  condense@kdd_nsl-svc-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_false/
      hash: md5
      md5: f09794bdf8e316e70a51015fd7e00871.dir
      size: 1374242
      nfiles: 513
  condense@kdd_nsl-svc-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_true/
      hash: md5
      md5: d94c7052568f1eaf7f6b2f358f289b00.dir
      size: 1371842
      nfiles: 513
  condense@kdd_nsl-svc-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_false/
      hash: md5
      md5: ce1cfe8a2ce74813a11600b27cff6e28.dir
      size: 1373875
      nfiles: 513
  condense@kdd_nsl-svc-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_true/
      hash: md5
      md5: e5b7f29e624eee174faa6d319267f4b1.dir
      size: 1372059
      nfiles: 513
  condense@kdd_nsl-svc-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_false/
      hash: md5
      md5: 3e961242d3793ab916308a94e73fe8c2.dir
      size: 1374132
      nfiles: 513
  condense@kdd_nsl-svc-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_true/
      hash: md5
      md5: bbb8684982f07916ac56df3ebfdb29ba.dir
      size: 1372035
      nfiles: 513
  condense@kdd_nsl-svc-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_false/
      hash: md5
      md5: 974cdad120d2b964eafa1e6eb3a06412.dir
      size: 1374273
      nfiles: 513
  compile@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_logistic  --results_file
      sms_spam/reports/gzip_logistic.csv
    deps:
    - path: sms_spam/reports/gzip_logistic/
      hash: md5
      md5: 0298f045ee21903024f31a4a9453b189.dir
      size: 3506698
      nfiles: 3072
    outs:
    - path: sms_spam/reports/gzip_logistic.csv
      hash: md5
      md5: 04191416a6b9dd9eb84eefc9aa14df5b
      size: 1241610
  clean@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_logistic.csv
      -o sms_spam/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_logistic.csv
      hash: md5
      md5: 04191416a6b9dd9eb84eefc9aa14df5b
      size: 1241610
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_logistic.csv
      hash: md5
      md5: c4714a99aef1cd2d92dffbd225837b20
      size: 992019
  precompute_matrices@truthseeker-svc-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_svc_truthseeker
      files.reports=reports/condense/svc/gzip/symmetry_true/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/svc/gzip/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/svc/gzip/symmetry_true
      hash: md5
      md5: c75d3265bfaca06ab0ab8d8299821f0e.dir
      size: 9856
      nfiles: 5
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
  precompute_matrices@truthseeker-svc-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=gzip_svc model=gzip_svc
      ++model.init.m=1 files.directory=truthseeker hydra.sweeper.study_name=gzip_svc_truthseeker
      files.reports=reports/condense/svc/gzip/symmetry_false/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=truthseeker/logs/precompute/svc/gzip/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz  ~hydra.callbacks.study_dump
      --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: b525fff11e6d72d3558bf2ac8174f5a8
      size: 2003
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/svc/gzip/symmetry_false
      hash: md5
      md5: 6caaaad96eecd61f53865d9a2e42fd02.dir
      size: 9853
      nfiles: 5
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
  condense@kdd_nsl-svc-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_true/
      hash: md5
      md5: f9f366758f0d2bbbac82bb692261a941.dir
      size: 1372342
      nfiles: 513
  condense@kdd_nsl-svc-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_false/
      hash: md5
      md5: 7ce2471af51af73d979de7e81dad216c.dir
      size: 1373956
      nfiles: 513
  condense@kdd_nsl-svc-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_true/
      hash: md5
      md5: 8c6f90d3d540f45899ce1b23b77c1019.dir
      size: 1372357
      nfiles: 513
  condense@kdd_nsl-svc-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_false/
      hash: md5
      md5: a51b1fd78c28fd242602cbf4e36d97ea.dir
      size: 1374130
      nfiles: 513
  condense@kdd_nsl-svc-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_true/
      hash: md5
      md5: 8b576dce50fd54af82d85d1788a8ee02.dir
      size: 1371969
      nfiles: 513
  condense@kdd_nsl-svc-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_kdd_nsl files.reports=reports/condense/svc/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/svc/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: kdd_nsl/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_false/
      hash: md5
      md5: 5ae2dab64ead2ce7bcc617bdffbc0dcb.dir
      size: 1373655
      nfiles: 513
  condense@kdd_nsl-logistic-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_true/
      hash: md5
      md5: 6898beb5cc957aacbe5581e15656e535.dir
      size: 1307758
      nfiles: 513
  condense@kdd_nsl-logistic-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_false/
      hash: md5
      md5: f01bd811c7dee0bab74564bcb7b4896b.dir
      size: 1311012
      nfiles: 513
  condense@kdd_nsl-logistic-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_true/
      hash: md5
      md5: 18a62a4793e1c88b4fdb44606de43910.dir
      size: 1308432
      nfiles: 513
  condense@kdd_nsl-logistic-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_false/
      hash: md5
      md5: 3c697790e24d1d1ef4f1259d64bd27f1.dir
      size: 1309470
      nfiles: 513
  condense@kdd_nsl-logistic-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_true/
      hash: md5
      md5: a8f3e087eb58f72403693976c1035e24.dir
      size: 1309607
      nfiles: 513
  condense@kdd_nsl-logistic-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_false/
      hash: md5
      md5: e8b296c84804bfc012df3816a226085b.dir
      size: 1313078
      nfiles: 513
  condense@kdd_nsl-logistic-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_true/
      hash: md5
      md5: 8f3ae20b1b8e9b918d78dfa91bcc20ed.dir
      size: 1307927
      nfiles: 513
  condense@kdd_nsl-logistic-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_false/
      hash: md5
      md5: 42c3ecb676aaf2c9c7e0de58bd7cae91.dir
      size: 1310996
      nfiles: 513
  condense@kdd_nsl-logistic-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_true/
      hash: md5
      md5: e6796bdb345730bfef9352ee6c07b720.dir
      size: 1307056
      nfiles: 513
  condense@kdd_nsl-logistic-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_false/
      hash: md5
      md5: 8344ccf6369a9e4e61adfe00900f9653.dir
      size: 1308502
      nfiles: 513
  condense@kdd_nsl-logistic-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_true/
      hash: md5
      md5: 912c280625f51a92647aef96a9405407.dir
      size: 1311970
      nfiles: 513
  condense@kdd_nsl-logistic-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_false/
      hash: md5
      md5: e935ff137104735f8932859d26e33ecb.dir
      size: 1311402
      nfiles: 513
  condense@kdd_nsl-logistic-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_true/
      hash: md5
      md5: 4caf3f13ca2d206aabc8b25acc1e07bd.dir
      size: 1308964
      nfiles: 513
  condense@kdd_nsl-logistic-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_false/
      hash: md5
      md5: 6f08a05cb24298e18d498567faaeb5ec.dir
      size: 1312032
      nfiles: 513
  condense@kdd_nsl-logistic-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_true/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_true/
      hash: md5
      md5: 19a0ae14ec7e5c94342983a48686371e.dir
      size: 1427282
      nfiles: 513
  condense@kdd_nsl-logistic-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_false/
      hash: md5
      md5: 5dbb016a212394629051a8e00a8cab0c.dir
      size: 1310960
      nfiles: 513
  condense@kdd_nsl-logistic-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_true/
      hash: md5
      md5: 3b288c3b561465b520c912fb1dd67386.dir
      size: 1309711
      nfiles: 513
  condense@kdd_nsl-logistic-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_kdd_nsl files.reports=reports/condense/logistic/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=kdd_nsl/logs/logistic/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: kdd_nsl/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: cf134076d2259c5a69b968c4d2a15931.dir
      size: 1705656
      nfiles: 1
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_false/
      hash: md5
      md5: 72812a991ef3c94cfd85b862f4425a21.dir
      size: 1312046
      nfiles: 513
  condense@truthseeker-knn-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.9/symmetry_true/
      hash: md5
      md5: 021171306cdacc72fea12a3bac89955a.dir
      size: 1312792
      nfiles: 513
  condense@truthseeker-knn-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.9/symmetry_false/
      hash: md5
      md5: 17dcd24b1a2551f68eda4c99acd5a570.dir
      size: 1291979
      nfiles: 513
  condense@truthseeker-knn-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.8/symmetry_true/
      hash: md5
      md5: 0562d2f06475f71cdaef602364515fc7.dir
      size: 1294849
      nfiles: 513
  condense@truthseeker-knn-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.8/symmetry_false/
      hash: md5
      md5: f44f0b20bc3b1a42a693508cb0051775.dir
      size: 1292127
      nfiles: 513
  condense@truthseeker-knn-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.7/symmetry_true/
      hash: md5
      md5: f2c5f4c30fb3ff8507e7352cca177466.dir
      size: 1297149
      nfiles: 513
  condense@truthseeker-knn-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.7/symmetry_false/
      hash: md5
      md5: 22463c178ce028d3ba7ebeee4a61718c.dir
      size: 1320683
      nfiles: 513
  condense@truthseeker-knn-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.6/symmetry_true/
      hash: md5
      md5: 3a2162df1b72a549a94aba9373e6e78f.dir
      size: 1313880
      nfiles: 513
  condense@truthseeker-knn-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.6/symmetry_false/
      hash: md5
      md5: e6e52a06d8739c14db2512d3dddd1792.dir
      size: 1315228
      nfiles: 513
  condense@truthseeker-knn-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.5/symmetry_true/
      hash: md5
      md5: 2f775cb798ae83fa0449d9908593438c.dir
      size: 1300043
      nfiles: 513
  condense@truthseeker-knn-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.5/symmetry_false/
      hash: md5
      md5: 73a866fe0c43cc4ceb8ad587d976a459.dir
      size: 1315862
      nfiles: 513
  condense@truthseeker-knn-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.4/symmetry_true/
      hash: md5
      md5: 86dfc00a4c414e9e00de53273a2d811b.dir
      size: 1301594
      nfiles: 513
  condense@truthseeker-knn-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.4/symmetry_false/
      hash: md5
      md5: bb5d2c3647fccdedffafd367097c4611.dir
      size: 1315687
      nfiles: 513
  condense@truthseeker-knn-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.3/symmetry_true/
      hash: md5
      md5: 94243903e6e52c74bba06ecd3481bddc.dir
      size: 1319099
      nfiles: 513
  condense@truthseeker-knn-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.3/symmetry_false/
      hash: md5
      md5: 4de9320e439a7ab743eafffff82d70fd.dir
      size: 1302582
      nfiles: 513
  condense@truthseeker-knn-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.2/symmetry_true/
      hash: md5
      md5: a71b130f7dc444b9ee6e75f91eed23be.dir
      size: 1321367
      nfiles: 513
  condense@truthseeker-knn-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.2/symmetry_false/
      hash: md5
      md5: d997fcf88628ed04689ad31f943c1cca.dir
      size: 1230347
      nfiles: 513
  condense@truthseeker-knn-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.1/symmetry_true/
      hash: md5
      md5: 3bcf648ade40cb41d2e0f14317be2f4f.dir
      size: 1312191
      nfiles: 513
  condense@truthseeker-knn-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_truthseeker files.reports=reports/condense/knn/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/knn/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/knn/gzip/0.1/symmetry_false/
      hash: md5
      md5: 6cc76f1cec6cbedb7a2f471005bd9c76.dir
      size: 1314344
      nfiles: 513
  condense@truthseeker-svc-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.9/symmetry_true/
      hash: md5
      md5: 500797e929d0aec6fae8be99481207d7.dir
      size: 1379989
      nfiles: 513
  condense@truthseeker-svc-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.9/symmetry_false/
      hash: md5
      md5: 6c7cf95b99d8bf487462851f03791dfe.dir
      size: 1390124
      nfiles: 513
  condense@truthseeker-svc-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.8/symmetry_true/
      hash: md5
      md5: 5b5f1306c19e3ef1069dadf3bf309b67.dir
      size: 1384434
      nfiles: 513
  condense@truthseeker-svc-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.8/symmetry_false/
      hash: md5
      md5: 5c917586bdf2cbeadb1aed7e6a5b8e18.dir
      size: 1390113
      nfiles: 513
  condense@truthseeker-svc-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.7/symmetry_true/
      hash: md5
      md5: 9aaa9fa0aa46a9107adeb009a5e9d618.dir
      size: 1384949
      nfiles: 513
  condense@truthseeker-svc-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.7/symmetry_false/
      hash: md5
      md5: 9393a42d1743e4a3fb96b32dba252316.dir
      size: 1390239
      nfiles: 513
  condense@truthseeker-svc-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.6/symmetry_true/
      hash: md5
      md5: 8c96938a05d907cf67ede22a5a776c02.dir
      size: 1385150
      nfiles: 513
  condense@truthseeker-svc-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.6/symmetry_false/
      hash: md5
      md5: b13cbaa092254db40f0b6062788a01c4.dir
      size: 1390224
      nfiles: 513
  condense@truthseeker-svc-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.5/symmetry_true/
      hash: md5
      md5: 98eaed084e18bcd49ffba2c7d99bfaa3.dir
      size: 1387273
      nfiles: 513
  condense@truthseeker-svc-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.5/symmetry_false/
      hash: md5
      md5: d2f4e4c8cbbc15f0053b5fe9c034cfa1.dir
      size: 1390206
      nfiles: 513
  condense@truthseeker-svc-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.4/symmetry_true/
      hash: md5
      md5: 2498ec21727bf2afa04881e2b696e4ad.dir
      size: 1388374
      nfiles: 513
  condense@truthseeker-svc-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.4/symmetry_false/
      hash: md5
      md5: df9b1060df399f266c970805d4f06d6d.dir
      size: 1390099
      nfiles: 513
  condense@truthseeker-svc-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.3/symmetry_true/
      hash: md5
      md5: 2807e6742066e1add334cb6a52a04b98.dir
      size: 1388251
      nfiles: 513
  condense@truthseeker-svc-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.3/symmetry_false/
      hash: md5
      md5: 5bba2df631ffd6b80997b70280d218c4.dir
      size: 1390400
      nfiles: 513
  condense@truthseeker-svc-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.2/symmetry_true/
      hash: md5
      md5: 31afe3f31ce607581e354ead63115f49.dir
      size: 1388473
      nfiles: 513
  condense@truthseeker-svc-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.2/symmetry_false/
      hash: md5
      md5: c85ab36cfbf291783f9597cd640a1c7f.dir
      size: 1390370
      nfiles: 513
  condense@truthseeker-svc-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.1/symmetry_true/
      hash: md5
      md5: cae8c0cd53825651a7014536380b0d42.dir
      size: 1388343
      nfiles: 513
  condense@truthseeker-svc-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_truthseeker files.reports=reports/condense/svc/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/svc/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/svc/gzip/0.1/symmetry_false/
      hash: md5
      md5: a6703a5a4d4bdeefa5ac94c192d2dfa8.dir
      size: 1390380
      nfiles: 513
  condense@truthseeker-logistic-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.9/symmetry_true/
      hash: md5
      md5: dad62edb52e2563e8e587a59c798ff97.dir
      size: 1370198
      nfiles: 513
  condense@truthseeker-logistic-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.9/symmetry_false/
      hash: md5
      md5: 504b9fd36ad7f377b8bf45fa0431ba41.dir
      size: 1328602
      nfiles: 513
  condense@truthseeker-logistic-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.8/symmetry_true/
      hash: md5
      md5: 1b026e857b75fa70fca1f21f883603a6.dir
      size: 1388944
      nfiles: 513
  condense@truthseeker-logistic-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.8/symmetry_false/
      hash: md5
      md5: 2751c5bb6d33b75609c93de5a43adf6c.dir
      size: 1322594
      nfiles: 513
  condense@truthseeker-logistic-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.7/symmetry_true/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.7/symmetry_true/
      hash: md5
      md5: 036fe4331caeecb8a1a697c8047f4b3b.dir
      size: 1442487
      nfiles: 513
  condense@truthseeker-logistic-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.7/symmetry_false/
      hash: md5
      md5: 18596bd4bd7bebf3b4718fb990e6f765.dir
      size: 1326524
      nfiles: 513
  condense@truthseeker-logistic-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.6/symmetry_true/
      hash: md5
      md5: 0d27e0f606efc6aa6e24664a80ed7e84.dir
      size: 1356545
      nfiles: 513
  condense@truthseeker-logistic-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.6/symmetry_false/
      hash: md5
      md5: b88961a8e481e452ff6a9ecde5d4d435.dir
      size: 1326449
      nfiles: 513
  condense@truthseeker-logistic-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.5/symmetry_true/
      hash: md5
      md5: 12dab01475447c15d34258ea37eea60a.dir
      size: 1360310
      nfiles: 513
  condense@truthseeker-logistic-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.5/symmetry_false/
      hash: md5
      md5: b52ac3ffe72b93ec35acdf8c137589c2.dir
      size: 1332596
      nfiles: 513
  condense@truthseeker-logistic-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.4/symmetry_true/
      hash: md5
      md5: 5a37d44cbf40e7512d0aac6362edbd0e.dir
      size: 1388958
      nfiles: 513
  condense@truthseeker-logistic-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.4/symmetry_false/
      hash: md5
      md5: 1376692e9fe01781dd0154c88c284ce0.dir
      size: 1322594
      nfiles: 513
  condense@truthseeker-logistic-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.3/symmetry_true/
      hash: md5
      md5: 11980f39445de97d378a1750a85c6992.dir
      size: 1361800
      nfiles: 513
  condense@truthseeker-logistic-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.3/symmetry_false/
      hash: md5
      md5: d13413952ee1ed505cdf0e62a7182474.dir
      size: 1330966
      nfiles: 513
  condense@truthseeker-logistic-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.2/symmetry_true/
      hash: md5
      md5: 880678267db096d6e3738854e02f3960.dir
      size: 1366212
      nfiles: 513
  condense@truthseeker-logistic-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.2/symmetry_false/
      hash: md5
      md5: e4615ab146309ae985aff75e2825966b.dir
      size: 1329131
      nfiles: 513
  condense@truthseeker-logistic-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 8e3a408957febba5ae093ddc8b77d5d5.dir
      size: 2436568
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.1/symmetry_true/
      hash: md5
      md5: cd1f7ce229113a4ab8b07c861ab663b7.dir
      size: 1401513
      nfiles: 513
  condense@truthseeker-logistic-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_truthseeker files.reports=reports/condense/logistic/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=truthseeker/logs/logistic/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/condense/logistic/gzip/0.1/symmetry_false/
      hash: md5
      md5: b40eaa4e1bea59de60de47f54bd59ab4.dir
      size: 1327060
      nfiles: 513
  condense@sms_spam-knn-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.9/symmetry_true/
      hash: md5
      md5: 9837e8c905138b23bf7d0323d9e13bcf.dir
      size: 1254486
      nfiles: 513
  condense@sms_spam-knn-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.9/symmetry_false/
      hash: md5
      md5: 0a8933a2f453044a3c4dd0b899e1c1ee.dir
      size: 1253578
      nfiles: 513
  condense@sms_spam-knn-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.8/symmetry_true/
      hash: md5
      md5: b95802be4d0b536123adabb11b03b741.dir
      size: 1254394
      nfiles: 513
  condense@sms_spam-knn-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.8/symmetry_false/
      hash: md5
      md5: d0c877c7ab87a2fe39ab3a858ddd1e98.dir
      size: 1252027
      nfiles: 513
  condense@sms_spam-knn-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.7/symmetry_true/
      hash: md5
      md5: 713ef37d962089a310dd7a3b611d1922.dir
      size: 1255346
      nfiles: 513
  condense@sms_spam-knn-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.7/symmetry_false/
      hash: md5
      md5: 817c3011d81c3854da44f11ea42b872e.dir
      size: 1263096
      nfiles: 513
  condense@sms_spam-knn-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.6/symmetry_true/
      hash: md5
      md5: 0e874d6d3bd014cef67a3fdde0471f78.dir
      size: 1263671
      nfiles: 513
  condense@sms_spam-knn-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.6/symmetry_false/
      hash: md5
      md5: 3aa525a82ad6f85b4725dd63100e1e58.dir
      size: 1258886
      nfiles: 513
  condense@sms_spam-knn-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.5/symmetry_true/
      hash: md5
      md5: 50756898c09d70509c7bde82325b0234.dir
      size: 1258202
      nfiles: 513
  condense@sms_spam-knn-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.5/symmetry_false/
      hash: md5
      md5: 0d7c306e0d7cf7cd331c5c53c78e761f.dir
      size: 1256496
      nfiles: 513
  condense@sms_spam-knn-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.4/symmetry_true/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 19b2c46f0162c1dbd066ba09e4ca93cd.dir
      size: 2364486
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.4/symmetry_true/
      hash: md5
      md5: 8b8b0216e92447fef79e214b8baf23a6.dir
      size: 1259815
      nfiles: 513
  condense@sms_spam-knn-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.4/symmetry_false/
      hash: md5
      md5: 96661f1fbe6843eae36e0e5fc1da3599.dir
      size: 1256076
      nfiles: 513
  condense@sms_spam-knn-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.3/symmetry_true/
      hash: md5
      md5: fcd6cf99b8206ec876beaf5f5b4c1aa2.dir
      size: 1240744
      nfiles: 513
  condense@sms_spam-knn-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.3/symmetry_false/
      hash: md5
      md5: ac191a30f44e4b24f80bbc569dcac3e6.dir
      size: 1254648
      nfiles: 513
  condense@sms_spam-knn-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.2/symmetry_true/
      hash: md5
      md5: 885407b620d21b4b4a046f26cfeac6d3.dir
      size: 1258175
      nfiles: 513
  condense@sms_spam-knn-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.2/symmetry_false/
      hash: md5
      md5: 3db0041c8eeedb78091aa38cc50021dd.dir
      size: 1247918
      nfiles: 513
  condense@sms_spam-knn-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_true/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.1/symmetry_true/
      hash: md5
      md5: 2ee41a1502f452bde84404d13adef262.dir
      size: 1251332
      nfiles: 513
  condense@sms_spam-knn-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/knn/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_knn_sms_spam files.reports=reports/condense/knn/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/knn/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/knn/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/knn/gzip/0.1/symmetry_false/
      hash: md5
      md5: 42e8cb44f654d7dabe31f6b002721cdc.dir
      size: 1240122
      nfiles: 513
  condense@sms_spam-svc-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.9/symmetry_true/
      hash: md5
      md5: f4a47085f3eb87385cddae34ff8b553d.dir
      size: 1372192
      nfiles: 513
  condense@sms_spam-svc-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.9/symmetry_false/
      hash: md5
      md5: 1e1dc297cea6457b59e7f7cffc5a5fd5.dir
      size: 1373535
      nfiles: 513
  condense@sms_spam-svc-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.8/symmetry_true/
      hash: md5
      md5: f22b1e9751ea79a4055ecd8379d5b890.dir
      size: 1372123
      nfiles: 513
  condense@sms_spam-svc-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.8/symmetry_false/
      hash: md5
      md5: 54105f23dd04a1dde5595ee9a4022c03.dir
      size: 1373578
      nfiles: 513
  condense@sms_spam-svc-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.7/symmetry_true/
      hash: md5
      md5: b050dbed943173b76b6b8578ff0247bc.dir
      size: 1371704
      nfiles: 513
  condense@sms_spam-svc-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.7/symmetry_false/
      hash: md5
      md5: 3829d93764f27b10b1afe0176cdc2612.dir
      size: 1373678
      nfiles: 513
  condense@sms_spam-svc-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.6/symmetry_true/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 1bb7b24238f513bfa2ac2f99cd30671d
      size: 1986
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.6/symmetry_true/
      hash: md5
      md5: 5efa962f3a9c24d0051161b398b05481.dir
      size: 1364648
      nfiles: 513
  condense@sms_spam-svc-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.6/symmetry_false/
      hash: md5
      md5: 678fe242e9d8c380f8d7b796a1557b8e.dir
      size: 1373811
      nfiles: 513
  condense@sms_spam-svc-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.5/symmetry_true/
      hash: md5
      md5: 99c610e9f3e0a755d1610760f523da4d.dir
      size: 1371890
      nfiles: 513
  condense@sms_spam-svc-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.5/symmetry_false/
      hash: md5
      md5: cc84dedc5b494a1d2fb8fbe080ba24f9.dir
      size: 1373608
      nfiles: 513
  condense@sms_spam-svc-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.4/symmetry_true/
      hash: md5
      md5: 0bf1c8323c752b79195933e1217e8bb7.dir
      size: 1372005
      nfiles: 513
  condense@sms_spam-svc-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.4/symmetry_false/
      hash: md5
      md5: 469a9546e4b64361864d8918f53a2d2c.dir
      size: 1373774
      nfiles: 513
  condense@sms_spam-svc-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.3/symmetry_true/
      hash: md5
      md5: a99c2d7bea229c97815f22dcfcdfa71d.dir
      size: 1371816
      nfiles: 513
  condense@sms_spam-svc-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.3/symmetry_false/
      hash: md5
      md5: c6d499270519b3a42e5ffa8bb62c4cbd.dir
      size: 1373657
      nfiles: 513
  condense@sms_spam-svc-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.2/symmetry_true/
      hash: md5
      md5: 6e9780532cde3e94f6eab2b162b52f6b.dir
      size: 1371862
      nfiles: 513
  condense@sms_spam-svc-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.2/symmetry_false/
      hash: md5
      md5: 5d39021affde68a12954b8ce73e63030.dir
      size: 1373198
      nfiles: 513
  condense@sms_spam-svc-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.1/symmetry_true/
      hash: md5
      md5: 1308b59a15c5d39e82c978dd1e5b93ef.dir
      size: 1371832
      nfiles: 513
  condense@sms_spam-svc-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/svc/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_svc_sms_spam files.reports=reports/condense/svc/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/svc/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 21839b05767d6fdf3a3b8fffdf458dbc
      size: 1956
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/svc/gzip/symmetry_false/
      hash: md5
      md5: 9b5d74ccd9ed10ab57bfa065156771c6.dir
      size: 7995
      nfiles: 1
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/svc/gzip/0.1/symmetry_false/
      hash: md5
      md5: 152ccdb91e9742554ecb4fc49de8b4e7.dir
      size: 1373884
      nfiles: 513
  condense@sms_spam-logistic-0.9-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.9/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.9/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.9/symmetry_true/
      hash: md5
      md5: 1e054c62594bd16de3254a1af94f7644.dir
      size: 1312164
      nfiles: 513
  condense@sms_spam-logistic-0.9-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.9/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.9/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.9/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.9/symmetry_false/
      hash: md5
      md5: aa7ba5e56fcc43795cca9a418b62addf.dir
      size: 1313808
      nfiles: 513
  condense@sms_spam-logistic-0.8-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.8/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.8/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.8/symmetry_true/
      hash: md5
      md5: 66ff339c84f4a4e0280106bf87fa2180.dir
      size: 1314150
      nfiles: 513
  condense@sms_spam-logistic-0.8-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.8 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.8/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.8/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.8/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.8/symmetry_false/
      hash: md5
      md5: 4a68cae03d49e7258736106a5fc7707c.dir
      size: 1315073
      nfiles: 513
  condense@sms_spam-logistic-0.7-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.7/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.7/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.7/symmetry_true/
      hash: md5
      md5: b4414b2795403c15627dccdeeb47206e.dir
      size: 1312897
      nfiles: 513
  condense@sms_spam-logistic-0.7-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.7/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.7/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.7/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.7/symmetry_false/
      hash: md5
      md5: b136c98481ab763c9a9dbb95d3a2c81e.dir
      size: 1316522
      nfiles: 513
  condense@sms_spam-logistic-0.6-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.6/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.6/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.6/symmetry_true/
      hash: md5
      md5: ae222f05d4d4d2675e5e22d8ddcfdf1b.dir
      size: 1314829
      nfiles: 513
  condense@sms_spam-logistic-0.6-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.6/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.6/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.6/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.6/symmetry_false/
      hash: md5
      md5: bd4ca84ab49201505eb939b382b3755b.dir
      size: 1320234
      nfiles: 513
  condense@sms_spam-logistic-0.5-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.5/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.5/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.5/symmetry_true/
      hash: md5
      md5: 860edb48762bf99fd87840a77020b0e3.dir
      size: 1314614
      nfiles: 513
  condense@sms_spam-logistic-0.5-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.5/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.5/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.5/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.5/symmetry_false/
      hash: md5
      md5: bcd9aaf110d4423f3752b56ecbd5ac0e.dir
      size: 1310842
      nfiles: 513
  condense@sms_spam-logistic-0.4-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.4/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.4/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.4/symmetry_true/
      hash: md5
      md5: b674eadbe1d661f77962dde649f6cee7.dir
      size: 1309050
      nfiles: 513
  condense@sms_spam-logistic-0.4-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.4/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.4/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.4/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.4/symmetry_false/
      hash: md5
      md5: 17e042d71598037589507d6b79229ec1.dir
      size: 1313622
      nfiles: 513
  condense@sms_spam-logistic-0.3-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.3/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.3/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.3/symmetry_true/
      hash: md5
      md5: 2aa3f53b05c3b5cc3890f5b80250726b.dir
      size: 1317530
      nfiles: 513
  condense@sms_spam-logistic-0.3-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.3/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.3/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.3/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.3/symmetry_false/
      hash: md5
      md5: e083be3a1996eb0925df9c4fe1e741ee.dir
      size: 1317236
      nfiles: 513
  condense@sms_spam-logistic-0.2-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.2/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.2/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.2/symmetry_true/
      hash: md5
      md5: 4baa2885c96230f0a709a4467de98a3b.dir
      size: 1317729
      nfiles: 513
  condense@sms_spam-logistic-0.2-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.2/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.2/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.2/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.2/symmetry_false/
      hash: md5
      md5: b50c359176ccdd964956dc5973481f28.dir
      size: 1319771
      nfiles: 513
  condense@sms_spam-logistic-0.1-gzip-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_true/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.1/symmetry_true/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.1/symmetry_true/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_true/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.1/symmetry_true/
      hash: md5
      md5: fdbdccdbb253d2154932120db14fb75f.dir
      size: 1330810
      nfiles: 513
  condense@sms_spam-logistic-0.1-gzip-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/logistic/gzip/symmetry_false/1000-400-0.npz
      hydra.sweeper.study_name=gzip_logistic_sms_spam files.reports=reports/condense/logistic/gzip/0.1/symmetry_false/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.1/symmetry_false/
      hydra.callbacks.study_dump.output_file=sms_spam/logs/logistic/gzip/0.1/symmetry_false/study.csv
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 8b09baed9da1c387251064d1327df8d5
      size: 2049
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/logistic/gzip/symmetry_false/
      hash: md5
      md5: 401810469df2f04c3edd9a765880e31b.dir
      size: 2359073
      nfiles: 1
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.symmetric: True,False
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/condense/logistic/gzip/0.1/symmetry_false/
      hash: md5
      md5: 7989a5aff31194206812db6083f583c8.dir
      size: 1328092
      nfiles: 513
  compile@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_knn  --results_file
      kdd_nsl/reports/gzip_knn.csv
    deps:
    - path: kdd_nsl/reports/gzip_knn/
      hash: md5
      md5: 544a9e2a813d7a83be9dc8952ad2e7fe.dir
      size: 987648
      nfiles: 852
    outs:
    - path: kdd_nsl/reports/gzip_knn.csv
      hash: md5
      md5: 4a5e78596ea3dbd83d7b8cae4fddb4be
      size: 326850
  compile@kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_svc  --results_file
      kdd_nsl/reports/gzip_svc.csv
    deps:
    - path: kdd_nsl/reports/gzip_svc/
      hash: md5
      md5: a05a21dce46c5ba990ed0d7d5c1a0917.dir
      size: 3405267
      nfiles: 3072
    outs:
    - path: kdd_nsl/reports/gzip_svc.csv
      hash: md5
      md5: f00fbecb1cffccc0f62d27954ae484c3
      size: 1180831
  compile@kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_logistic  --results_file
      kdd_nsl/reports/gzip_logistic.csv
    deps:
    - path: kdd_nsl/reports/gzip_logistic/
      hash: md5
      md5: 69d3e73379be4ebc8c15e2f3d56e7fe9.dir
      size: 3502952
      nfiles: 3072
    outs:
    - path: kdd_nsl/reports/gzip_logistic.csv
      hash: md5
      md5: a3af5850d90463ce658a4ac859ddeec0
      size: 1245432
  compile@kdd_nsl-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/knn  --results_file
      kdd_nsl/reports/condense/knn.csv
    deps:
    - path: kdd_nsl/reports/condense/knn/
      hash: md5
      md5: 81d3206b578c63323903652f42ac4eac.dir
      size: 88393
      nfiles: 32
    outs:
    - path: kdd_nsl/reports/condense/knn.csv
      hash: md5
      md5: aa17a8d27150004aac1aae409f30ca5e
      size: 14603
  compile@kdd_nsl-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/svc  --results_file
      kdd_nsl/reports/condense/svc.csv
    deps:
    - path: kdd_nsl/reports/condense/svc/
      hash: md5
      md5: 7ca663df4ba9926ab7f4920e29df3f1c.dir
      size: 11151238
      nfiles: 6912
    outs:
    - path: kdd_nsl/reports/condense/svc.csv
      hash: md5
      md5: c2ab5ace2067cd70db86305eae0fb6af
      size: 2810187
  compile@kdd_nsl-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/logistic  --results_file
      kdd_nsl/reports/condense/logistic.csv
    deps:
    - path: kdd_nsl/reports/condense/logistic/
      hash: md5
      md5: 3e6ca614ce181350be71cc67898b928d.dir
      size: 26242562
      nfiles: 9684
    outs:
    - path: kdd_nsl/reports/condense/logistic.csv
      hash: md5
      md5: 2ff8f32b7f8579181c8766171ec5f9d0
      size: 4769973
  compile@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_knn  --results_file
      sms_spam/reports/gzip_knn.csv
    deps:
    - path: sms_spam/reports/gzip_knn/
      hash: md5
      md5: 532cdf2fc4a38a627fc0def3c3926d9c.dir
      size: 770394
      nfiles: 692
    outs:
    - path: sms_spam/reports/gzip_knn.csv
      hash: md5
      md5: 3879ab897b11cc309197e9033816c8d7
      size: 262257
  compile@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_svc  --results_file
      sms_spam/reports/gzip_svc.csv
    deps:
    - path: sms_spam/reports/gzip_svc/
      hash: md5
      md5: 00aa3433a992f3df0f7c9ce3e2398619.dir
      size: 3412080
      nfiles: 3072
    outs:
    - path: sms_spam/reports/gzip_svc.csv
      hash: md5
      md5: 11a248f6f506de4c6db3dc8f0e4e85af
      size: 1179568
  compile@sms_spam-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/knn  --results_file
      sms_spam/reports/condense/knn.csv
    deps:
    - path: sms_spam/reports/condense/knn/
      hash: md5
      md5: 6309289cc9729f9a49b218175669d76a.dir
      size: 88498
      nfiles: 32
    outs:
    - path: sms_spam/reports/condense/knn.csv
      hash: md5
      md5: 9367a89ab238b75f38b4abbc8a1d9b59
      size: 14657
  compile@sms_spam-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/svc  --results_file
      sms_spam/reports/condense/svc.csv
    deps:
    - path: sms_spam/reports/condense/svc/
      hash: md5
      md5: 2750c66976d11c368c13abdda4c43edb.dir
      size: 11154334
      nfiles: 6912
    outs:
    - path: sms_spam/reports/condense/svc.csv
      hash: md5
      md5: 253159824a88f51cb362182bc0f993b2
      size: 2793922
  compile@sms_spam-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/logistic  --results_file
      sms_spam/reports/condense/logistic.csv
    deps:
    - path: sms_spam/reports/condense/logistic/
      hash: md5
      md5: 07408d7d05d605f8e3a0f3541491f0eb.dir
      size: 12513145
      nfiles: 4617
    outs:
    - path: sms_spam/reports/condense/logistic.csv
      hash: md5
      md5: f16bbfb6c2e43d4e640202242f7c2d04
      size: 2269121
  compile@ddos-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_knn  --results_file
      ddos/reports/gzip_knn.csv
    deps:
    - path: ddos/reports/gzip_knn/
      hash: md5
      md5: e1cdacb538673137aefc3e717ef016db.dir
      size: 1114014
      nfiles: 992
    outs:
    - path: ddos/reports/gzip_knn.csv
      hash: md5
      md5: 539a34029ad6ffb9619d2abdb4941d26
      size: 390626
  compile@ddos-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_svc  --results_file
      ddos/reports/gzip_svc.csv
    deps:
    - path: ddos/reports/gzip_svc/
      hash: md5
      md5: afc6d14fbc6db2a6aeeb128ddff34705.dir
      size: 3484643
      nfiles: 3072
    outs:
    - path: ddos/reports/gzip_svc.csv
      hash: md5
      md5: 8d4fb7cd330a1a896271aff5313c830d
      size: 1223418
  compile@ddos-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_logistic  --results_file
      ddos/reports/gzip_logistic.csv
    deps:
    - path: ddos/reports/gzip_logistic/
      hash: md5
      md5: f92a132ddc0da8405b262d71753e173a.dir
      size: 3577514
      nfiles: 3072
    outs:
    - path: ddos/reports/gzip_logistic.csv
      hash: md5
      md5: 85166d5739b53dc64dc2257e3103d8b6
      size: 1285965
  compile@ddos-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/knn  --results_file
      ddos/reports/condense/knn.csv
    deps:
    - path: ddos/reports/condense/knn/
      hash: md5
      md5: 1383291a0ba3821d72f051c4bc63dae3.dir
      size: 6962949
      nfiles: 2450
    outs:
    - path: ddos/reports/condense/knn.csv
      hash: md5
      md5: 562930c5cda533d4a90fa88d12a8f59b
      size: 1044002
  compile@ddos-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/svc  --results_file
      ddos/reports/condense/svc.csv
    deps:
    - path: ddos/reports/condense/svc/
      hash: md5
      md5: ad43d195a1f5ef3a6d1e678d88d0af65.dir
      size: 11687075
      nfiles: 4087
    outs:
    - path: ddos/reports/condense/svc.csv
      hash: md5
      md5: a6cbb80e51a1bdaa9bf7b3a61432061f
      size: 1794366
  compile@ddos-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/logistic  --results_file
      ddos/reports/condense/logistic.csv
    deps:
    - path: ddos/reports/condense/logistic/
      hash: md5
      md5: c720262c7dfac73f5648541f8f802f68.dir
      size: 24352597
      nfiles: 11110
    outs:
    - path: ddos/reports/condense/logistic.csv
      hash: md5
      md5: 46413c7ca84819f13ec4a8e90c70da43
      size: 5267338
  compile@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_knn  --results_file
      truthseeker/reports/gzip_knn.csv
    deps:
    - path: truthseeker/reports/gzip_knn/
      hash: md5
      md5: 4e0f7645a656121175c7440a64458169.dir
      size: 1464091
      nfiles: 1281
    outs:
    - path: truthseeker/reports/gzip_knn.csv
      hash: md5
      md5: 3e59030f8dcfc72848567124b1237aaa
      size: 501505
  compile@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_svc  --results_file
      truthseeker/reports/gzip_svc.csv
    deps:
    - path: truthseeker/reports/gzip_svc/
      hash: md5
      md5: 56fd24a108e689d690f46c83d0559104.dir
      size: 3445323
      nfiles: 3072
    outs:
    - path: truthseeker/reports/gzip_svc.csv
      hash: md5
      md5: 1efa4d63ac9499ad9983c9a210b4d74d
      size: 1216191
  compile@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_logistic  --results_file
      truthseeker/reports/gzip_logistic.csv
    deps:
    - path: truthseeker/reports/gzip_logistic/
      hash: md5
      md5: 2ebef70c89d3a1899bbf3269e75afa7d.dir
      size: 3539223
      nfiles: 3072
    outs:
    - path: truthseeker/reports/gzip_logistic.csv
      hash: md5
      md5: 5b1c279b8be219646298113e51aa0276
      size: 1277962
  compile@truthseeker-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/knn  --results_file
      truthseeker/reports/condense/knn.csv
    deps:
    - path: truthseeker/reports/condense/knn/
      hash: md5
      md5: 1564a2218b3d26ffadec5fe6656e9a98.dir
      size: 88873
      nfiles: 32
    outs:
    - path: truthseeker/reports/condense/knn.csv
      hash: md5
      md5: f4043cfb9435b388886ac4cda49eda99
      size: 15077
  compile@truthseeker-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/svc  --results_file
      truthseeker/reports/condense/svc.csv
    deps:
    - path: truthseeker/reports/condense/svc/
      hash: md5
      md5: 69f19f57cb9d7e02568f87bf9b072355.dir
      size: 11256925
      nfiles: 6918
    outs:
    - path: truthseeker/reports/condense/svc.csv
      hash: md5
      md5: ef3163c8580f8010914aae79cd1c02f9
      size: 2895767
  compile@truthseeker-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/logistic  --results_file
      truthseeker/reports/condense/logistic.csv
    deps:
    - path: truthseeker/reports/condense/logistic/
      hash: md5
      md5: 33a33f9a8d946f09859b10d95c117990.dir
      size: 12667717
      nfiles: 4845
    outs:
    - path: truthseeker/reports/condense/logistic.csv
      hash: md5
      md5: 93468df5185dd7aa6328b28ae8c2c4b2
      size: 2413078
  clean@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_knn.csv -o kdd_nsl/plots/clean/gzip_knn.csv
      -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_knn.csv
      hash: md5
      md5: 4a5e78596ea3dbd83d7b8cae4fddb4be
      size: 326850
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_knn.csv
      hash: md5
      md5: c5798fb9b513435ac6fc47d3416bb288
      size: 221604
  clean@kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_svc.csv -o kdd_nsl/plots/clean/gzip_svc.csv
      -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_svc.csv
      hash: md5
      md5: f00fbecb1cffccc0f62d27954ae484c3
      size: 1180831
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_svc.csv
      hash: md5
      md5: bb531234feef48e7874e0653bb291a4e
      size: 924854
  clean@kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_logistic.csv
      -o kdd_nsl/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_logistic.csv
      hash: md5
      md5: a3af5850d90463ce658a4ac859ddeec0
      size: 1245432
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_logistic.csv
      hash: md5
      md5: ff14d3cb3b433c9402351a58538e7932
      size: 995834
  clean@kdd_nsl-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/knn.csv
      -o kdd_nsl/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/knn.csv
      hash: md5
      md5: aa17a8d27150004aac1aae409f30ca5e
      size: 14603
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/knn.csv
      hash: md5
      md5: aba1d5d1f640efd3ae1ffe4fc6bcada0
      size: 10900
  clean@kdd_nsl-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/svc.csv
      -o kdd_nsl/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/svc.csv
      hash: md5
      md5: c2ab5ace2067cd70db86305eae0fb6af
      size: 2810187
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/svc.csv
      hash: md5
      md5: 21949e3a8987d3ab2944f4fc0cabbf83
      size: 2256964
  clean@kdd_nsl-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/logistic.csv
      -o kdd_nsl/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/logistic.csv
      hash: md5
      md5: 2ff8f32b7f8579181c8766171ec5f9d0
      size: 4769973
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/logistic.csv
      hash: md5
      md5: 36eb5e897de0c0f0d91964edd3a9b6ea
      size: 24188
  clean@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_knn.csv -o
      sms_spam/plots/clean/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_knn.csv
      hash: md5
      md5: 3879ab897b11cc309197e9033816c8d7
      size: 262257
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_knn.csv
      hash: md5
      md5: b64f664d40c00ecb2bc7d88f5454d7c2
      size: 197419
  clean@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_svc.csv -o
      sms_spam/plots/clean/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_svc.csv
      hash: md5
      md5: 11a248f6f506de4c6db3dc8f0e4e85af
      size: 1179568
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_svc.csv
      hash: md5
      md5: 83b13e38a7c0567db8970ed089020bd4
      size: 923384
  clean@sms_spam-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/knn.csv
      -o sms_spam/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/knn.csv
      hash: md5
      md5: 9367a89ab238b75f38b4abbc8a1d9b59
      size: 14657
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/knn.csv
      hash: md5
      md5: 8c30b2fabd7b3f5ea8aa9c96fa974e5f
      size: 10936
  clean@sms_spam-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/svc.csv
      -o sms_spam/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/svc.csv
      hash: md5
      md5: 253159824a88f51cb362182bc0f993b2
      size: 2793922
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/svc.csv
      hash: md5
      md5: 3f96b41e49f034c2061aeb241616057d
      size: 2242842
  clean@sms_spam-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/logistic.csv
      -o sms_spam/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/logistic.csv
      hash: md5
      md5: f16bbfb6c2e43d4e640202242f7c2d04
      size: 2269121
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/logistic.csv
      hash: md5
      md5: f5f94c46c670e600818b43d08a950668
      size: 10469
  clean@ddos-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_knn.csv -o ddos/plots/clean/gzip_knn.csv
      -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_knn.csv
      hash: md5
      md5: 539a34029ad6ffb9619d2abdb4941d26
      size: 390626
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_knn.csv
      hash: md5
      md5: a340a0c16b2af12f89bf37c98d74b016
      size: 308240
  clean@ddos-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_svc.csv -o ddos/plots/clean/gzip_svc.csv
      -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_svc.csv
      hash: md5
      md5: 8d4fb7cd330a1a896271aff5313c830d
      size: 1223418
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_svc.csv
      hash: md5
      md5: 18565ce6c03c573dca0ed8538eaefab9
      size: 969862
  clean@ddos-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_logistic.csv -o
      ddos/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_logistic.csv
      hash: md5
      md5: 85166d5739b53dc64dc2257e3103d8b6
      size: 1285965
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 9b3fe61ccf3240fb4aacc261f5f5df9c
      size: 1035047
  clean@ddos-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/knn.csv -o
      ddos/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/knn.csv
      hash: md5
      md5: 562930c5cda533d4a90fa88d12a8f59b
      size: 1044002
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/knn.csv
      hash: md5
      md5: 3fe8eaaddb7a55706a5f85b66fa47db3
      size: 837589
  clean@ddos-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/svc.csv -o
      ddos/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/svc.csv
      hash: md5
      md5: a6cbb80e51a1bdaa9bf7b3a61432061f
      size: 1794366
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/svc.csv
      hash: md5
      md5: 8c8a3e20229778faf8aa791ec2123d22
      size: 1420316
  clean@ddos-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/logistic.csv
      -o ddos/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/logistic.csv
      hash: md5
      md5: 46413c7ca84819f13ec4a8e90c70da43
      size: 5267338
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/logistic.csv
      hash: md5
      md5: 4447734e27015ddd7c59e3dc8041e2a6
      size: 2066924
  clean@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_knn.csv
      -o truthseeker/plots/clean/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_knn.csv
      hash: md5
      md5: 3e59030f8dcfc72848567124b1237aaa
      size: 501505
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_knn.csv
      hash: md5
      md5: 8cc093d47139373b15fa2cfba920dabd
      size: 361904
  clean@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_svc.csv
      -o truthseeker/plots/clean/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_svc.csv
      hash: md5
      md5: 1efa4d63ac9499ad9983c9a210b4d74d
      size: 1216191
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_svc.csv
      hash: md5
      md5: d2065f1babc5127432a8cd84a06b38d6
      size: 957093
  clean@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_logistic.csv
      -o truthseeker/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_logistic.csv
      hash: md5
      md5: 5b1c279b8be219646298113e51aa0276
      size: 1277962
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 4c658b4e3e5f2be10dd257dac17e613e
      size: 1024824
  clean@truthseeker-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/knn.csv
      -o truthseeker/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/knn.csv
      hash: md5
      md5: f4043cfb9435b388886ac4cda49eda99
      size: 15077
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/knn.csv
      hash: md5
      md5: 61c7d467292c78b585b63c8af404a54f
      size: 11274
  clean@truthseeker-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/svc.csv
      -o truthseeker/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/svc.csv
      hash: md5
      md5: ef3163c8580f8010914aae79cd1c02f9
      size: 2895767
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/svc.csv
      hash: md5
      md5: ed8986174ae1b815a6b1635163796b39
      size: 2336297
  clean@truthseeker-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/logistic.csv
      -o truthseeker/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/logistic.csv
      hash: md5
      md5: 93468df5185dd7aa6328b28ae8c2c4b2
      size: 2413078
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            pkl: Pickle
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/logistic.csv
      hash: md5
      md5: f231450ce87757a22b943688a4cd6fa8
      size: 256065
  merge@kdd_nsl:
    cmd: python merge.py --big_dir kdd_nsl/plots/ --data_file clean/gzip_knn.csv --little_dir_data_file
      clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder kdd_nsl/plots --output_file
      merged.csv
    deps:
    - path: kdd_nsl/plots/clean/gzip_knn.csv
      hash: md5
      md5: c5798fb9b513435ac6fc47d3416bb288
      size: 221604
    - path: kdd_nsl/plots/clean/gzip_logistic.csv
      hash: md5
      md5: ff14d3cb3b433c9402351a58538e7932
      size: 995834
    - path: kdd_nsl/plots/clean/gzip_svc.csv
      hash: md5
      md5: bb531234feef48e7874e0653bb291a4e
      size: 924854
    outs:
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 65aa833472957c41401b4ac3bd1193ef
      size: 2168938
  merge@sms_spam:
    cmd: python merge.py --big_dir sms_spam/plots/ --data_file clean/gzip_knn.csv
      --little_dir_data_file clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder
      sms_spam/plots --output_file merged.csv
    deps:
    - path: sms_spam/plots/clean/gzip_knn.csv
      hash: md5
      md5: b64f664d40c00ecb2bc7d88f5454d7c2
      size: 197419
    - path: sms_spam/plots/clean/gzip_logistic.csv
      hash: md5
      md5: c4714a99aef1cd2d92dffbd225837b20
      size: 992019
    - path: sms_spam/plots/clean/gzip_svc.csv
      hash: md5
      md5: 83b13e38a7c0567db8970ed089020bd4
      size: 923384
    outs:
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: b86cea0c0480c1e6cb61a8c0dbcf9c16
      size: 2139012
  merge@ddos:
    cmd: python merge.py --big_dir ddos/plots/ --data_file clean/gzip_knn.csv --little_dir_data_file
      clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder ddos/plots --output_file
      merged.csv
    deps:
    - path: ddos/plots/clean/gzip_knn.csv
      hash: md5
      md5: a340a0c16b2af12f89bf37c98d74b016
      size: 308240
    - path: ddos/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 9b3fe61ccf3240fb4aacc261f5f5df9c
      size: 1035047
    - path: ddos/plots/clean/gzip_svc.csv
      hash: md5
      md5: 18565ce6c03c573dca0ed8538eaefab9
      size: 969862
    outs:
    - path: ddos/plots/merged.csv
      hash: md5
      md5: b7a88eabd6dfa4589d322c19bb27f900
      size: 2340995
  merge@truthseeker:
    cmd: python merge.py --big_dir truthseeker/plots/ --data_file clean/gzip_knn.csv
      --little_dir_data_file clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder
      truthseeker/plots --output_file merged.csv
    deps:
    - path: truthseeker/plots/clean/gzip_knn.csv
      hash: md5
      md5: 8cc093d47139373b15fa2cfba920dabd
      size: 361904
    - path: truthseeker/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 4c658b4e3e5f2be10dd257dac17e613e
      size: 1024824
    - path: truthseeker/plots/clean/gzip_svc.csv
      hash: md5
      md5: d2065f1babc5127432a8cd84a06b38d6
      size: 957093
    outs:
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 2a8a02552f3d5bb2184db7d6ba7579da
      size: 2372743
  merge_condense@kdd_nsl:
    cmd: python merge.py --big_dir kdd_nsl/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      kdd_nsl/plots/ --output_file condensed_merged.csv
    deps:
    - path: kdd_nsl/plots/clean/condense/knn.csv
      hash: md5
      md5: da2f35e198b773af34ebecc309086763
      size: 18297
    - path: kdd_nsl/plots/clean/condense/logistic.csv
      hash: md5
      md5: 36eb5e897de0c0f0d91964edd3a9b6ea
      size: 24188
    - path: kdd_nsl/plots/clean/condense/svc.csv
      hash: md5
      md5: 21949e3a8987d3ab2944f4fc0cabbf83
      size: 2256964
    outs:
    - path: kdd_nsl/plots/condensed_merged.csv
      hash: md5
      md5: b486bd3c25c5097919c4ac3f46475e45
      size: 2326668
  merge_condense@sms_spam:
    cmd: python merge.py --big_dir sms_spam/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      sms_spam/plots/ --output_file condensed_merged.csv
    deps:
    - path: sms_spam/plots/clean/condense/knn.csv
      hash: md5
      md5: 28f017770509c6ee24a867d5b3d0ac49
      size: 18326
    - path: sms_spam/plots/clean/condense/logistic.csv
      hash: md5
      md5: f5f94c46c670e600818b43d08a950668
      size: 10469
    - path: sms_spam/plots/clean/condense/svc.csv
      hash: md5
      md5: 3f96b41e49f034c2061aeb241616057d
      size: 2242842
    outs:
    - path: sms_spam/plots/condensed_merged.csv
      hash: md5
      md5: c3aedd5a8e4316fb7972b8513bc6faa1
      size: 2296579
  merge_condense@ddos:
    cmd: python merge.py --big_dir ddos/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      ddos/plots/ --output_file condensed_merged.csv
    deps:
    - path: ddos/plots/clean/condense/knn.csv
      hash: md5
      md5: a940585ea958633a1a1cf93465e51107
      size: 60266
    - path: ddos/plots/clean/condense/logistic.csv
      hash: md5
      md5: 4447734e27015ddd7c59e3dc8041e2a6
      size: 2066924
    - path: ddos/plots/clean/condense/svc.csv
      hash: md5
      md5: 78ca69d8b5128f5343d832ae1f8dc2c0
      size: 3682207
    outs:
    - path: ddos/plots/condensed_merged.csv
      hash: md5
      md5: c05b5a36693cf0783d57c4fbf17e6c28
      size: 5868928
  merge_condense@truthseeker:
    cmd: python merge.py --big_dir truthseeker/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      truthseeker/plots/ --output_file condensed_merged.csv
    deps:
    - path: truthseeker/plots/clean/condense/knn.csv
      hash: md5
      md5: 3963e3a048f51969b7858b6ffa4b621d
      size: 279226
    - path: truthseeker/plots/clean/condense/logistic.csv
      hash: md5
      md5: f231450ce87757a22b943688a4cd6fa8
      size: 256065
    - path: truthseeker/plots/clean/condense/svc.csv
      hash: md5
      md5: ed8986174ae1b815a6b1635163796b39
      size: 2336297
    outs:
    - path: truthseeker/plots/condensed_merged.csv
      hash: md5
      md5: 6ac63d7a98e2deaa1755111a1830674f
      size: 2902766
  plot@kdd_nsl:
    cmd: python -m deckard.layers.plots  --path kdd_nsl/plots/  --file kdd_nsl/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: conf/plots.yaml
      hash: md5
      md5: 43e3ec0876b55c83f231615f7a904e33
      size: 7386
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 65aa833472957c41401b4ac3bd1193ef
      size: 2168938
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_compressor_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressor
          ylabels: Accuracy
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_string_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Metrics
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: linear
        - file: symmetric_vs_string_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: String Metrics
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_compressor_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
        - file: metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
    outs:
    - path: kdd_nsl/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: fdf65b8f10d65f1207162bc617249fbf
      size: 19691
    - path: kdd_nsl/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: d3a195fffa6eb807115328cfd3b49203
      size: 24707
    - path: kdd_nsl/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: d9c369aafb872252e464f796b179b2d4
      size: 21331
    - path: kdd_nsl/plots/symmetric_vs_compressor_metric.pdf
      hash: md5
      md5: eeab0eafce044302314c1453607173b0
      size: 20319
    - path: kdd_nsl/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: cbe1e5944bad0ce209e839d94459223c
      size: 29628
    - path: kdd_nsl/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 330e5394fe64144ecdc8afdf19a5688a
      size: 31067
    - path: kdd_nsl/plots/symmetric_vs_string_metric.pdf
      hash: md5
      md5: 8c59f6fce11c5926744fa76949d66590
      size: 22499
    - path: kdd_nsl/plots/symmetric_vs_string_metric_train_time.pdf
      hash: md5
      md5: 60e55ab4721ba4a7889919b15dcd6b1d
      size: 24345
  plot@sms_spam:
    cmd: python -m deckard.layers.plots  --path sms_spam/plots/  --file sms_spam/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: conf/plots.yaml
      hash: md5
      md5: 43e3ec0876b55c83f231615f7a904e33
      size: 7386
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: b86cea0c0480c1e6cb61a8c0dbcf9c16
      size: 2139012
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_compressor_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressor
          ylabels: Accuracy
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_string_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Metrics
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: linear
        - file: symmetric_vs_string_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: String Metrics
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_compressor_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
        - file: metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
    outs:
    - path: sms_spam/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: d9186a7c38fbdcbae533e1fc14729533
      size: 19681
    - path: sms_spam/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 4a844c30a4c947bb171336c88f6f427e
      size: 24297
    - path: sms_spam/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 261431d969afd5b3d26ada26c57f7b05
      size: 21264
    - path: sms_spam/plots/symmetric_vs_compressor_metric.pdf
      hash: md5
      md5: 995d305a53dcc5fc4264163ac5454238
      size: 20581
    - path: sms_spam/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: fbc6c69967384e233b565e53d44650fc
      size: 30091
    - path: sms_spam/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: d2ae1821ae461d9e8a94a16936eedbc0
      size: 30772
    - path: sms_spam/plots/symmetric_vs_string_metric.pdf
      hash: md5
      md5: 01f3b09bdbeae616153cf3143a58185a
      size: 23171
    - path: sms_spam/plots/symmetric_vs_string_metric_train_time.pdf
      hash: md5
      md5: ae665ffad7a24fdb950cd666d96c4af4
      size: 24187
  plot@ddos:
    cmd: python -m deckard.layers.plots  --path ddos/plots/  --file ddos/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: conf/plots.yaml
      hash: md5
      md5: 43e3ec0876b55c83f231615f7a904e33
      size: 7386
    - path: ddos/plots/merged.csv
      hash: md5
      md5: b7a88eabd6dfa4589d322c19bb27f900
      size: 2340995
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_compressor_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressor
          ylabels: Accuracy
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_string_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Metrics
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: linear
        - file: symmetric_vs_string_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: String Metrics
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_compressor_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
        - file: metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
    outs:
    - path: ddos/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: 618d00f0c4960c7b0513cc921c9b2d24
      size: 19699
    - path: ddos/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: 4d9c8928b18a32077a68930467d928c0
      size: 24285
    - path: ddos/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 4d934374c433643e49f349010c56f96e
      size: 20934
    - path: ddos/plots/symmetric_vs_compressor_metric.pdf
      hash: md5
      md5: 69f7962a74bd25af06047a60866d62b0
      size: 20360
    - path: ddos/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: e7259d19504b2494875f482dcee9d3b9
      size: 29990
    - path: ddos/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: d0dc4f1b1114fc779fb37cf3030100a8
      size: 30861
    - path: ddos/plots/symmetric_vs_string_metric.pdf
      hash: md5
      md5: 97c963291e11c659f11d0667b756314f
      size: 23219
    - path: ddos/plots/symmetric_vs_string_metric_train_time.pdf
      hash: md5
      md5: 9b557edbdecae5b2fb5c3027512a8fb9
      size: 24598
  plot@truthseeker:
    cmd: python -m deckard.layers.plots  --path truthseeker/plots/  --file truthseeker/plots/merged.csv  -c
      conf/plots.yaml
    deps:
    - path: conf/plots.yaml
      hash: md5
      md5: 43e3ec0876b55c83f231615f7a904e33
      size: 7386
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 2a8a02552f3d5bb2184db7d6ba7579da
      size: 2372743
    params:
      conf/plots.yaml:
        cat_plot:
        - file: symmetric_vs_compressor_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressor
          ylabels: Accuracy
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_string_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric.pdf
          x: Metric
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles: ' '
          xlabels: Compressors
          ylabels: Accuracy
          legend_title: ' '
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Metrics
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: linear
        - file: symmetric_vs_string_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: String Metrics
          order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: symmetric_vs_compressor_metric_train_time.pdf
          x: Metric
          y: train_time
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Compressors
          ylabels: Training Time (s)
          legend_title: Metrics
          order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          hue_order:
          - Asymmetric
          - Symmetric
          rotation: 90
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: Training Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
        - file: metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time
          ylabel: Prediction Time (s)
          y_scale: linear
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          legend:
            title: Metrics
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
    outs:
    - path: truthseeker/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: b1744029c597ac04b223b8e7b41fb635
      size: 19302
    - path: truthseeker/plots/metric_vs_accuracy.pdf
      hash: md5
      md5: a9aff450799ce6eb38d46f4eb50ab7b8
      size: 23123
    - path: truthseeker/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 2f611db74cfb6e48586d6c20d0faa602
      size: 20079
    - path: truthseeker/plots/symmetric_vs_compressor_metric.pdf
      hash: md5
      md5: bc82c0c64a25287d9ec2a1a283596777
      size: 20773
    - path: truthseeker/plots/symmetric_vs_metric.pdf
      hash: md5
      md5: f0905768e95b12075902d66bbc088141
      size: 30559
    - path: truthseeker/plots/symmetric_vs_metric_train_time.pdf
      hash: md5
      md5: 62ccf6c946deca7708dd208f3094f2ec
      size: 31039
    - path: truthseeker/plots/symmetric_vs_string_metric.pdf
      hash: md5
      md5: 9c6d7853c107f97e2f2ae4f4b8e970b2
      size: 22958
    - path: truthseeker/plots/symmetric_vs_string_metric_train_time.pdf
      hash: md5
      md5: c3332fe78c5f7fdb95eaf16283d6ce2e
      size: 24740
  plot_condense@kdd_nsl:
    cmd: python -m deckard.layers.plots  --path kdd_nsl/plots/  --file kdd_nsl/plots/condensed_merged.csv  -c
      conf/condensed_plots.yaml
    deps:
    - path: conf/condensed_plots.yaml
      hash: md5
      md5: 941cca0ea861df8f4ec05f4ef9e8178c
      size: 2985
    - path: kdd_nsl/plots/condensed_merged.csv
      hash: md5
      md5: b486bd3c25c5097919c4ac3f46475e45
      size: 2326668
    params:
      conf/condensed_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: condensing_method_vs_accuracy.pdf
          digitize: Condensing Ratio
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xlabels: Condensing Method
          ylabels: Accuracy
          legend_title: Sample Ratio
        - file: condensing_method_vs_train_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: train_time
          y_scale: log
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Training Time
          legend_title: Sample Ratio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: condensing_method_vs_predict_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: predict_time
          y_scale: log
          col: Model
          rotation: 45
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Prediction Time
          legend_title: Sample Ratio
        - file: string_metric_m_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: point
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Sample Ratio
          xlim:
          - 0
          - 0.9
    outs:
    - path: kdd_nsl/plots/condensing_method_vs_accuracy.pdf
      hash: md5
      md5: 8c6651b9cb8f6589e2eaccff86330e8a
      size: 38447
    - path: kdd_nsl/plots/condensing_method_vs_predict_time.pdf
      hash: md5
      md5: d1be46f4d903e4767b6038a984975919
      size: 50511
    - path: kdd_nsl/plots/condensing_method_vs_train_time.pdf
      hash: md5
      md5: dbc12b86645bf3d12daf2c8bfbfdb16f
      size: 49791
    - path: kdd_nsl/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: ba73fc9def55408b285d8d410f15956d
      size: 40842
  plot_condense@sms_spam:
    cmd: python -m deckard.layers.plots  --path sms_spam/plots/  --file sms_spam/plots/condensed_merged.csv  -c
      conf/condensed_plots.yaml
    deps:
    - path: conf/condensed_plots.yaml
      hash: md5
      md5: 941cca0ea861df8f4ec05f4ef9e8178c
      size: 2985
    - path: sms_spam/plots/condensed_merged.csv
      hash: md5
      md5: c3aedd5a8e4316fb7972b8513bc6faa1
      size: 2296579
    params:
      conf/condensed_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: condensing_method_vs_accuracy.pdf
          digitize: Condensing Ratio
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xlabels: Condensing Method
          ylabels: Accuracy
          legend_title: Sample Ratio
        - file: condensing_method_vs_train_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: train_time
          y_scale: log
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Training Time
          legend_title: Sample Ratio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: condensing_method_vs_predict_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: predict_time
          y_scale: log
          col: Model
          rotation: 45
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Prediction Time
          legend_title: Sample Ratio
        - file: string_metric_m_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: point
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Sample Ratio
          xlim:
          - 0
          - 0.9
    outs:
    - path: sms_spam/plots/condensing_method_vs_accuracy.pdf
      hash: md5
      md5: 3dd28a7c04b57f78d07195b5c3380cac
      size: 34031
    - path: sms_spam/plots/condensing_method_vs_predict_time.pdf
      hash: md5
      md5: d05943901da204c67d94a6e626fce881
      size: 49464
    - path: sms_spam/plots/condensing_method_vs_train_time.pdf
      hash: md5
      md5: 10ffc7d19931755f111680ed622397fa
      size: 48446
    - path: sms_spam/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: 2c5ea1bf941e5b962991749a3edcc150
      size: 35703
  plot_condense@ddos:
    cmd: python -m deckard.layers.plots  --path ddos/plots/  --file ddos/plots/condensed_merged.csv  -c
      conf/condensed_plots.yaml
    deps:
    - path: conf/condensed_plots.yaml
      hash: md5
      md5: 941cca0ea861df8f4ec05f4ef9e8178c
      size: 2985
    - path: ddos/plots/condensed_merged.csv
      hash: md5
      md5: c05b5a36693cf0783d57c4fbf17e6c28
      size: 5868928
    params:
      conf/condensed_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: condensing_method_vs_accuracy.pdf
          digitize: Condensing Ratio
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xlabels: Condensing Method
          ylabels: Accuracy
          legend_title: Sample Ratio
        - file: condensing_method_vs_train_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: train_time
          y_scale: log
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Training Time
          legend_title: Sample Ratio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: condensing_method_vs_predict_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: predict_time
          y_scale: log
          col: Model
          rotation: 45
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Prediction Time
          legend_title: Sample Ratio
        - file: string_metric_m_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: point
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Sample Ratio
          xlim:
          - 0
          - 0.9
    outs:
    - path: ddos/plots/condensing_method_vs_accuracy.pdf
      hash: md5
      md5: 90b19e1e0b3aea43a6265d2ae54bda75
      size: 61525
    - path: ddos/plots/condensing_method_vs_predict_time.pdf
      hash: md5
      md5: 28586b1e2998b4a667c38e28e5d006b3
      size: 76363
    - path: ddos/plots/condensing_method_vs_train_time.pdf
      hash: md5
      md5: 85aaf8e07023223d8e06c48e08ed8fb0
      size: 76596
    - path: ddos/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: 7812409fe0e627dadf43f25c2af2bc5e
      size: 70778
  plot_condense@truthseeker:
    cmd: python -m deckard.layers.plots  --path truthseeker/plots/  --file truthseeker/plots/condensed_merged.csv  -c
      conf/condensed_plots.yaml
    deps:
    - path: conf/condensed_plots.yaml
      hash: md5
      md5: 941cca0ea861df8f4ec05f4ef9e8178c
      size: 2985
    - path: truthseeker/plots/condensed_merged.csv
      hash: md5
      md5: 6ac63d7a98e2deaa1755111a1830674f
      size: 2902766
    params:
      conf/condensed_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: condensing_method_vs_accuracy.pdf
          digitize: Condensing Ratio
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xlabels: Condensing Method
          ylabels: Accuracy
          legend_title: Sample Ratio
        - file: condensing_method_vs_train_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: train_time
          y_scale: log
          kind: boxen
          col: Model
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Training Time
          legend_title: Sample Ratio
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
        - file: condensing_method_vs_predict_time.pdf
          x: Condensing Method
          hue: Condensing Ratio
          digitize: Condensing Ratio
          y: predict_time
          y_scale: log
          col: Model
          rotation: 45
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: boxen
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          xticklabels:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - k-NN
          xlabels: Condensing Method
          ylabels: Prediction Time
          legend_title: Sample Ratio
        - file: string_metric_m_vs_accuracy.pdf
          digitize: Condensing Ratio
          hue: Condensing Method
          x: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: point
          col: Model
          rotation: 45
          hue_order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Method
          ylabels: Accuracy
          xlabels: Sample Ratio
          xlim:
          - 0
          - 0.9
    outs:
    - path: truthseeker/plots/condensing_method_vs_accuracy.pdf
      hash: md5
      md5: 5e0860d8c6cef981bb5240cf90f5d2cc
      size: 69803
    - path: truthseeker/plots/condensing_method_vs_predict_time.pdf
      hash: md5
      md5: 4f3b73db6b9d7b9b9eaf52a427e17d51
      size: 84728
    - path: truthseeker/plots/condensing_method_vs_train_time.pdf
      hash: md5
      md5: f645469e9af88cf78b26eb8fb318baf3
      size: 83870
    - path: truthseeker/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: 4cb6ccb9e903db62f1f758e750f8c8a4
      size: 68448
  merge_datasets:
    cmd: python merge.py --big_dir . --little_dir . --data_file sms_spam/plots/condensed_merged.csv
      --little_dir_data_file  kdd_nsl/plots/merged.csv ddos/plots/merged.csv truthseeker/plots/merged.csv
      kdd_nsl/plots/condensed_merged.csv ddos/plots/condensed_merged.csv truthseeker/plots/condensed_merged.csv
      sms_spam/plots/merged.csv --output_folder combined/plots/ --output_file merged.csv
    deps:
    - path: ddos/plots/merged.csv
      hash: md5
      md5: f1ace42956e5835ecbc2bcd7fc8e6860
      size: 3878750
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 64fae814b8735664e0d8f04d4f04db02
      size: 2009985
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: 0e483fec668e6348375534880c9615ac
      size: 2406763
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 166a8108df1ca64f9b89f98a11508b13
      size: 2686343
    outs:
    - path: combined/plots/merged.csv
      hash: md5
      md5: 5fec3df003010518f9509741cc070070
      size: 20992511
  plot_merged:
    cmd: python -m deckard.layers.plots  --path combined/plots/  --file combined/plots/merged.csv  -c
      conf/merged_plots.yaml
    deps:
    - path: combined/plots/merged.csv
      hash: md5
      md5: 5fec3df003010518f9509741cc070070
      size: 20992511
    - path: conf/merged_plots.yaml
      hash: md5
      md5: d9700ea98d3bf48d175bb3d986354a96
      size: 9036
    params:
      conf/merged_plots.yaml:
        cat_plot:
        - file: condensing_ratio_vs_accuracy.pdf
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: strip
          row: Model
          col: Dataset
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Ratio
          ylabels: Accuracy
          xlabels: Condensing Ratio
        - file: models_vs_accuracy.pdf
          x: Model
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: Accuracy
          legend_title: Samples
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: models_vs_train_time.pdf
          x: Model
          y: train_time
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: Models
          ylabels: $t_t$ (s)
          legend_title: Samples
          rotation: 90
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: log
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: models_vs_predict_time.pdf
          x: Model
          y: predict_time_per_sample
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: Samples
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: symmetric_models_vs_accuracy.pdf
          row: Model
          x: data.sample.train_size
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Samples
          ylabels: Accuracy
          legend_title: ' '
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          row_order:
          - k-KNN
          - k-SVC
          - k-Logistic
          order:
          - 20
          - 100
          - 300
          - 500
        - file: symmetric_models_vs_train_time.pdf
          row: Model
          x: data.sample.train_size
          y: train_time_per_sample
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_t$ (s)
          legend_title: ' '
          rotation: 90
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: log
          order:
          - 20
          - 100
          - 300
          - 500
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          row_order:
          - k-KNN
          - k-SVC
          - k-Logistic
        - file: symmetric_models_vs_predict_time.pdf
          x: data.sample.train_size
          row: Model
          y: predict_time_per_sample
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: ' '
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          row_order:
          - k-KNN
          - k-SVC
          - k-Logistic
          order:
          - 20
          - 100
          - 300
          - 500
        - file: condensing_methods_vs_accuracy.pdf
          row: Model
          y: accuracy
          x: Condensing Method
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: Condensing Method
          ylabels: Accuracy
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          row_order:
          - k-KNN
          - k-SVC
          - k-Logistic
          legend_title: Condensing Method
        - file: condensing_methods_vs_train_time.pdf
          x: Model
          y: train_time
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_t$ (s)
          legend_title: Condensing Method
          rotation: 90
          col: Dataset
          y_scale: log
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        - file: condensing_methods_vs_predict_time.pdf
          x: Model
          y: predict_time_per_sample
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: Condensing Method
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: $t_t$ (s)
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: $t_t$ (s)
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time_per_sample
          ylabel: $t_i$ (s)
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time_per_sample
          ylabel: $t_i$ (s)
          hue_order:
          - GZIP
          - Pickle
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
    outs:
    - path: combined/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: 398d34fc91811f408164fb40ef254319
      size: 21621
    - path: combined/plots/compressor_metric_vs_predict_time.pdf
      hash: md5
      md5: 21a0d100327190cdd820d020244aa77b
      size: 23374
    - path: combined/plots/compressor_metric_vs_train_time.pdf
      hash: md5
      md5: 830465cd78708d1314f331167ff982ce
      size: 23448
    - path: combined/plots/condensing_methods_vs_accuracy.pdf
      hash: md5
      md5: 4c16cd91b77b0224ca00d1eb813a60a2
      size: 48975
    - path: combined/plots/condensing_methods_vs_predict_time.pdf
      hash: md5
      md5: 2881b805b9c52003ec6e0054e7fc2124
      size: 54476
    - path: combined/plots/condensing_methods_vs_train_time.pdf
      hash: md5
      md5: 9393487eb30eb624da3c5c77d0b4e991
      size: 52742
    - path: combined/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: d086d19a58471e9956569cba6dd39c90
      size: 131764
    - path: combined/plots/models_vs_accuracy.pdf
      hash: md5
      md5: 294b76ce0834cd98598a3e393d546a37
      size: 44206
    - path: combined/plots/models_vs_predict_time.pdf
      hash: md5
      md5: 84657fa2b335a045cd387a7399cf8a62
      size: 57320
    - path: combined/plots/models_vs_train_time.pdf
      hash: md5
      md5: 8d964e58f6842ef5176066df8cada6ee
      size: 57138
    - path: combined/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 782212b12a6a75de3ac1a84dde99ebd0
      size: 23111
    - path: combined/plots/string_metric_vs_predict_time.pdf
      hash: md5
      md5: 4646c80a1f6507f818eb8c3d762bee02
      size: 24463
    - path: combined/plots/string_metric_vs_train_time.pdf
      hash: md5
      md5: 591e82c87c12bab86f298ddf93675e05
      size: 24490
    - path: combined/plots/symmetric_models_vs_accuracy.pdf
      hash: md5
      md5: 830743cc92f0126efef9dd46bc2ecf47
      size: 55869
    - path: combined/plots/symmetric_models_vs_predict_time.pdf
      hash: md5
      md5: f4e8b96a8e558f8a12257547aa130302
      size: 75324
    - path: combined/plots/symmetric_models_vs_train_time.pdf
      hash: md5
      md5: 7ddd9328de5c18c62c8499a10c52efca
      size: 75284
  copy@kdd_nsl:
    cmd: rm -rf ~/Gzip-KNN/figs/kdd_nsl/ && mkdir -p ~/Gzip-KNN/figs/kdd_nsl/ && cp
      -r kdd_nsl/plots/* ~/Gzip-KNN/figs/kdd_nsl/ && rm -rf ~/Gzip-KNN/figs/kdd_nsl/.gitignore
    deps:
    - path: kdd_nsl/plots/
      hash: md5
      md5: 37edf128edaed94fe6c0581ad2636ce7.dir
      size: 9169823
      nfiles: 28
  copy@truthseeker:
    cmd: rm -rf ~/Gzip-KNN/figs/truthseeker/ && mkdir -p ~/Gzip-KNN/figs/truthseeker/
      && cp -r truthseeker/plots/* ~/Gzip-KNN/figs/truthseeker/ && rm -rf ~/Gzip-KNN/figs/truthseeker/.gitignore
    deps:
    - path: truthseeker/plots/
      hash: md5
      md5: ceafe688cb8d95058087a2ea20d038f9.dir
      size: 11792319
      nfiles: 28
  copy@sms_spam:
    cmd: rm -rf ~/Gzip-KNN/figs/sms_spam/ && mkdir -p ~/Gzip-KNN/figs/sms_spam/ &&
      cp -r sms_spam/plots/* ~/Gzip-KNN/figs/sms_spam/ && rm -rf ~/Gzip-KNN/figs/sms_spam/.gitignore
    deps:
    - path: sms_spam/plots/
      hash: md5
      md5: c99572bb734ea2b471741d06d6301aba.dir
      size: 9893147
      nfiles: 28
  copy@ddos:
    cmd: rm -rf ~/Gzip-KNN/figs/ddos/ && mkdir -p ~/Gzip-KNN/figs/ddos/ && cp -r ddos/plots/*
      ~/Gzip-KNN/figs/ddos/ && rm -rf ~/Gzip-KNN/figs/ddos/.gitignore
    deps:
    - path: ddos/plots/
      hash: md5
      md5: 0593b9ee390ea51636cc28120e9b2579.dir
      size: 20050802
      nfiles: 28
  copy@combined:
    cmd: rm -rf ~/Gzip-KNN/figs/combined/ && mkdir -p ~/Gzip-KNN/figs/combined/ &&
      cp -r combined/plots/* ~/Gzip-KNN/figs/combined/ && rm -rf ~/Gzip-KNN/figs/combined/.gitignore
    deps:
    - path: combined/plots/
      hash: md5
      md5: 0d6cf803e926f9eb17449a6b0d9f06b1.dir
      size: 21786116
      nfiles: 17
  modified_grid_search@1000-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 ++data.sample.test_size=400 model_name=gzip_svc
      model.init.distance_matrix=null ++model.init.modified=true model.init.symmetric=True
      hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8
      hydra.sweep.dir=kdd_nsl/logs/gzip_svc/1000/modified_true hydra.callbacks.study_dump.output_file=null
      files.directory=kdd_nsl files.reports=reports/gzip_svc/1000/modified_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 model.init.metric=gzip ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: 245aa7d654343b443d55c486de581e7f
      size: 2009
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 256
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/1000/modified_true
      hash: md5
      md5: ef38c2b901109fa8205e7c4b1f156baa.dir
      size: 1216154
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/1000/modified_true/train/
      hash: md5
      md5: 8dda1169bf5fb98dac35d87dfe1fef65.dir
      size: 321301
      nfiles: 288
  modified_grid_search@100-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_logistic/100/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_logistic/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: b2ff3db80f8ae272f68a54c4e63ba40b.dir
      size: 1095291
      nfiles: 384
  modified_grid_search@100-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_logistic/100/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_logistic/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: f16425b633aec8401019e5aa02a25d05.dir
      size: 1104124
      nfiles: 384
  modified_grid_search@100-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_knn/100/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_knn/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: ac5dceb2bda3bacc4d55c32e8134c39d.dir
      size: 50539
      nfiles: 18
  modified_grid_search@100-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_svc/100/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_svc/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 05015006b875687a7fe61619a7273886.dir
      size: 1082308
      nfiles: 384
  modified_grid_search@100-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_knn/100/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_knn/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: b80ba2abc31bdcc797b5c3cd54ed53c9.dir
      size: 58923
      nfiles: 21
  modified_grid_search@100-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_svc/100/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_svc/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 285a7a43a1798cb254c7a263b6ada3ad.dir
      size: 1082530
      nfiles: 384
  modified_grid_search@100-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_logistic/100/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_logistic/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: e3cca71394a08bebe5847c466d833485.dir
      size: 1099524
      nfiles: 384
  modified_grid_search@100-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_svc/100/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_svc/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 1c48ad1e2ec56d46a588d71dad96e805.dir
      size: 1087489
      nfiles: 384
  modified_grid_search@100-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_knn/100/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_knn/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: 730a10aae88021f0baa92894fee266c7.dir
      size: 50963
      nfiles: 18
  modified_grid_search@100-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_logistic/100/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_logistic/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: 6fdb1172f9f89db2a88fc57bcf86bf77.dir
      size: 1094630
      nfiles: 384
  modified_grid_search@100-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_svc/100/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_svc/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: da6cd26b2f4eb017e92d86d212e9ef73.dir
      size: 1091945
      nfiles: 384
  modified_grid_search@100-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_knn/100/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_knn/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: a7f6a2257f5ff43618a61e851a90e688.dir
      size: 101453
      nfiles: 36
  modified_grid_search@300-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_logistic/300/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_logistic/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: d5dfc13678f128391451a20761b03827.dir
      size: 1104843
      nfiles: 384
  modified_grid_search@20-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_logistic/20/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_logistic/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: bb13b74ada931020564122f33fb6cf11.dir
      size: 1103709
      nfiles: 384
  modified_grid_search@500-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_logistic/500/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_logistic/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: 51055787474488f8623317ddb0ff3bff.dir
      size: 1104320
      nfiles: 384
  modified_grid_search@20-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_logistic/20/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_logistic/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: b9fce6b9b0eb9508c0f70533e1cfdab1.dir
      size: 1098553
      nfiles: 384
  modified_grid_search@300-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_knn/300/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_knn/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 3e3177c9a88cb458ed21f57654a9da82.dir
      size: 329974
      nfiles: 117
  modified_grid_search@20-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_svc/20/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_svc/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: 0a40e81dbf6be19b7611c9db8d8ae383.dir
      size: 1083393
      nfiles: 384
  modified_grid_search@300-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_logistic/300/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_logistic/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: dc81c7306140c1cae692c0bad1d8b3b6.dir
      size: 1096385
      nfiles: 384
  modified_grid_search@300-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_svc/300/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_svc/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: 7e99bac024993a635c9fc89fa11e4930.dir
      size: 1092951
      nfiles: 384
  modified_grid_search@300-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_svc/300/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_svc/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: 5d148d7e3b59fb8bc442538b1059a5ee.dir
      size: 1083327
      nfiles: 384
  modified_grid_search@20-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_svc/20/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_svc/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: 182397facb4e186383938bcdcdc9b8ec.dir
      size: 1087314
      nfiles: 384
  modified_grid_search@500-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_knn/500/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_knn/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: 418d30a92eb621c8c28aae233c752430.dir
      size: 126324
      nfiles: 45
  modified_grid_search@500-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_logistic/500/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_logistic/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: b2b7256e207d744a35c80d01621c37c7.dir
      size: 1095648
      nfiles: 384
  modified_grid_search@500-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_svc/500/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_svc/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: db001a70c9806f933984d3c504311c35.dir
      size: 1087933
      nfiles: 384
  modified_grid_search@20-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_knn/20/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_knn/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 7fbbe8627f35a35e7a316812ff32f207.dir
      size: 1031231
      nfiles: 366
  modified_grid_search@500-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_svc/500/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_svc/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 4c4562e2db0b5789687000b6349a1876.dir
      size: 1082875
      nfiles: 384
  modified_grid_search@300-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_logistic/300/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_logistic/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: c1f3accb716fd95748ef74640e84fa95.dir
      size: 1095155
      nfiles: 384
  modified_grid_search@20-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_svc/20/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_svc/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: b2cf1a6c3ea51eae813ac9e33364bab2.dir
      size: 1092367
      nfiles: 384
  modified_grid_search@20-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_knn/20/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_knn/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 311cf4acbb9dbee7d68a6b1c03880b14.dir
      size: 1027500
      nfiles: 366
  modified_grid_search@300-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_knn/300/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_knn/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: ba30464e1a9902b76bd7ef5f214f9387.dir
      size: 219243
      nfiles: 78
  modified_grid_search@500-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_logistic/500/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_logistic/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: ac4d9efc142e8757a89c4ede04f2a3e4.dir
      size: 1100244
      nfiles: 384
  modified_grid_search@20-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_logistic/20/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_logistic/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: 9e22527276fcf243732c04414178658e.dir
      size: 1094638
      nfiles: 384
  modified_grid_search@20-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_knn/20/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_knn/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 1d505006beba8c4934bb52156b597671.dir
      size: 1026569
      nfiles: 366
  modified_grid_search@300-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_svc/300/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_svc/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: 158115797ee9840d4cd44dfd93ce2bb5.dir
      size: 1088367
      nfiles: 384
  modified_grid_search@300-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_svc/300/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_svc/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: cb9222faf360052f1dc27a91342f0aca.dir
      size: 1083197
      nfiles: 384
  modified_grid_search@500-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_svc/500/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_svc/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: b85ecd48815707c993d5b11a800751df.dir
      size: 1092638
      nfiles: 384
  modified_grid_search@20-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_knn/20/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_knn/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 05b9739e2fea67fc145050c3dfe13578.dir
      size: 1036071
      nfiles: 366
  modified_grid_search@500-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_knn/500/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_knn/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: b3e298e5e0ff42e07042a049c834dc64.dir
      size: 431335
      nfiles: 153
  modified_grid_search@500-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_knn/500/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_knn/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: 0674f75e0518e5d697b207d3e9ad0ee7.dir
      size: 195495
      nfiles: 69
  modified_grid_search@500-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_knn/500/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_knn/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: d6d760ff7da86c73add2491b7bf275a4.dir
      size: 235976
      nfiles: 84
  modified_grid_search@20-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_svc/20/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_svc/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: fcda4eeac6d7e9c81593534b7d499d2b.dir
      size: 1082365
      nfiles: 384
  modified_grid_search@300-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_knn/300/modified_true/
      files.directory=ddos files.reports=reports/modified//gzip_knn/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 8af716253f9468edc42d75628f6e8ca2.dir
      size: 195571
      nfiles: 69
  modified_grid_search@500-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_logistic/500/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_logistic/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: 8de2648e4a3dcdfdfd20efe9cadfd4a0.dir
      size: 1094459
      nfiles: 384
  modified_grid_search@20-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_logistic/20/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_logistic/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: e98bca262f3fcadfb9e8ea5d4454e8d2.dir
      size: 1093660
      nfiles: 384
  modified_grid_search@500-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_svc/500/modified_true/
      files.directory=sms_spam files.reports=reports/modified//gzip_svc/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 6370326517c52db9ec511bd1626dabdc.dir
      size: 1083201
      nfiles: 384
  modified_grid_search@300-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_knn/300/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified//gzip_knn/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 901c4b6faa798a8079faf99208c02c54.dir
      size: 92658
      nfiles: 33
  modified_grid_search@300-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_logistic/300/modified_true/
      files.directory=truthseeker files.reports=reports/modified//gzip_logistic/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: 53803526dbf5bdf5ee16aba9de0453c9.dir
      size: 1100614
      nfiles: 384
  precompute_matrices@ddos-knn-gzip-true-0-1000-400:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None
      ++model.init.m=1 ++model.init.symmetric=true ++model.init.distance_matrix=ddos/models/knn/gzip/symmetry_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/1000-400-0/ hydra.sweeper.n_trials=1
      hydra.sweeper.n_jobs=1 hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/1000-400-0/
      hydra.sweeper.study_name=gzip_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: b5cd78b6f77bf2765b10f7c119054b5b
      size: 1791
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/1000-400-0/
      hash: md5
      md5: f524810576c2aa36489bd9e4711c18b1.dir
      size: 17722
      nfiles: 5
    - path: ddos/models/knn/gzip/symmetry_true/1000-400-0.npz
      hash: md5
      md5: a5774a80369c4c4b804a8e8203f22b70
      size: 2949738
  precompute_matrices@ddos-knn-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 95ddb20fc1e0867dceb2d3a20b004e51.dir
      size: 10698
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
  precompute_matrices@ddos-svc-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a943d8fbd040f4d8d19a17ee7df330f5.dir
      size: 18356
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  precompute_matrices@ddos-logistic-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_logistic
      model=gzip_logistic ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_logistic_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 981a0f98c42f4a159c001d35bb21345e
      size: 2004
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 4fa3236f07eaf8100dc62b3ea0156af9.dir
      size: 19144
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  precompute_matrices@kdd_nsl-knn-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 9b80667e6618958566de6a3d43caca66.dir
      size: 10728
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
  precompute_matrices@kdd_nsl-svc-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_svc model=gzip_svc ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 2e10c6b49abfe56c3054150f63370288.dir
      size: 11198
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
  precompute_matrices@kdd_nsl-logistic-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_logistic model=gzip_logistic ++model.init.condensing_method=None
      ++model.init.m=1 ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_logistic_kdd_nsl hydra.launcher.n_jobs=-1
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 981a0f98c42f4a159c001d35bb21345e
      size: 2004
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 59b3e171390b50be600a475fd110e4fa.dir
      size: 11759
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
  condense@ddos-knn-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@truthseeker-knn-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: c5b2cf0dd6a0d1ea099703e02b522def.dir
      size: 16005
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
  precompute_matrices@truthseeker-svc-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_svc model=gzip_svc ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 7df19b90483013f4f30e785b7247afd4.dir
      size: 11316
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 38197857a1ccfab5e273a891c63f7a40
      size: 2434662
  precompute_matrices@truthseeker-logistic-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_logistic model=gzip_logistic ++model.init.condensing_method=None
      ++model.init.m=1 ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_logistic_truthseeker hydra.launcher.n_jobs=-1
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 981a0f98c42f4a159c001d35bb21345e
      size: 2004
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: bc87e8c3aaa62184434016ba73b3b3b2.dir
      size: 11876
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 38197857a1ccfab5e273a891c63f7a40
      size: 2434662
  precompute_matrices@sms_spam-knn-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 7e1314f73ac26fce8393757ba8aad090.dir
      size: 15898
      nfiles: 5
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
  precompute_matrices@sms_spam-svc-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_svc model=gzip_svc ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/svc/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 8af321953fef50144871355d95e12c47.dir
      size: 11228
      nfiles: 5
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 9382f0c339d2a946ebdf067fd9204473
      size: 2359466
  precompute_matrices@sms_spam-logistic-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_logistic model=gzip_logistic ++model.init.condensing_method=None
      ++model.init.m=1 ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_logistic_sms_spam hydra.launcher.n_jobs=-1
      --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: 981a0f98c42f4a159c001d35bb21345e
      size: 2004
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/logistic/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 7a2d0fba7b86d2ad15a3bc472fd55140.dir
      size: 11792
      nfiles: 5
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 9382f0c339d2a946ebdf067fd9204473
      size: 2359466
  condense@ddos-knn-0.8-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.8 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.8/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@ddos-knn-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 56ef8ffb6bc98d4e1fa06077ca7dedbd.dir
      size: 10694
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 65c042b543560f281b8b0adf061f9a81
      size: 1712512
  precompute_matrices@ddos-knn-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 07f6790a2cb2173701966ffef41af2a9.dir
      size: 10674
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: e4c362f1a25897fb4a1e33851f31d478
      size: 3260247
  condense@ddos-knn-0.6-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.6 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.6/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@ddos-knn-pkl-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 66f4fafa73e7f142cf9effc6838789b8.dir
      size: 9626
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 893a8dc96fbf58a32aa83f2e949bd6cc
      size: 3229310
  condense@ddos-knn-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@ddos-knn-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 76bedc22527e226a9065faf734aef5eb.dir
      size: 10697
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: b04a70ac83d9066e88d827d276223482
      size: 3140497
  precompute_matrices@ddos-knn-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: afcb12a6d2330e0a0b676bef995faba3.dir
      size: 10821
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 9e4f2411f322c896fe13b85751519fa1
      size: 1641519
  condense@ddos-knn-0.4-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.4 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.4/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@ddos-knn-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 27a8cdbf913e43d6b6ad8bf20ad18ecb.dir
      size: 10706
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 161879c9ce8d2ccc5abc2f1b1a92bbcd
      size: 6219570
  condense@ddos-knn-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@ddos-knn-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 665df0f8ee7e34bf55535522ff66bd78.dir
      size: 10747
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 68de52551ad9779287f75a4d987f98fd
      size: 1672953
  condense@ddos-knn-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@ddos-knn-jaro-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 1451deb969523b267564ad8323fc1443.dir
      size: 10697
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 9a46ce14be2915165a9b822f1358d5a4
      size: 7230176
  condense@ddos-knn-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@ddos-knn-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: cc57e03120a8bacda60351054c495941.dir
      size: 10838
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: c6f1f89f32b23ab74435119742bc178c
      size: 7222296
  precompute_matrices@ddos-knn-seqratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: cb6c5366dfc3587fcff849d4c378561d.dir
      size: 10768
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: bc85276038c43e7de01bde04a0df27e0
      size: 6164894
  precompute_matrices@ddos-svc-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/svc/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/svc/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 332153e40a93e4ef07f3e31d6d192527.dir
      size: 11179
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  precompute_matrices@ddos-svc-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/svc/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/svc/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: b338c89dbe7f236283a611da2dfb2965.dir
      size: 11213
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  precompute_matrices@ddos-svc-pkl-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/svc/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/svc/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/pkl/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 1df1f5c705de6d32825997c051d619d6.dir
      size: 11175
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  precompute_matrices@ddos-svc-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/svc/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/svc/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 75144cf4c6b944d6a1e51ba317001fd5.dir
      size: 11258
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  precompute_matrices@ddos-svc-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/svc/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/svc/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 56a9578dbd54d23c84d50d601fb68339.dir
      size: 11280
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  precompute_matrices@ddos-svc-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/svc/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/svc/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 7bf657ba3b3166303e34cd4346589905.dir
      size: 11203
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  precompute_matrices@ddos-svc-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_svc model=gzip_svc
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/svc/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/svc/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_svc_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 75d7385072cf6729ecabb8b4afe843f4
      size: 1941
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/svc/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 87126c381af19b08050cbe4825a7e134.dir
      size: 11227
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
  condense@truthseeker-svc-0.7-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.7 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_truthseeker 
      files.reports=reports/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 38197857a1ccfab5e273a891c63f7a40
      size: 2434662
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 6eefce744ad7910eb325e725ff5a75de
      size: 205
  condense@ddos-knn-0.7-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.7 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.7/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@kdd_nsl-knn-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=lzma
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 3b02fafb2dd17293ff148e3d6daa121b.dir
      size: 10724
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 6f26f197e3bb145f01e5b855358317e3
      size: 942302
  precompute_matrices@kdd_nsl-knn-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 7bf87d995b8d050193fd47ca45b13ad0.dir
      size: 10703
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: fe86c4d069369b3aa8d32a8ae84d2eda
      size: 1582137
  precompute_matrices@kdd_nsl-knn-pkl-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=pkl
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a3d8fce2525228a715d00b8a9b00a691.dir
      size: 9654
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: c79bbd288302a8fc9bc082c922850ef6
      size: 1024817
  precompute_matrices@kdd_nsl-knn-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=zstd
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 7c82e065b88f35892eedd7fb6f0b9114.dir
      size: 10722
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f40b5c9b852c8d220586e5eeb3161d01
      size: 1794085
  precompute_matrices@kdd_nsl-knn-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 2e7cbd68030078d8ca9af9ae3c4fce33.dir
      size: 10847
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 748cf9b1cfcecedee9e7cbdf54f1af97
      size: 1067164
  precompute_matrices@kdd_nsl-knn-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 395f07c162fec5ec3e1a00e0e042e853.dir
      size: 10743
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 02b9d072b7848e159ab510d410dae0dc
      size: 1872997
  precompute_matrices@kdd_nsl-knn-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 0839ab53fe980897329bd34e8162723a.dir
      size: 10774
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2e23e6ba3459ad938f1fc82a67e130e8
      size: 1472053
  precompute_matrices@kdd_nsl-knn-jaro-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: e75ee636273f32a2f1dcdaa516db267a.dir
      size: 10720
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4840e682905bcc78805bc7128de28224
      size: 6223899
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro_winkler
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 5b648cc1819ad760ad861945dc924936.dir
      size: 10860
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 8d46e6211b4eaccee84c839d798e6d7f
      size: 6408770
  precompute_matrices@kdd_nsl-knn-seqratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=seqratio
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a4023b20c1493752e78dd9d4207fef50.dir
      size: 10795
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2dbe1232ce35019ee2800a12b77d2112
      size: 1815230
  precompute_matrices@truthseeker-knn-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=lzma
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 1cfd0996aad9a53e3f1c8098a2039952.dir
      size: 13632
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 686c2395a610053cea370803e97808b0
      size: 1431702
  precompute_matrices@truthseeker-knn-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 3acd3ed2620ccc25bc5e8a9243d66132.dir
      size: 13604
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 582e678472c73f21a27236bef047eeee
      size: 3002168
  precompute_matrices@truthseeker-knn-pkl-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=pkl
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: d7ae1c90ee4d24fcb8ba1a8128809275.dir
      size: 12554
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 381b3a845a9e534616fea62592dc4fd5
      size: 1434161
  precompute_matrices@truthseeker-knn-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=zstd
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 2437e2db49f2ee81da080d5d93fed247.dir
      size: 13633
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 00121b15829308dc87d40cda7a4d716f
      size: 2450064
  precompute_matrices@truthseeker-knn-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 7f86a172a7d2119e48404791fc6f566a.dir
      size: 13767
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 20e4bbbfcfff11c52875362f7079d75c
      size: 1424254
  precompute_matrices@truthseeker-knn-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a5190d9ac6703d0c79e7552e4b99cfe8.dir
      size: 13650
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 18f89d4a49870a4d2a97c37633b08ee7
      size: 4525175
  precompute_matrices@truthseeker-knn-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 3bd2a0599db5e2fea3a8784e31cf3e19.dir
      size: 13686
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: a269e6013f790cfaf69d5c1104cce656
      size: 1416961
  precompute_matrices@truthseeker-knn-jaro-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 71a4b7b930f7df05ef18eaa986e50f10.dir
      size: 13629
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 7a7f9a0e31e4cbbe69bb9fb55eca3567
      size: 7193211
  precompute_matrices@truthseeker-knn-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro_winkler
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: eaaa5e409bd4e0cf6118092d889754c9.dir
      size: 13785
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f242434e5d5a57d93d248c20856e1ddd
      size: 7229328
  condense@ddos-svc-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 09f5a34d43d61c9ef1c738dd9203e223
      size: 205
  precompute_matrices@truthseeker-knn-seqratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=seqratio
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 21982beac3304ecb368c8c40cb90a981.dir
      size: 13715
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 33e33cabf8bf65e9b2c42c3a2f391de5
      size: 4514701
  precompute_matrices@sms_spam-knn-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=lzma
      ++model.init.distance_matrix=sms_spam/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: e80be9cc63513c9bcd8f8ef59699a829.dir
      size: 13530
      nfiles: 5
    - path: sms_spam/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: c5db7d6724520d3f5807932acf433286
      size: 1296843
  precompute_matrices@sms_spam-knn-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.distance_matrix=sms_spam/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 34b76ed3737871e9e0fa5f3a3f761a4e.dir
      size: 13513
      nfiles: 5
    - path: sms_spam/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2491cd346921e052098acb28c6231f91
      size: 2534166
  precompute_matrices@sms_spam-knn-pkl-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=pkl
      ++model.init.distance_matrix=sms_spam/models/pkl/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 35746bdf5d6050693c518048db45ec84.dir
      size: 12459
      nfiles: 5
    - path: sms_spam/models/pkl/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 868f0939c5c9a2fdd78f19519676ec9b
      size: 881285
  precompute_matrices@sms_spam-knn-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=zstd
      ++model.init.distance_matrix=sms_spam/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 8be25730db1521e158e8cd8a79e08f0a.dir
      size: 13532
      nfiles: 5
    - path: sms_spam/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 548bab2acc7b23fccbdd89d54d49d44c
      size: 2344400
  precompute_matrices@sms_spam-knn-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.distance_matrix=sms_spam/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 4e7df9d4b86323a87877e4d3268be9e6.dir
      size: 13673
      nfiles: 5
    - path: sms_spam/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 405a8edb15bba835befd725e2c8389fb
      size: 1338309
  precompute_matrices@sms_spam-knn-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.distance_matrix=sms_spam/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 19abd6a40d199d39f3fc34429e52547c.dir
      size: 13544
      nfiles: 5
    - path: sms_spam/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 391570ee9bbb1fd6db9b742d788b46d8
      size: 3268326
  precompute_matrices@sms_spam-knn-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.distance_matrix=sms_spam/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 6e88dc6b52a01eb128ea9ee15fc2310a.dir
      size: 13588
      nfiles: 5
    - path: sms_spam/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: d3f52d89abcd6b7576a19c283e5f9333
      size: 1298847
  precompute_matrices@sms_spam-knn-jaro-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro
      ++model.init.distance_matrix=sms_spam/models/jaro/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 46d76c985d922940cf8f4d9edc7fdd64.dir
      size: 13531
      nfiles: 5
    - path: sms_spam/models/jaro/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 18ad56c9addcae403527f2f7cd46ee01
      size: 6534977
  precompute_matrices@sms_spam-knn-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro_winkler
      ++model.init.distance_matrix=sms_spam/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: d2c83e7c22fb16fba3303eea4876ce10.dir
      size: 13695
      nfiles: 5
    - path: sms_spam/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: d09df7f69acac3845408df08a40221ea
      size: 6536453
  precompute_matrices@sms_spam-knn-seqratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=seqratio
      ++model.init.distance_matrix=sms_spam/models/seqratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 01b0878ff9f1bc9ce00c4a487ff53fe7.dir
      size: 13615
      nfiles: 5
    - path: sms_spam/models/seqratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: c52354119865afaaa18113d50daa38a9
      size: 3217750
  condense@ddos-svc-0.8-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.8 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.8/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5d239c268593f0d81a6f09f2468c3bee
      size: 203
  precompute_matrices@ddos-knn-gzip-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 7a7fe008ecc4a4d8591ee5a752706fe1.dir
      size: 13456
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  precompute_matrices@ddos-knn-gzip-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 0b3c1e479f586370ccfd905ed39a4477.dir
      size: 13458
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  precompute_matrices@ddos-knn-gzip-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: c8488333398b4f37968e71b5c424aa47.dir
      size: 13464
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  precompute_matrices@ddos-knn-gzip-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: dcf4183214236314a196ff7dcad27636.dir
      size: 13461
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  precompute_matrices@ddos-knn-gzip-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 76f418f57309630d5ba7787e0338a4a5.dir
      size: 13460
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  condense@ddos-svc-0.7-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.7 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5d239c268593f0d81a6f09f2468c3bee
      size: 203
  condense@ddos-svc-0.6-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.6 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.6/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5d239c268593f0d81a6f09f2468c3bee
      size: 203
  condense@ddos-svc-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5d239c268593f0d81a6f09f2468c3bee
      size: 203
  condense@ddos-svc-0.4-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.4 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.4/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5d239c268593f0d81a6f09f2468c3bee
      size: 203
  condense@ddos-svc-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5d239c268593f0d81a6f09f2468c3bee
      size: 203
  condense@ddos-svc-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5d239c268593f0d81a6f09f2468c3bee
      size: 203
  condense@ddos-svc-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5d239c268593f0d81a6f09f2468c3bee
      size: 203
  condense@ddos-logistic-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: d6f14b8047cd09fcb96b68d08ef31842
      size: 215
  precompute_matrices@ddos-knn-gzip-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 3f5549fe40e1722c12e8324c85ab2110.dir
      size: 15811
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  precompute_matrices@ddos-knn-gzip-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: ecad8d9c36c46a663276d4e4fefac141.dir
      size: 13460
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-gzip-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 628033e05465b6812d1d370e34958b37.dir
      size: 13461
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  precompute_matrices@ddos-knn-gzip-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 1262887f8844c11b57d95bc7b3cdf13d.dir
      size: 13452
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  precompute_matrices@ddos-knn-lzma-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 9087a1a8c715515272848090e638481e.dir
      size: 13459
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  precompute_matrices@ddos-knn-lzma-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 7f25198c82bd15edf95720e00052fc60.dir
      size: 13449
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  precompute_matrices@ddos-knn-lzma-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 16eacc38765e859c2e12ecd3c4be7349.dir
      size: 13463
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  precompute_matrices@ddos-knn-lzma-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 97dfff567436379d5e11968b9b0d8baa.dir
      size: 13458
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  precompute_matrices@ddos-knn-lzma-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: dee0471d23d0d05307eb9da91549ad88.dir
      size: 13457
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  precompute_matrices@ddos-knn-lzma-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 14e657f19903d7b231220e47c42a694c.dir
      size: 13456
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  condense@ddos-logistic-0.7-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.7 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.7/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: d6f14b8047cd09fcb96b68d08ef31842
      size: 215
  precompute_matrices@ddos-knn-lzma-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 528704cc34363926c93464843b0d54ea.dir
      size: 13461
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-lzma-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 88b79ae2b5d5efd8279238b97a5cb58d.dir
      size: 13456
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  precompute_matrices@ddos-knn-lzma-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 7ea7b26642f442caadfa549bd195d1b1.dir
      size: 13456
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  precompute_matrices@ddos-knn-bz2-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: c127b7d560764a1d6fe2ce465d84aac5.dir
      size: 13441
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  precompute_matrices@ddos-knn-bz2-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 59113b8b2c3f68adb304b885ef4b58ed.dir
      size: 13432
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  condense@ddos-logistic-0.6-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.6 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.6/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: d6f14b8047cd09fcb96b68d08ef31842
      size: 215
  precompute_matrices@ddos-knn-bz2-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 12ad269ea5649fe9b4585df15f96c60b.dir
      size: 13436
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  precompute_matrices@ddos-knn-bz2-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: ea89acdcc5411f5296ba65336cdca457.dir
      size: 13433
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  precompute_matrices@ddos-knn-bz2-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 8ed4f69e1627f8b93f5850462c5bf6a2.dir
      size: 13437
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  condense@ddos-logistic-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: d6f14b8047cd09fcb96b68d08ef31842
      size: 215
  precompute_matrices@ddos-knn-bz2-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: ba66d9074a9cde3c67a6fe19ca9bca73.dir
      size: 13436
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  precompute_matrices@ddos-knn-bz2-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: a1b85643d03244f083ab62a5b1b02b5e.dir
      size: 13441
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-bz2-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 3cd7ac0f145c73cf35ce0d72abfb8b1a.dir
      size: 13439
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  condense@ddos-logistic-0.4-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.4 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.4/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: d6f14b8047cd09fcb96b68d08ef31842
      size: 215
  precompute_matrices@ddos-knn-bz2-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 07b30ff14dac35a6f18f968b1e934cc9.dir
      size: 13436
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  precompute_matrices@ddos-knn-pkl-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 4bac361f5d679864ba494cbd22f2f12b.dir
      size: 12510
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  precompute_matrices@ddos-knn-pkl-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 988da0a970b9068a39f792ea5c0bcbd3.dir
      size: 13424
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  condense@ddos-logistic-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: d6f14b8047cd09fcb96b68d08ef31842
      size: 215
  precompute_matrices@ddos-knn-pkl-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 2e67d18b8be73997f867181c21ee874e.dir
      size: 12514
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  precompute_matrices@ddos-knn-pkl-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 9689f2d1f02b1eff81729370292676d0.dir
      size: 13435
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  condense@ddos-logistic-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: d6f14b8047cd09fcb96b68d08ef31842
      size: 215
  precompute_matrices@ddos-knn-pkl-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 907407fdd8cff6884798c09171402e31.dir
      size: 12520
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  condense@ddos-logistic-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.symmetric=true ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=ddos 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2bd08e132ce0de166906910f8715859c
      size: 2937918
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: d6f14b8047cd09fcb96b68d08ef31842
      size: 215
  precompute_matrices@ddos-knn-pkl-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 00b17521a8724a34e0507fc3b81e6712.dir
      size: 12519
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  condense@kdd_nsl-knn-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  precompute_matrices@ddos-knn-pkl-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 50537fe3871cd251bfbefe8323951ab4.dir
      size: 12517
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-pkl-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 797d6276fb578b9d4af7f63c2293d7db.dir
      size: 13439
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  condense@kdd_nsl-knn-0.8-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.8 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.8/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  precompute_matrices@ddos-knn-pkl-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=pkl 
      ++model.init.distance_matrix=ddos/models/pkl/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 5fdc801a6854044ab3a87ae0e7e9fa88.dir
      size: 12515
      nfiles: 5
    - path: ddos/models/pkl/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  condense@kdd_nsl-knn-0.7-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.7 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.7/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  precompute_matrices@ddos-knn-zstd-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 8c9301eeb47350b79dc73cbe73151bdf.dir
      size: 13460
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  condense@kdd_nsl-knn-0.6-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.6 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.6/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  precompute_matrices@ddos-knn-zstd-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 11f8f4fdd9590aec5ae874235ed4375d.dir
      size: 13461
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  condense@kdd_nsl-knn-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  precompute_matrices@ddos-knn-zstd-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: f388b6f4fe4ed0dd3e41db161c9eef10.dir
      size: 13466
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  condense@kdd_nsl-knn-0.4-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.4 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.4/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  precompute_matrices@ddos-knn-zstd-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: ddbadb617fab844c44ced7032e64d4bc.dir
      size: 13459
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  condense@kdd_nsl-knn-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  precompute_matrices@ddos-knn-zstd-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 5044d6bbb5120ab07a1307048c653eb9.dir
      size: 13451
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  condense@kdd_nsl-knn-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  condense@kdd_nsl-knn-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: e7aecc5419536fb335ca08cbc01c7b0a
      size: 116
  precompute_matrices@ddos-knn-zstd-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 33d84661d2ff35f6226b03620f350bdc.dir
      size: 13459
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  precompute_matrices@ddos-knn-zstd-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 1512651218683efd0ed7e19311ebc9c3.dir
      size: 13457
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-zstd-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 205e201f8aa2165fb5e9e631d054174d.dir
      size: 13461
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  precompute_matrices@ddos-knn-zstd-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 97079de826501d2cc8400558199d1e05.dir
      size: 13451
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  condense@kdd_nsl-svc-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-levenshtein-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 2de98d2506729dc1f34a5c1e9e06ba4b.dir
      size: 13593
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  precompute_matrices@ddos-knn-levenshtein-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: e33d7a901dfe48449d9cadff97427fea.dir
      size: 13592
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  precompute_matrices@ddos-knn-levenshtein-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 9ccfa7ddd89df0d5d141c78e6891a3b8.dir
      size: 13594
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  precompute_matrices@ddos-knn-levenshtein-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 8f0ad89e9abc3c4c6b93763a8406f902.dir
      size: 13594
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  condense@kdd_nsl-svc-0.8-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.8 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.8/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-levenshtein-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 167e1346b10d105af88c69514ad81179.dir
      size: 13598
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  precompute_matrices@ddos-knn-levenshtein-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 70eba399a6ae9cd245e204da8c7c9140.dir
      size: 13603
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  precompute_matrices@ddos-knn-levenshtein-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: c428b8267fea2356a106dac5d54f0f74.dir
      size: 13596
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  condense@kdd_nsl-svc-0.7-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.7 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.7/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-levenshtein-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: d255a3f01468286eee205554cc9f8237.dir
      size: 13601
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  precompute_matrices@ddos-knn-levenshtein-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 8e1f2a7e09eb44a3226c1e6bc0695b83.dir
      size: 13593
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  precompute_matrices@ddos-knn-ratio-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 7bdc29731f7893e24a552a9329886400.dir
      size: 13480
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  condense@kdd_nsl-svc-0.6-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.6 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.6/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-ratio-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: cbbd9ed1519618636c8419c1a6de21c6.dir
      size: 13475
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  precompute_matrices@ddos-knn-ratio-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 00fccd49ebe17d77dd4ebb6535047906.dir
      size: 13473
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  condense@kdd_nsl-svc-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-ratio-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 5f257d27acfd3534a1ccee01b0832eee.dir
      size: 13477
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  precompute_matrices@ddos-knn-ratio-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: e972e3117c2d1f31a30f11ce21285872.dir
      size: 13477
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  precompute_matrices@ddos-knn-ratio-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: f0f277c2a7728b8f90c3457c5d33457b.dir
      size: 13481
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  condense@kdd_nsl-svc-0.4-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.4 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.4/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-ratio-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 606d2dfd18a61b54303284fcb017366f.dir
      size: 13481
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  condense@kdd_nsl-svc-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-ratio-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 247f167d8138053076ac9279dffd77e6.dir
      size: 13477
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  precompute_matrices@ddos-knn-ratio-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 499de7b97e7b89e5a74d9d86b89cb608.dir
      size: 13474
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  condense@kdd_nsl-svc-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-hamming-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 7384466c8d29ad231f3ecfbef6bcc721.dir
      size: 13511
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  condense@kdd_nsl-svc-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 50d9a2679fdda1bd793d47c98bee6270
      size: 212
  precompute_matrices@ddos-knn-hamming-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 19bb35ad326dca57d71a17826f084af4.dir
      size: 13518
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  precompute_matrices@ddos-knn-hamming-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 547438dc1b131799a5f41d3b064b040d.dir
      size: 13513
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  precompute_matrices@ddos-knn-hamming-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 63a9a69d6171b2d353e1e49becb7cc34.dir
      size: 13514
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  precompute_matrices@ddos-knn-hamming-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: c829556585acea2db63f8b6c902b9ad2.dir
      size: 13516
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  condense@kdd_nsl-logistic-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 13f535ae71a7d66c5fabdfe6e03e82b5
      size: 258
  precompute_matrices@ddos-knn-hamming-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 8254d1763b76fd84ae9810e93bf10960.dir
      size: 13519
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  precompute_matrices@ddos-knn-hamming-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 02d9a34f095d5764566605e9c94209cb.dir
      size: 13509
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-hamming-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 68033ebd5fa1f68002e1f9b9d5569e1d.dir
      size: 13511
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  precompute_matrices@ddos-knn-hamming-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 481c704387b7d503d22a0e5e5b39615b.dir
      size: 13511
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  condense@kdd_nsl-logistic-0.8-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.8 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.8/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 13f535ae71a7d66c5fabdfe6e03e82b5
      size: 258
  precompute_matrices@ddos-knn-jaro-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: e1297171545fd3d5cb9b589e6cf927be.dir
      size: 13452
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  precompute_matrices@ddos-knn-jaro-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 976895107cc1f4bf47f52027f07c9064.dir
      size: 13448
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  precompute_matrices@ddos-knn-jaro-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 8e531c5c35b66064ca133f2b17d3c859.dir
      size: 13462
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  condense@kdd_nsl-logistic-0.7-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.7 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.7/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 13f535ae71a7d66c5fabdfe6e03e82b5
      size: 258
  precompute_matrices@ddos-knn-jaro-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: d44252a2655234b4442cc36b28782d39.dir
      size: 13460
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  precompute_matrices@ddos-knn-jaro-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: f2f7be6e216195af1b02036c45f3f006.dir
      size: 13460
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  precompute_matrices@ddos-knn-jaro-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 7a73ab6e68e8adc1eba331debc7c4ac1.dir
      size: 13458
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  condense@kdd_nsl-logistic-0.6-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.6 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.6/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 13f535ae71a7d66c5fabdfe6e03e82b5
      size: 258
  precompute_matrices@ddos-knn-jaro-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 3059a752ae40c6116aa50ab4d3313bd6.dir
      size: 13457
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-jaro-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 499f6ae7e518e4fc00ce4cf293d2a818.dir
      size: 13457
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  precompute_matrices@ddos-knn-jaro-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 62f78965477b87919281bd5334ec3deb.dir
      size: 13452
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  condense@kdd_nsl-logistic-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 13f535ae71a7d66c5fabdfe6e03e82b5
      size: 258
  precompute_matrices@ddos-knn-jaro_winkler-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 87e841ec73ffcd4b4e706f5edd814184.dir
      size: 13620
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  precompute_matrices@ddos-knn-jaro_winkler-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 60338b751fd659d5c6c1ea66890c107f.dir
      size: 13608
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  condense@kdd_nsl-logistic-0.4-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.4 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.4/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 13f535ae71a7d66c5fabdfe6e03e82b5
      size: 258
  precompute_matrices@ddos-knn-jaro_winkler-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 417a1c6158738d7727778dfdc25398e5.dir
      size: 13619
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  condense@kdd_nsl-logistic-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 13f535ae71a7d66c5fabdfe6e03e82b5
      size: 258
  precompute_matrices@ddos-knn-jaro_winkler-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 515978defd2a9e7e54aaa91ee5cb3ffa.dir
      size: 13618
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  precompute_matrices@ddos-knn-jaro_winkler-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 9ff33d40666c9fafe9849760e41d0326.dir
      size: 13615
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  condense@kdd_nsl-logistic-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 25436720479a944870c146c12dababe6
      size: 1697492
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
  precompute_matrices@ddos-knn-jaro_winkler-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 76c3dff7ad04bbd337378eb8d98972c1.dir
      size: 16397
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  precompute_matrices@ddos-knn-jaro_winkler-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: dbca9daa829d8ea6e7bbfccdc65cfec3.dir
      size: 18778
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-jaro_winkler-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 9103486e0563ba95acbd92d4d4a6144a.dir
      size: 16397
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  condense@ddos-knn-0.9-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro_winkler
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/jaro_winkler/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/jaro_winkler/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: c6f1f89f32b23ab74435119742bc178c
      size: 7222296
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/jaro_winkler/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  precompute_matrices@ddos-knn-jaro_winkler-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 00c3589db489df1f33896b69cc69019a.dir
      size: 16393
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  precompute_matrices@ddos-knn-seqratio-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=1 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-1.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 74b14d79e8c5b15d75508fbc680d3f4a.dir
      size: 15899
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f1a5b62c951671ceb7ec71d350c18929
      size: 2877012
  precompute_matrices@ddos-knn-seqratio-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=2 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-2.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 66658dd8b4be03f2134d976c72b25c4d.dir
      size: 15898
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 54e2263c151be446eec8aea0ecdad666
      size: 2917092
  precompute_matrices@ddos-knn-seqratio-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=3 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-3.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: c003712444f1f52fe421fc827817fc57.dir
      size: 16315
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 64dbb6fb610a29aab564d7c983733c81
      size: 2901070
  precompute_matrices@ddos-knn-seqratio-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=4 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-4.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 268a2af8f0116f04bca1dd0b7162db6b.dir
      size: 15893
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 0d5ad75ffd9b3061716af47667d0c99e
      size: 2890448
  precompute_matrices@ddos-knn-seqratio-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=5 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-5.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 02a785705121f518a528b06061d513c0.dir
      size: 15900
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 8547ee3fe532da17d38ebc910441d72d
      size: 2893421
  precompute_matrices@ddos-knn-seqratio-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=6 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-6.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 77fb7a53fb1d7f2c3b23af2d9ceb5a3b.dir
      size: 15903
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 375d359ebd3ea436575741e10208181b
      size: 2881906
  precompute_matrices@ddos-knn-seqratio-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=7 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-7.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 77d16ae630980ca92494eaf3da6855c8.dir
      size: 16315
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: d6311c7015d73fe32c28b7bdfaa719d7
      size: 2914996
  precompute_matrices@ddos-knn-seqratio-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=8 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-8.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 1026c7396fc83d046e66950509da18f7.dir
      size: 15902
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 6d5c219c61766653ed714f5e147661e9
      size: 2903691
  precompute_matrices@ddos-knn-seqratio-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=9 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-9.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 3fca4d81759fa3a70f66f8140ca0b4d8.dir
      size: 15894
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 95fdef0b0f288ded8d3c2f8ebd8cc0e2
      size: 2904248
  precompute_matrices@kdd_nsl-knn-gzip-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 7662dccfe3b5516d96b278259f215fbb.dir
      size: 15863
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-gzip-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 63ed5ed7d1f8776ec3b8346da5dfccfd.dir
      size: 15859
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-gzip-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: b940f6344676be0618b085dde7a4573e.dir
      size: 15864
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-gzip-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: facca986fe6ba3ef0a89fd4caea6001f.dir
      size: 15864
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-gzip-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 0c018ceaaf66c02f289c3b887809df27.dir
      size: 15869
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-gzip-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 4aef9ef8f33c0aad4b7a97a1e902a971.dir
      size: 15862
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-gzip-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 914c5aa483882cdd37ea8837d3c370de.dir
      size: 15859
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-gzip-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 2457c4a7c3c2383102343d912b4a44c5.dir
      size: 15863
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-gzip-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: a830df97858b7b2c61e64a92b41190bf.dir
      size: 13008
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-lzma-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: b76aaefc4647862f50638b4222971dfa.dir
      size: 13013
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-lzma-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: e7a5b810db3a80dcf7057cc6bf8e3082.dir
      size: 13009
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-lzma-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: e6ac3ce16dda1da8861a300beb4b94df.dir
      size: 13010
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-lzma-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 4be3f95e1529c52628d737299d63841b.dir
      size: 13013
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-lzma-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 25fcbfa18bebffd30b70fdddd96a4fc6.dir
      size: 13014
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-lzma-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 2a1d4cec37f378e402c2947dee3cc81b.dir
      size: 13011
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-lzma-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 9fd5db7a1eecdc0fbb8714af74b0f07c.dir
      size: 13008
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-lzma-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: d6185c8fe38be5b332d35736fbd21080.dir
      size: 13008
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-lzma-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 2afabc9ed777ce54f071dee8b9e71247.dir
      size: 13006
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-bz2-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: d657f33d2fa24b79ce8fe5e35128ad94.dir
      size: 12994
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-bz2-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: e3dea1adc0d93a6a1606e98df9cca89b.dir
      size: 12994
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-bz2-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 118200d889b56852623edc4a62bbd04a.dir
      size: 12990
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-bz2-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: c30c919edcd517f57c1d7d8f21a17549.dir
      size: 12994
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-bz2-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: f886a67ed017f96269d081eb75f89fc7.dir
      size: 12998
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-bz2-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 5291a2dcc11900fd95ef0c14bdc1745a.dir
      size: 12993
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-bz2-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 245fcdc7f28407709f5e6200ab714e1a.dir
      size: 12992
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-bz2-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 534e8aede8cb3872f624f4a277f3e899.dir
      size: 12989
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-bz2-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: bb91dfc34098d59537fdc93f3053a3d1.dir
      size: 15348
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-pkl-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: db97ab806a83e3f05259906fd80c2df4.dir
      size: 12998
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-pkl-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: e63ac87f30a0bd6b33e48bfdf0889d40.dir
      size: 12995
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-pkl-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: b2ba3974f6f8bec904300ee8d047ddea.dir
      size: 12997
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-pkl-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 549c6e83bbc11fdeb023c686f97f0f66.dir
      size: 12998
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-pkl-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 8be4a6ae54b70ba398db09591ffda7c6.dir
      size: 12996
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-pkl-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 27d5c18627402f790b8d225eed886e25.dir
      size: 12994
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-pkl-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: d8caefe1700c5f023299d7505623f248.dir
      size: 12992
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-pkl-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 0f5da7efadca594c9dcc72b10ddd6295.dir
      size: 12991
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-pkl-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 4cc88fb9c4d49ddf6d528cd5dc81184d.dir
      size: 12992
      nfiles: 5
    - path: kdd_nsl/models/pkl/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-zstd-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 3b5b784461b179b9e3fb312ad6623674.dir
      size: 13012
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-zstd-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: bc5e8778d8a565d6ab8ba3a1f7fb48da.dir
      size: 13007
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-zstd-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 8f7889321e9f43791c25e8ccebf1b1f1.dir
      size: 13012
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-zstd-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: ba5a34f69c422e6e37971c1263f677cb.dir
      size: 13013
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-zstd-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 46d6f3c6bdc1db61c0e2a5644bb60921.dir
      size: 13012
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-zstd-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 529e0a8b929d00684307aef5ee8c9b85.dir
      size: 13007
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-zstd-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 308a6e29029be8d80d659dfcbe6ed007.dir
      size: 13010
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-zstd-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 700b4fae75b267153a341ecd5cd48ac6.dir
      size: 13011
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-zstd-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 581f670226865b18a3fe3956b3b406c3.dir
      size: 13001
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-levenshtein-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: c7d27eabef823c87387764da855c4374.dir
      size: 13125
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-levenshtein-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: d225a62972f5830794ad06c6c9fa47e6.dir
      size: 13119
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-levenshtein-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 4c51175c7f017744b948f6c8a539761a.dir
      size: 13125
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-levenshtein-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 88320ba41c83109439ba3803dc78c737.dir
      size: 13125
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-levenshtein-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 966863135be1fd16704239fe945fa893.dir
      size: 13125
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-levenshtein-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: eb00795522df80b965243b60e20b9fa9.dir
      size: 13121
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-levenshtein-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 4bbb62b9eb424332da6eb5c3635a099b.dir
      size: 13119
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-levenshtein-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: b07487ab353a17a539fb1b2d6cd09e22.dir
      size: 13121
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-levenshtein-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 5c219e1423a89fd38a3b80fe3e0408cf.dir
      size: 13118
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-ratio-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: cf4926d84a8c40381760b5b42fcaa734.dir
      size: 13024
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-ratio-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: adfe8aaf8a4464c4e2bd65c0298ae10b.dir
      size: 13026
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-ratio-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 29d383ea231c6b21c5510eae0bd579ed.dir
      size: 13027
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-ratio-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 53998ee7c360ccad97325fa0ee66882c.dir
      size: 13026
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-ratio-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: c9af83934b3ecf38c3840682d08c229e.dir
      size: 13026
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-ratio-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: bd61f6ad4af68c034bcb52aedb3a53f3.dir
      size: 13024
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-ratio-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: b05a4ffe5a9786ef6e99cb6d4a4f449d.dir
      size: 13021
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-ratio-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 697e331e167a2fbb0050e6bb87f6a1d0.dir
      size: 13027
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-ratio-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: b04eb0be8a2b0980defef33660d281fc.dir
      size: 13024
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-hamming-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 96665dd6b279dcb16a33090aed4d1628.dir
      size: 13061
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-hamming-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: c995c7cb2a406b9a705ad34e5ebfc827.dir
      size: 13058
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-hamming-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 083e58c09f1f8f18c4e69432c34d22f0.dir
      size: 13060
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-hamming-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 604944144708ff0ab055472a2e6a1452.dir
      size: 13062
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-hamming-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: b097d6270687b914ffba71ac2c83e1eb.dir
      size: 13059
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-hamming-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 183715968a31e332ef145c6af7e53285.dir
      size: 13054
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-hamming-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: f340add9b275c0651aef627f4712d6e2.dir
      size: 13056
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-hamming-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 514195f223b4f9cac9064c3be33a0dd9.dir
      size: 13059
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-hamming-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 4cc55a912a0b8da84a818574d0ffb875.dir
      size: 13053
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-jaro-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 6db6877357c6b0d5a14ba77fc97c6aa9.dir
      size: 13010
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-jaro-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 593fcb554fd1470c91df5d07e7729004.dir
      size: 13008
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-jaro-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: d854139dad3e9d287f821f27a7427ce5.dir
      size: 13014
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-jaro-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 7ac5f263458b0c05dd74350530703285.dir
      size: 13012
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-jaro-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 587b0ded9d45871eb7d9ab1c27b03fa4.dir
      size: 13010
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-jaro-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: a621f2fce06b538abc6b35b6d1234588.dir
      size: 13010
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-jaro-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: c05254f63c0717f4e392877dd133d602.dir
      size: 13006
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-jaro-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 60f9c3de298c33fe4ca58bc782fc7b46.dir
      size: 13010
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-jaro-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: d7b0c2e2ecf50bf25f8f074611645f1b.dir
      size: 13008
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: d47480ff0e735f7f8d570489a01f51f1.dir
      size: 13137
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 6ee38bca5f7da3387b95564bdbea14c1.dir
      size: 13137
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: e30e7c6ce6361d9d0d84e83c2369b84c.dir
      size: 13138
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 1e9e90415261b48a63dc9f6c161693ec.dir
      size: 13139
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 544fa332d554bda08fdf09b289a3158c.dir
      size: 13140
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 0484a762be4d6cb88b942caf8f9e3171.dir
      size: 13134
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 6a26968a9a8bf293ecf365faff5c58e2.dir
      size: 13136
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: dfe96a6d8c0d1c3169fbac9921d5a635.dir
      size: 13139
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 2ddd87f32bff2daeaa974fc7b79e185d.dir
      size: 13136
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@kdd_nsl-knn-seqratio-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-1.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 88a4c3bb205202e2c740fd9ec29c3255.dir
      size: 13076
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: cd5fcc87f45beaaf985c80d03387bd1d
      size: 1681272
  precompute_matrices@kdd_nsl-knn-seqratio-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-2.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 37eaac9e43428f92aa14b850b1b3b5d6.dir
      size: 13071
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 62ee463ed3ff4b5b25208c76d217c118
      size: 1675534
  precompute_matrices@kdd_nsl-knn-seqratio-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-3.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 14169da73a5074328be9ff9e580a8679.dir
      size: 13074
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: ac04f51afab143677c802ac035c47b5c
      size: 1696878
  precompute_matrices@kdd_nsl-knn-seqratio-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-4.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 33fabb7ac0804cf9ad5914aa750e98f2.dir
      size: 13076
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 20428973cc3a7a55057641e50c1a0773
      size: 1692243
  precompute_matrices@kdd_nsl-knn-seqratio-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-5.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 54aff40b039977745e21983eda633154.dir
      size: 13077
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 105d30a56dcf519d7d1e5b8113763a8a
      size: 1703192
  precompute_matrices@kdd_nsl-knn-seqratio-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-6.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 12b1b0e2fa7da3dcc6b4ed02f569dc61.dir
      size: 13074
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: ce45745659f1cb8df0ddbd5c4d0fc1ec
      size: 1704341
  precompute_matrices@kdd_nsl-knn-seqratio-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-7.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 6de7792640fa1cefd445233f266a8506.dir
      size: 13069
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: cc694a3b9a960f85fa43c50d1c37fbb9
      size: 1675122
  precompute_matrices@kdd_nsl-knn-seqratio-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-8.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: ab6f4ac2b93e741136a2eceb7f4a38dd.dir
      size: 13072
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: 7a61707613b63faf7430bbe6d8141659
      size: 1706382
  precompute_matrices@kdd_nsl-knn-seqratio-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-9.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: fadca07be459578eca18d30c28672b22.dir
      size: 13072
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: ef3b967e32b726108bb40c76fa3154ff
      size: 1690553
  precompute_matrices@truthseeker-knn-gzip-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 07d106c1da518e46151bce4577d34c04.dir
      size: 13185
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: c22609ccb60b7852b4cfee170ef1080e
      size: 2473713
  precompute_matrices@truthseeker-knn-gzip-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: d6568f27c7d99706e92c7c25b27adbeb.dir
      size: 13191
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 67551cb83f8ec0af2a11605b59dc879d
      size: 2515463
  precompute_matrices@truthseeker-knn-gzip-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: a59d3172f0434c79a553d9d3edf71cab.dir
      size: 13182
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 5cc71cea8ed5eabf63b97deab27e62d2
      size: 2485278
  precompute_matrices@truthseeker-knn-gzip-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: a99f76bd2eca3a397db9f9741bab3c8e.dir
      size: 13189
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 592be725c207c7df02a16b2133aacb51
      size: 2508490
  precompute_matrices@truthseeker-knn-gzip-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 916e86219d02a1ed4c67513153db6f9e.dir
      size: 13191
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: dfac4dbc393151fed5e9d2ff9df708a4
      size: 2472857
  precompute_matrices@truthseeker-knn-gzip-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 4f467b075286e3bd1750dfdcf7a292e9.dir
      size: 13186
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 83b57507b2a1bd4990ab4f61b662190d
      size: 2483367
  precompute_matrices@truthseeker-knn-gzip-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 1380e24b8082ba54a660574b7fd56784.dir
      size: 13186
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: dfb91ca8743b54d25497696b79ac3114
      size: 2504590
  precompute_matrices@truthseeker-knn-gzip-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: eea8d6e030f9dcc1a3b3e4c599abf7a2.dir
      size: 13190
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: bbc09f9f99aeb7900ad807952716bf55
      size: 2488759
  precompute_matrices@truthseeker-knn-gzip-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 40c66d15965b90c2e9d2bc1b83a9b025.dir
      size: 13184
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 47991fd4114339af102a4b86eb524297
      size: 2503363
  precompute_matrices@truthseeker-knn-lzma-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 39622cfeb5ab6f86c2bf900417cfe35a.dir
      size: 13188
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: c22609ccb60b7852b4cfee170ef1080e
      size: 2473713
  precompute_matrices@truthseeker-knn-lzma-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: fa19e6f6854eb9cf8d4a121d3c35a058.dir
      size: 13190
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 67551cb83f8ec0af2a11605b59dc879d
      size: 2515463
  precompute_matrices@truthseeker-knn-lzma-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 1c1078b0bbeafceeba13995a2e69ad1a.dir
      size: 13181
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 5cc71cea8ed5eabf63b97deab27e62d2
      size: 2485278
  precompute_matrices@truthseeker-knn-lzma-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 7c22d2cfd19cfe2c962d96d932de5e0b.dir
      size: 13190
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 592be725c207c7df02a16b2133aacb51
      size: 2508490
  precompute_matrices@truthseeker-knn-lzma-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 6258a03074263fb94684694d36a50b67.dir
      size: 13187
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: dfac4dbc393151fed5e9d2ff9df708a4
      size: 2472857
  precompute_matrices@truthseeker-knn-lzma-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: e5113961acfe6164f969451164c52bde.dir
      size: 13181
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 83b57507b2a1bd4990ab4f61b662190d
      size: 2483367
  precompute_matrices@truthseeker-knn-lzma-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: d74c0a8b3b28a6486a4146748c6a921e.dir
      size: 13187
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: dfb91ca8743b54d25497696b79ac3114
      size: 2504590
  precompute_matrices@truthseeker-knn-lzma-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 5274f0fe576feae72822f03b3bf67d16.dir
      size: 13189
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: bbc09f9f99aeb7900ad807952716bf55
      size: 2488759
  precompute_matrices@truthseeker-knn-lzma-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 931d425aacfdc27ea4ee6ddd37ad8b79.dir
      size: 13187
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 47991fd4114339af102a4b86eb524297
      size: 2503363
  precompute_matrices@truthseeker-knn-bz2-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 9e744d3f6bba8403ee11362c5b12a5c1.dir
      size: 13174
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: c22609ccb60b7852b4cfee170ef1080e
      size: 2473713
  precompute_matrices@truthseeker-knn-bz2-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: fbd80732d57883f22a19d9e85f4eaeb5.dir
      size: 13171
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 67551cb83f8ec0af2a11605b59dc879d
      size: 2515463
  precompute_matrices@truthseeker-knn-bz2-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: b5323641310add5347879938d0782645.dir
      size: 13168
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 5cc71cea8ed5eabf63b97deab27e62d2
      size: 2485278
  precompute_matrices@truthseeker-knn-bz2-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: d9c6fb1e07d5f78d2eb618d88088b903.dir
      size: 13173
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 592be725c207c7df02a16b2133aacb51
      size: 2508490
  precompute_matrices@truthseeker-knn-bz2-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: c163c10e3e58966e175ac852eeaabbf9.dir
      size: 13174
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: dfac4dbc393151fed5e9d2ff9df708a4
      size: 2472857
  precompute_matrices@truthseeker-knn-bz2-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 6cb7a409282d094abd02c6309cf12e77.dir
      size: 13170
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 83b57507b2a1bd4990ab4f61b662190d
      size: 2483367
  precompute_matrices@truthseeker-knn-bz2-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: a3a418bc65cf5abc46a5612615dc427f.dir
      size: 13166
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: dfb91ca8743b54d25497696b79ac3114
      size: 2504590
  precompute_matrices@truthseeker-knn-bz2-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 944b93e224b09edf0b9347d2efb4557f.dir
      size: 13174
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: bbc09f9f99aeb7900ad807952716bf55
      size: 2488759
  precompute_matrices@truthseeker-knn-bz2-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: e246f75ca520e7b5cc9804c904fdd8de.dir
      size: 13166
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 47991fd4114339af102a4b86eb524297
      size: 2503363
  precompute_matrices@truthseeker-knn-pkl-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 77faf8a5d76da8b4c723779ea5bf2ea6.dir
      size: 13167
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: c22609ccb60b7852b4cfee170ef1080e
      size: 2473713
  precompute_matrices@truthseeker-knn-pkl-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: c8aa00119a3f03c2a470d3101fb9dd5b.dir
      size: 13172
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 67551cb83f8ec0af2a11605b59dc879d
      size: 2515463
  precompute_matrices@truthseeker-knn-pkl-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: d8a2977f76a4b1f371c4baf0cf06e03c.dir
      size: 13163
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 5cc71cea8ed5eabf63b97deab27e62d2
      size: 2485278
  precompute_matrices@truthseeker-knn-pkl-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: fbfe652b5b40b8d70b2a3746b4988c85.dir
      size: 13175
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 592be725c207c7df02a16b2133aacb51
      size: 2508490
  precompute_matrices@truthseeker-knn-pkl-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 678ad5513b6ebe129aa86917d3fca7c6.dir
      size: 13173
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: dfac4dbc393151fed5e9d2ff9df708a4
      size: 2472857
  precompute_matrices@truthseeker-knn-pkl-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 80fa29567a12fc0238774fd0b9e4e3fb.dir
      size: 13167
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 83b57507b2a1bd4990ab4f61b662190d
      size: 2483367
  precompute_matrices@truthseeker-knn-pkl-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 21940502492845e97c1e4ed1e2337708.dir
      size: 13170
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: dfb91ca8743b54d25497696b79ac3114
      size: 2504590
  precompute_matrices@truthseeker-knn-pkl-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 05c4dc8fde03ed8ac6d2a97bca38daf3.dir
      size: 13175
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: bbc09f9f99aeb7900ad807952716bf55
      size: 2488759
  precompute_matrices@truthseeker-knn-pkl-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/pkl/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/pkl/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 3b74dccc0414de54b73e2825261e22ba.dir
      size: 13170
      nfiles: 5
    - path: truthseeker/models/pkl/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 47991fd4114339af102a4b86eb524297
      size: 2503363
  precompute_matrices@truthseeker-knn-zstd-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 0031a9c3a376fbe36bad6b5812c633eb.dir
      size: 13190
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: c22609ccb60b7852b4cfee170ef1080e
      size: 2473713
  precompute_matrices@truthseeker-knn-zstd-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: bf76abf5db8226db2b022f082b30101f.dir
      size: 13190
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 67551cb83f8ec0af2a11605b59dc879d
      size: 2515463
  precompute_matrices@truthseeker-knn-zstd-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 3121e280a3e3a56afcc43d3205c3917e.dir
      size: 13179
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: 5cc71cea8ed5eabf63b97deab27e62d2
      size: 2485278
  precompute_matrices@truthseeker-knn-zstd-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 6086017c61705997b261479d0cad86bd.dir
      size: 13190
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: 592be725c207c7df02a16b2133aacb51
      size: 2508490
  precompute_matrices@truthseeker-knn-zstd-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: bd32bac51615d7588f6c66be412e59f4.dir
      size: 13189
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: dfac4dbc393151fed5e9d2ff9df708a4
      size: 2472857
  precompute_matrices@truthseeker-knn-zstd-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: f93569d67d47ec5be16a062c540c6ac5.dir
      size: 10799
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 471b2e9008f827b6ccd7150e85d8e8ea
      size: 2487756
  precompute_matrices@truthseeker-knn-zstd-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 888d9ea61d80fc1d389d94793708b92b.dir
      size: 10801
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: 43351cf12e77e1529f6d0719f02ca06d
      size: 2507114
  precompute_matrices@truthseeker-knn-zstd-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 1ba5c53c7e9e5a1dd691faadbad15400.dir
      size: 10807
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: fb8a21c5676e1f3d90a4d9777d1c58c8
      size: 2491191
  precompute_matrices@truthseeker-knn-zstd-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: df0bab593586d554d4f122c0f8259098.dir
      size: 10804
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 534760e21a9297e4cd3a00f4a848db29
      size: 2503931
  precompute_matrices@truthseeker-knn-levenshtein-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 689f982305c02dc560ade7561a311d2a.dir
      size: 10893
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f9a3a9280606b0b56c46001c9deb6b19
      size: 2476891
  precompute_matrices@truthseeker-knn-levenshtein-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: fa527149c79fa2756cf822b8497ce4b4.dir
      size: 10892
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 266e2700a25639ca749717e92ef8d5ac
      size: 2517000
  precompute_matrices@truthseeker-knn-levenshtein-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: f43ae4690f766425ce6e3c78db848c3f.dir
      size: 10895
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: fce8fd08f6d781123bdeec3f7a778dd3
      size: 2487785
  precompute_matrices@truthseeker-knn-levenshtein-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 2b36e529852c8994beddb69428364efa.dir
      size: 10896
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: f171069eaeb28a8f8f60ea01d74a2a05
      size: 2510383
  precompute_matrices@truthseeker-knn-levenshtein-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: f74f6b514524afbf2591dbcc8212980d.dir
      size: 10897
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 324b1955e5366df9d43a5b7fa55e1fef
      size: 2476527
  precompute_matrices@truthseeker-knn-levenshtein-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 4aa5f7640cc9bd27804d3ea8f54b575e.dir
      size: 10895
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 471b2e9008f827b6ccd7150e85d8e8ea
      size: 2487756
  precompute_matrices@truthseeker-knn-levenshtein-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 981b2871f3ba14d628d70fbeebbd120f.dir
      size: 10894
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: 43351cf12e77e1529f6d0719f02ca06d
      size: 2507114
  precompute_matrices@truthseeker-knn-levenshtein-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: dbeeba886778b7d37440e378a90874f8.dir
      size: 10896
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: fb8a21c5676e1f3d90a4d9777d1c58c8
      size: 2491191
  precompute_matrices@truthseeker-knn-levenshtein-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: c75c6e7c8bfc599c29fceae12ccbff22.dir
      size: 10896
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 534760e21a9297e4cd3a00f4a848db29
      size: 2503931
  precompute_matrices@truthseeker-knn-ratio-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: e21d32d9c33d6d8d4eee5b9b363d623c.dir
      size: 10815
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f9a3a9280606b0b56c46001c9deb6b19
      size: 2476891
  precompute_matrices@truthseeker-knn-ratio-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 99fb93d282952885371dd74a982cddcb.dir
      size: 10816
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 266e2700a25639ca749717e92ef8d5ac
      size: 2517000
  precompute_matrices@truthseeker-knn-ratio-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 4c6a1631a1ca97ce3317490163466cb5.dir
      size: 10821
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: fce8fd08f6d781123bdeec3f7a778dd3
      size: 2487785
  precompute_matrices@truthseeker-knn-ratio-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 3c8ecfba2ee14f9bb1f56d36b1587ca3.dir
      size: 10817
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: f171069eaeb28a8f8f60ea01d74a2a05
      size: 2510383
  precompute_matrices@truthseeker-knn-ratio-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 02f96d496995fbc2ec96f6eb40b63fdc.dir
      size: 10822
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 324b1955e5366df9d43a5b7fa55e1fef
      size: 2476527
  precompute_matrices@truthseeker-knn-ratio-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: c3cb03004cfd5f15fbb0bc890a680fa5.dir
      size: 10818
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 471b2e9008f827b6ccd7150e85d8e8ea
      size: 2487756
  precompute_matrices@truthseeker-knn-ratio-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: f8aebfcc2c49d7883fccb6e6330e53c5.dir
      size: 10817
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: 43351cf12e77e1529f6d0719f02ca06d
      size: 2507114
  precompute_matrices@truthseeker-knn-ratio-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: f81eb21bae7b0e818340033f42f6c3bd.dir
      size: 10816
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: fb8a21c5676e1f3d90a4d9777d1c58c8
      size: 2491191
  precompute_matrices@truthseeker-knn-ratio-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: ae4561293ed9f3bd30e38172127237a4.dir
      size: 10818
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 534760e21a9297e4cd3a00f4a848db29
      size: 2503931
  precompute_matrices@truthseeker-knn-hamming-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: b538a58dffdc5386fa256bd15784e9ea.dir
      size: 10846
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f9a3a9280606b0b56c46001c9deb6b19
      size: 2476891
  precompute_matrices@truthseeker-knn-hamming-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: c10d8bc8396d3419139467fc4ae155a5.dir
      size: 10839
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 266e2700a25639ca749717e92ef8d5ac
      size: 2517000
  precompute_matrices@truthseeker-knn-hamming-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: ef313e5ba6d400930686a964ff207f5b.dir
      size: 10846
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: fce8fd08f6d781123bdeec3f7a778dd3
      size: 2487785
  precompute_matrices@truthseeker-knn-hamming-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 60ed7d02c0ee309ecef0fee30a836325.dir
      size: 10844
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: f171069eaeb28a8f8f60ea01d74a2a05
      size: 2510383
  precompute_matrices@truthseeker-knn-hamming-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: b3e40e8d4092e1aa4e26305752d275fe.dir
      size: 10844
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 324b1955e5366df9d43a5b7fa55e1fef
      size: 2476527
  precompute_matrices@truthseeker-knn-hamming-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 77c2d50d320e03114e3b509cc4e0c228.dir
      size: 10840
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 471b2e9008f827b6ccd7150e85d8e8ea
      size: 2487756
  precompute_matrices@truthseeker-knn-hamming-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 4b02cebb986c4d9757a07514e7b24269.dir
      size: 10841
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: 43351cf12e77e1529f6d0719f02ca06d
      size: 2507114
  precompute_matrices@truthseeker-knn-hamming-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 006b11e264d505be93c339e1b58ca568.dir
      size: 10843
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: fb8a21c5676e1f3d90a4d9777d1c58c8
      size: 2491191
  precompute_matrices@truthseeker-knn-hamming-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 55b384fa4a48eaa843c0ec00ac03b8d9.dir
      size: 10842
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 534760e21a9297e4cd3a00f4a848db29
      size: 2503931
  precompute_matrices@truthseeker-knn-jaro-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: c295c9e2b6813bde29169c84bdc9ca36.dir
      size: 10802
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f9a3a9280606b0b56c46001c9deb6b19
      size: 2476891
  precompute_matrices@truthseeker-knn-jaro-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 0be30795e7c651d3f6d36f75b4dbba15.dir
      size: 10802
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 266e2700a25639ca749717e92ef8d5ac
      size: 2517000
  precompute_matrices@truthseeker-knn-jaro-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 5906733b7f0f0ba003e299784ee2a66e.dir
      size: 10808
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: fce8fd08f6d781123bdeec3f7a778dd3
      size: 2487785
  precompute_matrices@truthseeker-knn-jaro-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: fc8809793381c710965261eb4f64c638.dir
      size: 10799
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: f171069eaeb28a8f8f60ea01d74a2a05
      size: 2510383
  precompute_matrices@truthseeker-knn-jaro-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 4c8915362f8864d300e9ca12f040a646.dir
      size: 10809
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 324b1955e5366df9d43a5b7fa55e1fef
      size: 2476527
  precompute_matrices@truthseeker-knn-jaro-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 666cf20e88644f8d81f59b8020df4c64.dir
      size: 10800
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 471b2e9008f827b6ccd7150e85d8e8ea
      size: 2487756
  precompute_matrices@truthseeker-knn-jaro-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: e5f26f6464b206319d546b1e28f7deb8.dir
      size: 10801
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: 43351cf12e77e1529f6d0719f02ca06d
      size: 2507114
  precompute_matrices@truthseeker-knn-jaro-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: f4fe5d61c24ff313b571c4ed08ff01cc.dir
      size: 10803
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: fb8a21c5676e1f3d90a4d9777d1c58c8
      size: 2491191
  precompute_matrices@truthseeker-knn-jaro-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 38dc2d5e6fca8f2bd71f3e2d40d420c3.dir
      size: 10807
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 534760e21a9297e4cd3a00f4a848db29
      size: 2503931
  precompute_matrices@truthseeker-knn-jaro_winkler-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: ea00a229c6b8a7f990a5e7be0528bd16.dir
      size: 10908
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f9a3a9280606b0b56c46001c9deb6b19
      size: 2476891
  precompute_matrices@truthseeker-knn-jaro_winkler-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 1197b53d567d635ef538cbe25c93c944.dir
      size: 10907
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 266e2700a25639ca749717e92ef8d5ac
      size: 2517000
  precompute_matrices@truthseeker-knn-jaro_winkler-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: b71051c330edfa76cc071d82a372972e.dir
      size: 10911
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: fce8fd08f6d781123bdeec3f7a778dd3
      size: 2487785
  precompute_matrices@truthseeker-knn-jaro_winkler-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: 9a94662833a03fb05c6c80213cc31ff7.dir
      size: 10909
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: f171069eaeb28a8f8f60ea01d74a2a05
      size: 2510383
  precompute_matrices@truthseeker-knn-jaro_winkler-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 64e58f3a0d2a70f22c557fe7e2a79b7f.dir
      size: 10911
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 324b1955e5366df9d43a5b7fa55e1fef
      size: 2476527
  precompute_matrices@truthseeker-knn-jaro_winkler-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: 5a0f1478a05c3bcbddf44211cedfc152.dir
      size: 10905
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 471b2e9008f827b6ccd7150e85d8e8ea
      size: 2487756
  precompute_matrices@truthseeker-knn-jaro_winkler-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: b30260a443d7e924b1b4bd2d551f2970.dir
      size: 10908
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: 43351cf12e77e1529f6d0719f02ca06d
      size: 2507114
  precompute_matrices@truthseeker-knn-jaro_winkler-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: 526df5ac5fbb5eb9a8d5e731e90c59d8.dir
      size: 10910
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: fb8a21c5676e1f3d90a4d9777d1c58c8
      size: 2491191
  precompute_matrices@truthseeker-knn-jaro_winkler-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 90c88a4adf094f88fa256cb36ddc47d9.dir
      size: 10910
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 534760e21a9297e4cd3a00f4a848db29
      size: 2503931
  precompute_matrices@truthseeker-knn-seqratio-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-1.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 4403a05c4354f9fb54da939d962d7f21.dir
      size: 10856
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: f9a3a9280606b0b56c46001c9deb6b19
      size: 2476891
  precompute_matrices@truthseeker-knn-seqratio-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-2.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: e6d14833f8491e52d6fec6f4d0933bc4.dir
      size: 10855
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 266e2700a25639ca749717e92ef8d5ac
      size: 2517000
  precompute_matrices@truthseeker-knn-seqratio-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-3.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: 06705e278fca342a78123921d212927a.dir
      size: 10860
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: fce8fd08f6d781123bdeec3f7a778dd3
      size: 2487785
  precompute_matrices@truthseeker-knn-seqratio-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-4.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-4/
      hash: md5
      md5: c9367a743855c5e769cb948f9e936003.dir
      size: 10854
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-4.npz
      hash: md5
      md5: f171069eaeb28a8f8f60ea01d74a2a05
      size: 2510383
  precompute_matrices@truthseeker-knn-seqratio-true-5-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=5
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-5.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-5/
      hash: md5
      md5: 1b47a70bac57a93f73a2cc640546b7a6.dir
      size: 10860
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-5.npz
      hash: md5
      md5: 324b1955e5366df9d43a5b7fa55e1fef
      size: 2476527
  precompute_matrices@truthseeker-knn-seqratio-true-6-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=6
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-6.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-6/
      hash: md5
      md5: bec1159f43195c7fe18eacc9a99a7503.dir
      size: 10855
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-6.npz
      hash: md5
      md5: 471b2e9008f827b6ccd7150e85d8e8ea
      size: 2487756
  precompute_matrices@truthseeker-knn-seqratio-true-7-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=7
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-7.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-7/
      hash: md5
      md5: 0f6ae452703874019c477b473954e534.dir
      size: 10857
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-7.npz
      hash: md5
      md5: 43351cf12e77e1529f6d0719f02ca06d
      size: 2507114
  precompute_matrices@truthseeker-knn-seqratio-true-8-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=8
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-8.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-8/
      hash: md5
      md5: cb0c43401ce3fcac1e9b5850fbcdfced.dir
      size: 10857
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-8.npz
      hash: md5
      md5: fb8a21c5676e1f3d90a4d9777d1c58c8
      size: 2491191
  precompute_matrices@truthseeker-knn-seqratio-true-9-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=9
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-9.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-9/
      hash: md5
      md5: 20f54b9dba8719beb3999497d3e8bbc2.dir
      size: 10858
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-9.npz
      hash: md5
      md5: 534760e21a9297e4cd3a00f4a848db29
      size: 2503931
  precompute_matrices@sms_spam-knn-gzip-true-1-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=1
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-1.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-1/
      hash: md5
      md5: 2f84a2a4deeffeea18aeb708fe277a2c.dir
      size: 10678
      nfiles: 5
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-1.npz
      hash: md5
      md5: 4c82063528727bb11db0e7728923d96c
      size: 2339193
  precompute_matrices@sms_spam-knn-gzip-true-2-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=2
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-2.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-2/
      hash: md5
      md5: 354c62a40f8bb8fd4a6ca9468b6c431d.dir
      size: 10671
      nfiles: 5
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-2.npz
      hash: md5
      md5: 8c69efc56ba047297e6236d5d5f00ca9
      size: 2370262
  precompute_matrices@sms_spam-knn-gzip-true-3-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=3
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-3.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-3/
      hash: md5
      md5: e7c914a26ff3b1043cdea1ea6721951e.dir
      size: 10672
      nfiles: 5
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-3.npz
      hash: md5
      md5: d9841b0cc35ef7fa605d32ce1d453029
      size: 2359612
  precompute_matrices@sms_spam-knn-gzip-true-4-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=4
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-4.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-4/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
