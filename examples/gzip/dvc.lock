schema: '2.0'
stages:
  data:
    cmd: python data_prep.py
    deps:
    - path: data_prep.py
      hash: md5
      md5: 18244c921ed2d7cbf25b8362b3ca33aa
      size: 5146
    outs:
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
  parse_params:
    cmd: python -m deckard.layers.parse
    deps:
    - path: conf/data
      hash: md5
      md5: d405445aa6668eb8895082ecc2b863c5.dir
      size: 2452
      nfiles: 9
    - path: conf/default.yaml
      hash: md5
      md5: a0a533f84a7ffce197e0db5439219faf
      size: 1504
    - path: conf/files
      hash: md5
      md5: 23716443bd515e95c89a4c698e6e2644.dir
      size: 300
      nfiles: 1
    - path: conf/model
      hash: md5
      md5: 0b241be12ec51816a3d6e2690f09af81.dir
      size: 4955
      nfiles: 16
    - path: conf/scorers
      hash: md5
      md5: e3e4a85af427799284ed28f899af4a90.dir
      size: 376
      nfiles: 2
    outs:
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
  train:
    cmd: python -m deckard.layers.experiment train
    deps:
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      params.yaml:
        data:
          drop:
          - id
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          data_dir: data
          data_file: kdd_nsl-0-100-100
          data_type: .pkl
          directory: kdd_nsl
          model_dir: model
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          data:
            drop:
            - id
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            condensing_method: None
            distance_matrix: kdd_nsl/model/gzip/100-100/0.npz
            k: 1
            m: -1
            metric: gzip
            name: gzip_classifier.GzipKNN
            symmetric: false
          library: sklearn
        model_name: gzip_knn
        scorers:
          accuracy:
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: kdd_nsl/data/kdd_nsl-0-100-100.pkl/
      hash: md5
      md5: e4ba3bf8bf9a5602aa0b3df493f6a438
      size: 39291
    - path: kdd_nsl/reports/train/default/predictions.json
      hash: md5
      md5: 01b717fd4735f5bdc3cf2f9f77fd92ec
      size: 1608
    - path: kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: a16b00fe0888a02885cc9718330c33a3
      size: 467
  condense@sms_spam-knn-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_sms_spam 
      files.reports=reports/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 310a59fbd620cf5302cea68ecc4ea06f
      size: 74
  condense@sms_spam-svc-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_sms_spam 
      files.reports=reports/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 87a7e9347c88e86aaa49f2e5ecb945fb
      size: 204
  merge_condense@ddos:
    cmd: python merge.py --big_dir ddos/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      ddos/plots/ --output_file condensed_merged.csv
    deps:
    - path: ddos/plots/clean/condense/knn.csv
      hash: md5
      md5: d53ee0a8ab38b6cdf2ed029df5b5b3b2
      size: 956243
    - path: ddos/plots/clean/condense/logistic.csv
      hash: md5
      md5: 98a328719f5582ae0e5b273c6051b75f
      size: 7963208
    - path: ddos/plots/clean/condense/svc.csv
      hash: md5
      md5: 3ba1050be77a4c3cdc208fa816948c88
      size: 8853711
    outs:
    - path: ddos/plots/condensed_merged.csv
      hash: md5
      md5: b3a41b4aba54495c360329d98542e074
      size: 17989605
  copy@ddos:
    cmd: rm -rf ~/Gzip-KNN/figs/ddos/ && mkdir -p ~/Gzip-KNN/figs/ddos/ && cp -r ddos/plots/*
      ~/Gzip-KNN/figs/ddos/ && rm -rf ~/Gzip-KNN/figs/ddos/.gitignore
    deps:
    - path: ddos/plots/
      hash: md5
      md5: 5f34afdc34644e4a49cc6aaadae5542c.dir
      size: 43855132
      nfiles: 31
  merge_condense@kdd_nsl:
    cmd: python merge.py --big_dir kdd_nsl/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      kdd_nsl/plots/ --output_file condensed_merged.csv
    deps:
    - path: kdd_nsl/plots/clean/condense/knn.csv
      hash: md5
      md5: 212b55e393f7f4c20683a9748e0e0fbe
      size: 375925
    - path: kdd_nsl/plots/clean/condense/logistic.csv
      hash: md5
      md5: fb1aa72c0e5b8f22d594a0bcdd9899ea
      size: 7617985
    - path: kdd_nsl/plots/clean/condense/svc.csv
      hash: md5
      md5: f3dd04cf71643a12b9c370c6e14c7587
      size: 7226746
    outs:
    - path: kdd_nsl/plots/condensed_merged.csv
      hash: md5
      md5: 7848c6501fd6c2bb70f0d6263e061bec
      size: 15409277
  copy@kdd_nsl:
    cmd: rm -rf ~/Gzip-KNN/figs/kdd_nsl/ && mkdir -p ~/Gzip-KNN/figs/kdd_nsl/ && cp
      -r kdd_nsl/plots/* ~/Gzip-KNN/figs/kdd_nsl/ && rm -rf ~/Gzip-KNN/figs/kdd_nsl/.gitignore
    deps:
    - path: kdd_nsl/plots/
      hash: md5
      md5: ef24c7a446d1547a93f48a08522642a8.dir
      size: 37794715
      nfiles: 31
  merge_condense@sms_spam:
    cmd: python merge.py --big_dir sms_spam/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      sms_spam/plots/ --output_file condensed_merged.csv
    deps:
    - path: sms_spam/plots/clean/condense/knn.csv
      hash: md5
      md5: 954d3a2d9981acba84c337b02ab88d53
      size: 46192
    - path: sms_spam/plots/clean/condense/logistic.csv
      hash: md5
      md5: 2bf32612647aa022562f1f704369d613
      size: 1109552
    - path: sms_spam/plots/clean/condense/svc.csv
      hash: md5
      md5: f9ad97a38250e574aec3fdf78244dcf7
      size: 920268
    outs:
    - path: sms_spam/plots/condensed_merged.csv
      hash: md5
      md5: 333881af8aed46bac85ae09fe6665563
      size: 2098312
  copy@truthseeker:
    cmd: rm -rf ~/Gzip-KNN/figs/truthseeker/ && mkdir -p ~/Gzip-KNN/figs/truthseeker/
      && cp -r truthseeker/plots/* ~/Gzip-KNN/figs/truthseeker/ && rm -rf ~/Gzip-KNN/figs/truthseeker/.gitignore
    deps:
    - path: truthseeker/plots/
      hash: md5
      md5: 8e8a42353e556ddbf68b4c82f9b8d8a5.dir
      size: 12059898
      nfiles: 27
  copy@sms_spam:
    cmd: rm -rf ~/Gzip-KNN/figs/sms_spam/ && mkdir -p ~/Gzip-KNN/figs/sms_spam/ &&
      cp -r sms_spam/plots/* ~/Gzip-KNN/figs/sms_spam/ && rm -rf ~/Gzip-KNN/figs/sms_spam/.gitignore
    deps:
    - path: sms_spam/plots/
      hash: md5
      md5: 0451c1d58940c88d000d8ce46e810c5f.dir
      size: 11205917
      nfiles: 31
  compile@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_knn  --results_file
      truthseeker/reports/gzip_knn.csv
    deps:
    - path: truthseeker/reports/gzip_knn/
      hash: md5
      md5: 4e0f7645a656121175c7440a64458169.dir
      size: 1464091
      nfiles: 1281
    outs:
    - path: truthseeker/reports/gzip_knn.csv
      hash: md5
      md5: 3e59030f8dcfc72848567124b1237aaa
      size: 501505
  clean@truthseeker-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_knn.csv
      -o truthseeker/plots/clean/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_knn.csv
      hash: md5
      md5: 3e59030f8dcfc72848567124b1237aaa
      size: 501505
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_knn.csv
      hash: md5
      md5: 28307c5fc09f17e8ac944f8a97e3bd6b
      size: 365084
  compile@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_logistic  --results_file
      truthseeker/reports/gzip_logistic.csv
    deps:
    - path: truthseeker/reports/gzip_logistic/
      hash: md5
      md5: 2ebef70c89d3a1899bbf3269e75afa7d.dir
      size: 3539223
      nfiles: 3072
    outs:
    - path: truthseeker/reports/gzip_logistic.csv
      hash: md5
      md5: 5b1c279b8be219646298113e51aa0276
      size: 1277962
  clean@truthseeker-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_logistic.csv
      -o truthseeker/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_logistic.csv
      hash: md5
      md5: 5b1c279b8be219646298113e51aa0276
      size: 1277962
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_logistic.csv
      hash: md5
      md5: f5a8dc653cb04837dbd27f48867d44ae
      size: 1033036
  compile@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/gzip_svc  --results_file
      truthseeker/reports/gzip_svc.csv
    deps:
    - path: truthseeker/reports/gzip_svc/
      hash: md5
      md5: 56fd24a108e689d690f46c83d0559104.dir
      size: 3445323
      nfiles: 3072
    outs:
    - path: truthseeker/reports/gzip_svc.csv
      hash: md5
      md5: 1efa4d63ac9499ad9983c9a210b4d74d
      size: 1216191
  clean@truthseeker-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/gzip_svc.csv
      -o truthseeker/plots/clean/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/gzip_svc.csv
      hash: md5
      md5: 1efa4d63ac9499ad9983c9a210b4d74d
      size: 1216191
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/gzip_svc.csv
      hash: md5
      md5: 381016fe6534012bb7e034dda52801d4
      size: 965305
  merge@truthseeker:
    cmd: python merge.py --big_dir truthseeker/plots/ --data_file clean/gzip_knn.csv
      --little_dir_data_file clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder
      truthseeker/plots --output_file merged.csv
    deps:
    - path: truthseeker/plots/clean/gzip_knn.csv
      hash: md5
      md5: 28307c5fc09f17e8ac944f8a97e3bd6b
      size: 365084
    - path: truthseeker/plots/clean/gzip_logistic.csv
      hash: md5
      md5: f5a8dc653cb04837dbd27f48867d44ae
      size: 1033036
    - path: truthseeker/plots/clean/gzip_svc.csv
      hash: md5
      md5: 381016fe6534012bb7e034dda52801d4
      size: 965305
    outs:
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 58d8a89aa19ccff0f5791d261b46dad2
      size: 2392307
  compile@ddos-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_knn  --results_file
      ddos/reports/gzip_knn.csv
    deps:
    - path: ddos/reports/gzip_knn/
      hash: md5
      md5: 8b0d2b4a4c29daec4af20373226ef046.dir
      size: 1366588
      nfiles: 1215
    outs:
    - path: ddos/reports/gzip_knn.csv
      hash: md5
      md5: 5147309699c0135dc8d782821db9f896
      size: 477196
  clean@ddos-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_knn.csv -o ddos/plots/clean/gzip_knn.csv
      -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_knn.csv
      hash: md5
      md5: 5147309699c0135dc8d782821db9f896
      size: 477196
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_knn.csv
      hash: md5
      md5: e13d711920b3c4d50d2861ce2fc34aab
      size: 380084
  compile@ddos-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_logistic  --results_file
      ddos/reports/gzip_logistic.csv
    deps:
    - path: ddos/reports/gzip_logistic/
      hash: md5
      md5: f92a132ddc0da8405b262d71753e173a.dir
      size: 3577514
      nfiles: 3072
    outs:
    - path: ddos/reports/gzip_logistic.csv
      hash: md5
      md5: 85166d5739b53dc64dc2257e3103d8b6
      size: 1285965
  clean@ddos-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_logistic.csv -o
      ddos/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_logistic.csv
      hash: md5
      md5: 85166d5739b53dc64dc2257e3103d8b6
      size: 1285965
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_logistic.csv
      hash: md5
      md5: fef056ba01ef2b572f7721e9cd8ade16
      size: 1043259
  compile@ddos-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/gzip_svc  --results_file
      ddos/reports/gzip_svc.csv
    deps:
    - path: ddos/reports/gzip_svc/
      hash: md5
      md5: 3fb7fb97d042eb5513aeb8669e94f77e.dir
      size: 3909626
      nfiles: 3447
    outs:
    - path: ddos/reports/gzip_svc.csv
      hash: md5
      md5: ace1e3b60c14272a2aa94303141d3d98
      size: 1371943
  clean@ddos-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/gzip_svc.csv -o ddos/plots/clean/gzip_svc.csv
      -c conf/clean.yaml
    deps:
    - path: ddos/reports/gzip_svc.csv
      hash: md5
      md5: ace1e3b60c14272a2aa94303141d3d98
      size: 1371943
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/gzip_svc.csv
      hash: md5
      md5: 1ef8933278754a300f41a4b2ab3792a5
      size: 1096966
  merge@ddos:
    cmd: python merge.py --big_dir ddos/plots/ --data_file clean/gzip_knn.csv --little_dir_data_file
      clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder ddos/plots --output_file
      merged.csv
    deps:
    - path: ddos/plots/clean/gzip_knn.csv
      hash: md5
      md5: e13d711920b3c4d50d2861ce2fc34aab
      size: 380084
    - path: ddos/plots/clean/gzip_logistic.csv
      hash: md5
      md5: fef056ba01ef2b572f7721e9cd8ade16
      size: 1043259
    - path: ddos/plots/clean/gzip_svc.csv
      hash: md5
      md5: 1ef8933278754a300f41a4b2ab3792a5
      size: 1096966
    outs:
    - path: ddos/plots/merged.csv
      hash: md5
      md5: 97cca1743d19f36bd4ab103cde49c4fc
      size: 2550919
  compile@kdd_nsl-modified/gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/modified/gzip_logistic  --results_file
      kdd_nsl/reports/modified/gzip_logistic.csv
    deps:
    - path: kdd_nsl/reports/modified/gzip_logistic/
      hash: md5
      md5: 3ea6a26afb75663b6b8a8a1adf3022bd.dir
      size: 8754201
      nfiles: 3072
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic.csv
      hash: md5
      md5: 830a4f2cb1745af52ad993eb9c4eb333
      size: 1263561
  clean@kdd_nsl-modified/gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/modified/gzip_logistic.csv
      -o kdd_nsl/plots/clean/modified/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/modified/gzip_logistic.csv
      hash: md5
      md5: 830a4f2cb1745af52ad993eb9c4eb333
      size: 1263561
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/modified/gzip_logistic.csv
      hash: md5
      md5: 423139cf26d3578f788067a30292c562
      size: 1013496
  compile@ddos-modified/gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/modified/gzip_svc  --results_file
      ddos/reports/modified/gzip_svc.csv
    deps:
    - path: ddos/reports/modified/gzip_svc/
      hash: md5
      md5: 7c0ae47da03424a33c1ea4bd51dbf867.dir
      size: 8738231
      nfiles: 3072
    outs:
    - path: ddos/reports/modified/gzip_svc.csv
      hash: md5
      md5: c64b3e04b88967224b9f7a44b1d1c948
      size: 1242447
  clean@ddos-modified/gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/modified/gzip_svc.csv
      -o ddos/plots/clean/modified/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/modified/gzip_svc.csv
      hash: md5
      md5: c64b3e04b88967224b9f7a44b1d1c948
      size: 1242447
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/modified/gzip_svc.csv
      hash: md5
      md5: c26e77ceb8750a1ae910771d01804365
      size: 990290
  compile@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_svc  --results_file
      sms_spam/reports/gzip_svc.csv
    deps:
    - path: sms_spam/reports/gzip_svc/
      hash: md5
      md5: 00aa3433a992f3df0f7c9ce3e2398619.dir
      size: 3412080
      nfiles: 3072
    outs:
    - path: sms_spam/reports/gzip_svc.csv
      hash: md5
      md5: 11a248f6f506de4c6db3dc8f0e4e85af
      size: 1179568
  compile@truthseeker-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/knn  --results_file
      truthseeker/reports/condense/knn.csv
    deps:
    - path: truthseeker/reports/condense/knn/
      hash: md5
      md5: 1d5abf8f0fdb0a656236b28ed1332d97.dir
      size: 978892
      nfiles: 345
    outs:
    - path: truthseeker/reports/condense/knn.csv
      hash: md5
      md5: 15aff47f26a37158bb184e47c8c363dd
      size: 148642
  clean@truthseeker-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/knn.csv
      -o truthseeker/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/knn.csv
      hash: md5
      md5: 15aff47f26a37158bb184e47c8c363dd
      size: 148642
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/knn.csv
      hash: md5
      md5: b4a24958c454fe928e948ddac56d1475
      size: 119601
  compile@sms_spam-modified/gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/modified/gzip_knn  --results_file
      sms_spam/reports/modified/gzip_knn.csv
    deps:
    - path: sms_spam/reports/modified/gzip_knn/
      hash: md5
      md5: 4fdf729c75bb382b2016955d74ec7490.dir
      size: 2721142
      nfiles: 969
    outs:
    - path: sms_spam/reports/modified/gzip_knn.csv
      hash: md5
      md5: 7a5cce53ee47dac6887b26c77bc90a9b
      size: 373207
  compile@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_knn  --results_file
      sms_spam/reports/gzip_knn.csv
    deps:
    - path: sms_spam/reports/gzip_knn/
      hash: md5
      md5: 532cdf2fc4a38a627fc0def3c3926d9c.dir
      size: 770394
      nfiles: 692
    outs:
    - path: sms_spam/reports/gzip_knn.csv
      hash: md5
      md5: 3879ab897b11cc309197e9033816c8d7
      size: 262257
  compile@ddos-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/knn  --results_file
      ddos/reports/condense/knn.csv
    deps:
    - path: ddos/reports/condense/knn/
      hash: md5
      md5: 0e77388963f9e0d3d1021cda2cbf3599.dir
      size: 7920496
      nfiles: 2783
    outs:
    - path: ddos/reports/condense/knn.csv
      hash: md5
      md5: 572d6c4a2c914d0e7809a841145ecd55
      size: 1183523
  clean@ddos-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/knn.csv -o
      ddos/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/knn.csv
      hash: md5
      md5: 572d6c4a2c914d0e7809a841145ecd55
      size: 1183523
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/knn.csv
      hash: md5
      md5: d53ee0a8ab38b6cdf2ed029df5b5b3b2
      size: 956243
  compile@ddos-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/logistic  --results_file
      ddos/reports/condense/logistic.csv
    deps:
    - path: ddos/reports/condense/logistic/
      hash: md5
      md5: e1fe5949317d550abb48fc6b36aeb3ac.dir
      size: 61002275
      nfiles: 21006
    outs:
    - path: ddos/reports/condense/logistic.csv
      hash: md5
      md5: f59fc6983b9b8e20422c481e5e5216d0
      size: 9521415
  clean@ddos-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/logistic.csv
      -o ddos/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/logistic.csv
      hash: md5
      md5: f59fc6983b9b8e20422c481e5e5216d0
      size: 9521415
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/logistic.csv
      hash: md5
      md5: 98a328719f5582ae0e5b273c6051b75f
      size: 7963208
  compile@ddos-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/condense/svc  --results_file
      ddos/reports/condense/svc.csv
    deps:
    - path: ddos/reports/condense/svc/
      hash: md5
      md5: 1b7e907fbe3ae3f9a6e7de51a5cc0a93.dir
      size: 71563452
      nfiles: 24814
    outs:
    - path: ddos/reports/condense/svc.csv
      hash: md5
      md5: 815d895a617ec43025ec80d046fd8e71
      size: 10828642
  clean@ddos-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/condense/svc.csv -o
      ddos/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/condense/svc.csv
      hash: md5
      md5: 815d895a617ec43025ec80d046fd8e71
      size: 10828642
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/condense/svc.csv
      hash: md5
      md5: 3ba1050be77a4c3cdc208fa816948c88
      size: 8853711
  clean@sms_spam-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_knn.csv -o
      sms_spam/plots/clean/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_knn.csv
      hash: md5
      md5: 3879ab897b11cc309197e9033816c8d7
      size: 262257
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_knn.csv
      hash: md5
      md5: 53dbb344ae45b1bd4fd1a94c6bcd4163
      size: 199223
  clean@sms_spam-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_svc.csv -o
      sms_spam/plots/clean/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_svc.csv
      hash: md5
      md5: 11a248f6f506de4c6db3dc8f0e4e85af
      size: 1179568
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_svc.csv
      hash: md5
      md5: 8cbba8857377545d5c4e0679a1c26a8d
      size: 931596
  compile@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/gzip_logistic  --results_file
      sms_spam/reports/gzip_logistic.csv
    deps:
    - path: sms_spam/reports/gzip_logistic/
      hash: md5
      md5: 0298f045ee21903024f31a4a9453b189.dir
      size: 3506698
      nfiles: 3072
    outs:
    - path: sms_spam/reports/gzip_logistic.csv
      hash: md5
      md5: 04191416a6b9dd9eb84eefc9aa14df5b
      size: 1241610
  clean@sms_spam-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/gzip_logistic.csv
      -o sms_spam/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/gzip_logistic.csv
      hash: md5
      md5: 04191416a6b9dd9eb84eefc9aa14df5b
      size: 1241610
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/gzip_logistic.csv
      hash: md5
      md5: f12b6423186a36dd270b9813b9a8138f
      size: 1000231
  compile@sms_spam-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/knn  --results_file
      sms_spam/reports/condense/knn.csv
    deps:
    - path: sms_spam/reports/condense/knn/
      hash: md5
      md5: ecc64913062a28587ab623f4216e8365.dir
      size: 397662
      nfiles: 141
    outs:
    - path: sms_spam/reports/condense/knn.csv
      hash: md5
      md5: dccd87ebeb4d479cb58df56bfee3c8a0
      size: 58974
  clean@sms_spam-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/knn.csv
      -o sms_spam/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/knn.csv
      hash: md5
      md5: dccd87ebeb4d479cb58df56bfee3c8a0
      size: 58974
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/knn.csv
      hash: md5
      md5: 954d3a2d9981acba84c337b02ab88d53
      size: 46192
  compile@sms_spam-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/svc  --results_file
      sms_spam/reports/condense/svc.csv
    deps:
    - path: sms_spam/reports/condense/svc/
      hash: md5
      md5: 7f34863eb3e7463a8c9f1ff3eb1251ab.dir
      size: 7699540
      nfiles: 2688
    outs:
    - path: sms_spam/reports/condense/svc.csv
      hash: md5
      md5: 4f1dee67b75315e5d79008009a23271f
      size: 1132174
  clean@sms_spam-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/svc.csv
      -o sms_spam/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/svc.csv
      hash: md5
      md5: 4f1dee67b75315e5d79008009a23271f
      size: 1132174
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/svc.csv
      hash: md5
      md5: f9ad97a38250e574aec3fdf78244dcf7
      size: 920268
  compile@sms_spam-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/condense/logistic  --results_file
      sms_spam/reports/condense/logistic.csv
    deps:
    - path: sms_spam/reports/condense/logistic/
      hash: md5
      md5: 77224b6d60f5fe94e1eff3c5099746ca.dir
      size: 8810234
      nfiles: 3060
    outs:
    - path: sms_spam/reports/condense/logistic.csv
      hash: md5
      md5: f1e137ebd028e3bb5c297719bdf14c73
      size: 1338983
  clean@sms_spam-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/condense/logistic.csv
      -o sms_spam/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/condense/logistic.csv
      hash: md5
      md5: f1e137ebd028e3bb5c297719bdf14c73
      size: 1338983
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/condense/logistic.csv
      hash: md5
      md5: 2bf32612647aa022562f1f704369d613
      size: 1109552
  clean@sms_spam-modified/gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/modified/gzip_knn.csv
      -o sms_spam/plots/clean/modified/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/modified/gzip_knn.csv
      hash: md5
      md5: 7a5cce53ee47dac6887b26c77bc90a9b
      size: 373207
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/modified/gzip_knn.csv
      hash: md5
      md5: 005d8109f8cc49ec5be3d20d9b721760
      size: 292944
  compile@sms_spam-modified/gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/modified/gzip_svc  --results_file
      sms_spam/reports/modified/gzip_svc.csv
    deps:
    - path: sms_spam/reports/modified/gzip_svc/
      hash: md5
      md5: f47bccf9e4a0f8049a4c7ad08cdefd89.dir
      size: 8664382
      nfiles: 3072
    outs:
    - path: sms_spam/reports/modified/gzip_svc.csv
      hash: md5
      md5: d8546cda6ba34966026581f4c951ffb6
      size: 1195879
  clean@sms_spam-modified/gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/modified/gzip_svc.csv
      -o sms_spam/plots/clean/modified/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/modified/gzip_svc.csv
      hash: md5
      md5: d8546cda6ba34966026581f4c951ffb6
      size: 1195879
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/modified/gzip_svc.csv
      hash: md5
      md5: 9ede0749f93ed2707e0c9f30d9a529dc
      size: 941351
  compile@sms_spam-modified/gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder sms_spam/reports/modified/gzip_logistic  --results_file
      sms_spam/reports/modified/gzip_logistic.csv
    deps:
    - path: sms_spam/reports/modified/gzip_logistic/
      hash: md5
      md5: f8058a7bff9fc9258a8ade4cfa72ac90.dir
      size: 8763292
      nfiles: 3072
    outs:
    - path: sms_spam/reports/modified/gzip_logistic.csv
      hash: md5
      md5: 240aaf5e74d0b5ce9d60ef113fe63d47
      size: 1264991
  clean@sms_spam-modified/gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i sms_spam/reports/modified/gzip_logistic.csv
      -o sms_spam/plots/clean/modified/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: sms_spam/reports/modified/gzip_logistic.csv
      hash: md5
      md5: 240aaf5e74d0b5ce9d60ef113fe63d47
      size: 1264991
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: sms_spam/plots/clean/modified/gzip_logistic.csv
      hash: md5
      md5: b72bc61706a446b6914a58205df34a7a
      size: 1017689
  merge@sms_spam:
    cmd: python merge.py --big_dir sms_spam/plots/ --data_file clean/gzip_knn.csv
      --little_dir_data_file clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder
      sms_spam/plots --output_file merged.csv
    deps:
    - path: sms_spam/plots/clean/gzip_knn.csv
      hash: md5
      md5: 53dbb344ae45b1bd4fd1a94c6bcd4163
      size: 199223
    - path: sms_spam/plots/clean/gzip_logistic.csv
      hash: md5
      md5: f12b6423186a36dd270b9813b9a8138f
      size: 1000231
    - path: sms_spam/plots/clean/gzip_svc.csv
      hash: md5
      md5: 8cbba8857377545d5c4e0679a1c26a8d
      size: 931596
    outs:
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: f5a12b7adf2127d041d8a7402b100e23
      size: 2157200
  compile@ddos-modified/gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/modified/gzip_knn  --results_file
      ddos/reports/modified/gzip_knn.csv
    deps:
    - path: ddos/reports/modified/gzip_knn/
      hash: md5
      md5: 808db7f0985f7298b39cf16949ea5d82.dir
      size: 2753864
      nfiles: 973
    outs:
    - path: ddos/reports/modified/gzip_knn.csv
      hash: md5
      md5: a28f422bae708ab9c5c5d9f3d7cfbcab
      size: 389641
  clean@ddos-modified/gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/modified/gzip_knn.csv
      -o ddos/plots/clean/modified/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/modified/gzip_knn.csv
      hash: md5
      md5: a28f422bae708ab9c5c5d9f3d7cfbcab
      size: 389641
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/modified/gzip_knn.csv
      hash: md5
      md5: 766331177b21a66147b1c4196d4cf88c
      size: 309131
  compile@kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_svc  --results_file
      kdd_nsl/reports/gzip_svc.csv
    deps:
    - path: kdd_nsl/reports/gzip_svc/
      hash: md5
      md5: a05a21dce46c5ba990ed0d7d5c1a0917.dir
      size: 3405267
      nfiles: 3072
    outs:
    - path: kdd_nsl/reports/gzip_svc.csv
      hash: md5
      md5: f00fbecb1cffccc0f62d27954ae484c3
      size: 1180831
  compile@kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_logistic  --results_file
      kdd_nsl/reports/gzip_logistic.csv
    deps:
    - path: kdd_nsl/reports/gzip_logistic/
      hash: md5
      md5: 69d3e73379be4ebc8c15e2f3d56e7fe9.dir
      size: 3502952
      nfiles: 3072
    outs:
    - path: kdd_nsl/reports/gzip_logistic.csv
      hash: md5
      md5: a3af5850d90463ce658a4ac859ddeec0
      size: 1245432
  clean@kdd_nsl-gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_logistic.csv
      -o kdd_nsl/plots/clean/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_logistic.csv
      hash: md5
      md5: a3af5850d90463ce658a4ac859ddeec0
      size: 1245432
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 9589af3f631ca984996e1f44ce243425
      size: 1004046
  compile@truthseeker-modified/gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/modified/gzip_svc  --results_file
      truthseeker/reports/modified/gzip_svc.csv
    deps:
    - path: truthseeker/reports/modified/gzip_svc/
      hash: md5
      md5: 954f69df1ddbdef25fb71a7ac287a224.dir
      size: 17227905
      nfiles: 6083
    outs:
    - path: truthseeker/reports/modified/gzip_svc.csv
      hash: md5
      md5: 334981ff8725504fa01ba2c3d391f5d7
      size: 2456865
  clean@truthseeker-modified/gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/modified/gzip_svc.csv
      -o truthseeker/plots/clean/modified/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/modified/gzip_svc.csv
      hash: md5
      md5: 334981ff8725504fa01ba2c3d391f5d7
      size: 2456865
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/modified/gzip_svc.csv
      hash: md5
      md5: 17d6d014d506957e712437d5042fc2b0
      size: 1940960
  compile@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/gzip_knn  --results_file
      kdd_nsl/reports/gzip_knn.csv
    deps:
    - path: kdd_nsl/reports/gzip_knn/
      hash: md5
      md5: 544a9e2a813d7a83be9dc8952ad2e7fe.dir
      size: 987648
      nfiles: 852
    outs:
    - path: kdd_nsl/reports/gzip_knn.csv
      hash: md5
      md5: 4a5e78596ea3dbd83d7b8cae4fddb4be
      size: 326850
  clean@kdd_nsl-gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_knn.csv -o kdd_nsl/plots/clean/gzip_knn.csv
      -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_knn.csv
      hash: md5
      md5: 4a5e78596ea3dbd83d7b8cae4fddb4be
      size: 326850
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_knn.csv
      hash: md5
      md5: 69aa98da9fbe5f8d5748b2fd6fb24661
      size: 223624
  clean@kdd_nsl-gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/gzip_svc.csv -o kdd_nsl/plots/clean/gzip_svc.csv
      -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/gzip_svc.csv
      hash: md5
      md5: f00fbecb1cffccc0f62d27954ae484c3
      size: 1180831
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/gzip_svc.csv
      hash: md5
      md5: dd3cb9aae75115010e8e82c7bd7c28e0
      size: 933066
  merge@kdd_nsl:
    cmd: python merge.py --big_dir kdd_nsl/plots/ --data_file clean/gzip_knn.csv --little_dir_data_file
      clean/gzip_logistic.csv clean/gzip_svc.csv --output_folder kdd_nsl/plots --output_file
      merged.csv
    deps:
    - path: kdd_nsl/plots/clean/gzip_knn.csv
      hash: md5
      md5: 69aa98da9fbe5f8d5748b2fd6fb24661
      size: 223624
    - path: kdd_nsl/plots/clean/gzip_logistic.csv
      hash: md5
      md5: 9589af3f631ca984996e1f44ce243425
      size: 1004046
    - path: kdd_nsl/plots/clean/gzip_svc.csv
      hash: md5
      md5: dd3cb9aae75115010e8e82c7bd7c28e0
      size: 933066
    outs:
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 331cafafb94b6ab6a58c11cd04de0212
      size: 2187342
  merge_datasets:
    cmd: python merge.py --big_dir . --little_dir . --data_file sms_spam/plots/condensed_merged.csv
      --little_dir_data_file  kdd_nsl/plots/merged.csv ddos/plots/merged.csv truthseeker/plots/merged.csv
      kdd_nsl/plots/condensed_merged.csv ddos/plots/condensed_merged.csv truthseeker/plots/condensed_merged.csv
      sms_spam/plots/merged.csv --output_folder combined/plots/ --output_file merged.csv
    deps:
    - path: ddos/plots/merged.csv
      hash: md5
      md5: 97cca1743d19f36bd4ab103cde49c4fc
      size: 2550919
    - path: kdd_nsl/plots/merged.csv
      hash: md5
      md5: 331cafafb94b6ab6a58c11cd04de0212
      size: 2187342
    - path: sms_spam/plots/merged.csv
      hash: md5
      md5: f5a12b7adf2127d041d8a7402b100e23
      size: 2157200
    - path: truthseeker/plots/merged.csv
      hash: md5
      md5: 58d8a89aa19ccff0f5791d261b46dad2
      size: 2392307
    outs:
    - path: combined/plots/merged.csv
      hash: md5
      md5: f5c507318bf210204afe0208d398929d
      size: 46471411
  compile@kdd_nsl-condense/knn:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/knn  --results_file
      kdd_nsl/reports/condense/knn.csv
    deps:
    - path: kdd_nsl/reports/condense/knn/
      hash: md5
      md5: c095d318f43b34622c063e5e288a3daa.dir
      size: 3178342
      nfiles: 1122
    outs:
    - path: kdd_nsl/reports/condense/knn.csv
      hash: md5
      md5: 216ef9f20c2ad64a3420de480062daa3
      size: 463668
  clean@kdd_nsl-condense/knn:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/knn.csv
      -o kdd_nsl/plots/clean/condense/knn.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/knn.csv
      hash: md5
      md5: 216ef9f20c2ad64a3420de480062daa3
      size: 463668
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/knn.csv
      hash: md5
      md5: 212b55e393f7f4c20683a9748e0e0fbe
      size: 375925
  plot_merged:
    cmd: python -m deckard.layers.plots  --path combined/plots/  --file combined/plots/merged.csv  -c
      conf/merged_plots.yaml
    deps:
    - path: combined/plots/merged.csv
      hash: md5
      md5: f5c507318bf210204afe0208d398929d
      size: 46471411
    - path: conf/merged_plots.yaml
      hash: md5
      md5: 710fe793cd64a9af9f2ae66909f8348b
      size: 10203
    params:
      conf/merged_plots.yaml:
        cat_plot:
        - file: modified_models_vs_accuracy.pdf
          x: Model
          y: accuracy
          hue: model.init.modified
          errorbar: se
          kind: boxen
          titles:
          xlabels: Models
          ylabels: Accuracy
          rotation: 90
          col: Dataset
          legend_title: Algorithm
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: modified_models_vs_train_time.pdf
          x: Model
          y: train_time
          hue: model.init.modified
          errorbar: se
          kind: boxen
          titles:
          xlabels: Models
          ylabels: $t_t$ (s)
          rotation: 90
          col: Dataset
          legend_title: Algorithm
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: log
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: modified_models_vs_predict_time.pdf
          x: Model
          y: predict_time_per_sample
          hue: model.init.modified
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          rotation: 90
          col: Dataset
          legend_title: Algorithm
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: log
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
        - file: condensing_ratio_vs_accuracy.pdf
          x: Condensing Method
          hue: Condensing Ratio
          y: accuracy
          y_scale: linear
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          kind: strip
          row: Model
          col: Dataset
          rotation: 45
          order:
          - Random
          - Medoid
          - Sum
          - SVC
          - Hardness
          - NearMiss
          - KNN
          legend_title: Condensing Ratio
          ylabels: Accuracy
          xlabels: Condensing Method
        - file: models_vs_accuracy.pdf
          x: Model
          y: accuracy
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          legend_title: Samples
          xlabels: Models
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          hue_order:
          - 20
          - 100
          - 300
          - 500
        - file: models_vs_train_time.pdf
          x: Model
          y: train_time
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: Models
          ylabels: $t_t$ (s)
          legend_title: Samples
          rotation: 90
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: log
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          hue_order:
          - 20
          - 100
          - 300
          - 500
        - file: models_vs_predict_time.pdf
          x: Model
          y: predict_time_per_sample
          hue: data.sample.train_size
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: Samples
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          hue_order:
          - 20
          - 100
          - 300
          - 500
        - file: symmetric_models_vs_accuracy.pdf
          x: Model
          y: accuracy
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: Samples
          ylabels: Accuracy
          legend_title: ' '
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        - file: symmetric_models_vs_train_time.pdf
          x: Model
          y: train_time_per_sample
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_t$ (s)
          legend_title: ' '
          rotation: 90
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          y_scale: log
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        - file: symmetric_models_vs_predict_time.pdf
          x: Model
          y: predict_time_per_sample
          hue: Symmetric
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: ' '
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        - file: condensing_methods_vs_accuracy.pdf
          x: Model
          y: accuracy
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: Condensing Method
          ylabels: Accuracy
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          col: Dataset
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
          legend_title: Condensing Method
        - file: condensing_methods_vs_train_time.pdf
          x: Model
          y: train_time
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_t$ (s)
          legend_title: Condensing Method
          rotation: 90
          col: Dataset
          y_scale: log
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        - file: condensing_methods_vs_predict_time.pdf
          x: Model
          y: predict_time_per_sample
          hue: Condensing Method
          errorbar: se
          kind: boxen
          titles:
          xlabels: ' '
          ylabels: $t_i$ (s)
          legend_title: Condensing Method
          col: Dataset
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 14
          rotation: 90
          y_scale: log
          col_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          order:
          - k-KNN
          - k-SVC
          - k-Logistic
        line_plot:
        - file: compressor_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - GZIP
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
        - file: string_metric_vs_accuracy.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: accuracy
          ylabel: Accuracy
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
        - file: string_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: $t_t$ (s)
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: compressor_metric_vs_train_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: train_time
          ylabel: $t_t$ (s)
          hue_order:
          - GZIP
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: string_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time_per_sample
          ylabel: $t_i$ (s)
          hue_order:
          - Levenshtein
          - Ratio
          - Hamming
          - Jaro
          - Jaro-Winkler
          - SeqRatio
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
        - file: compressor_metric_vs_predict_time.pdf
          hue: Metric
          title:
          x: data.sample.train_size
          xlabel: Number of Training Samples
          y: predict_time_per_sample
          ylabel: $t_i$ (s)
          hue_order:
          - GZIP
          - BZ2
          - ZSTD
          - LZMA
          errorbar: se
          err_style: bars
          xlim:
          - 10
          - 500
          style: Dataset
          style_order:
          - DDoS
          - SMS Spam
          - KDD NSL
          - Truthseeker
          legend:
            bbox_to_anchor:
            - 1.05
            - 0.5
            loc: center left
            prop:
              size: 12
          y_scale: log
    outs:
    - path: combined/plots/compressor_metric_vs_accuracy.pdf
      hash: md5
      md5: 5cb4e268b964df790a28e391f379513b
      size: 23032
    - path: combined/plots/compressor_metric_vs_predict_time.pdf
      hash: md5
      md5: 3f21cd1e8207ecf1f639c73f72c88fc5
      size: 23453
    - path: combined/plots/compressor_metric_vs_train_time.pdf
      hash: md5
      md5: eb27552d78cb1cfabafd2da8f526fd64
      size: 23520
    - path: combined/plots/condensing_methods_vs_accuracy.pdf
      hash: md5
      md5: ae8ffd775c1809b491db4c3444fe986b
      size: 61255
    - path: combined/plots/condensing_methods_vs_predict_time.pdf
      hash: md5
      md5: 3bf8fbf7d7b177c73377937008b126c3
      size: 72826
    - path: combined/plots/condensing_methods_vs_train_time.pdf
      hash: md5
      md5: 0156e8dfa22b0a63f1466688fd8170c8
      size: 72615
    - path: combined/plots/condensing_ratio_vs_accuracy.pdf
      hash: md5
      md5: 1df14405f5a7d42e22098a43ef6ac4ca
      size: 336527
    - path: combined/plots/models_vs_accuracy.pdf
      hash: md5
      md5: 3f8b38269bfb8e226b918246192bb616
      size: 48280
    - path: combined/plots/models_vs_predict_time.pdf
      hash: md5
      md5: 81fa5029a088963f50d236001505bcde
      size: 59837
    - path: combined/plots/models_vs_train_time.pdf
      hash: md5
      md5: 62b56cc16be64d2d0aea5012290cf5e8
      size: 60097
    - path: combined/plots/modified_models_vs_accuracy.pdf
      hash: md5
      md5: 048346a049081c3189036e3391ea4105
      size: 32580
    - path: combined/plots/modified_models_vs_predict_time.pdf
      hash: md5
      md5: 1b03603625d36b64142d4d9a004125f2
      size: 38518
    - path: combined/plots/modified_models_vs_train_time.pdf
      hash: md5
      md5: 77cbb3939eb946572b275335a531501b
      size: 38672
    - path: combined/plots/string_metric_vs_accuracy.pdf
      hash: md5
      md5: 40c7e4589583d2f0cd59aa5348dc424d
      size: 23584
    - path: combined/plots/string_metric_vs_predict_time.pdf
      hash: md5
      md5: 75561195a2ef2d90f47f00daa6e45ed8
      size: 24705
    - path: combined/plots/string_metric_vs_train_time.pdf
      hash: md5
      md5: fc8c7b21fe1b9267cf44b12e0782fd0f
      size: 25052
    - path: combined/plots/symmetric_models_vs_accuracy.pdf
      hash: md5
      md5: 69a10a9a8bb54deda6b16218fabc90a4
      size: 30593
    - path: combined/plots/symmetric_models_vs_predict_time.pdf
      hash: md5
      md5: eabc45ab5155cc12697de4b5b502f807
      size: 37126
    - path: combined/plots/symmetric_models_vs_train_time.pdf
      hash: md5
      md5: afe2b3ed686f6ab645be277d30b8aef2
      size: 37486
  compile@ddos-modified/gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder ddos/reports/modified/gzip_logistic  --results_file
      ddos/reports/modified/gzip_logistic.csv
    deps:
    - path: ddos/reports/modified/gzip_logistic/
      hash: md5
      md5: bce959f7d1ab2e16566190e2fbde193e.dir
      size: 8832449
      nfiles: 3072
    outs:
    - path: ddos/reports/modified/gzip_logistic.csv
      hash: md5
      md5: 8ac89e988cfb01d92deb4e45d63fc1dd
      size: 1307056
  clean@ddos-modified/gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i ddos/reports/modified/gzip_logistic.csv
      -o ddos/plots/clean/modified/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: ddos/reports/modified/gzip_logistic.csv
      hash: md5
      md5: 8ac89e988cfb01d92deb4e45d63fc1dd
      size: 1307056
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: ddos/plots/clean/modified/gzip_logistic.csv
      hash: md5
      md5: 3cf25c1d12d4df3121d395b6afd7fb62
      size: 1057530
  compile@kdd_nsl-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/svc  --results_file
      kdd_nsl/reports/condense/svc.csv
    deps:
    - path: kdd_nsl/reports/condense/svc/
      hash: md5
      md5: a795fa3427c1dc3929b9217f14cbec60.dir
      size: 60379764
      nfiles: 21090
    outs:
    - path: kdd_nsl/reports/condense/svc.csv
      hash: md5
      md5: 6011fa56290d9664f20ce3751030f1e0
      size: 8873418
  clean@kdd_nsl-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/svc.csv
      -o kdd_nsl/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/svc.csv
      hash: md5
      md5: 6011fa56290d9664f20ce3751030f1e0
      size: 8873418
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/svc.csv
      hash: md5
      md5: f3dd04cf71643a12b9c370c6e14c7587
      size: 7226746
  compile@kdd_nsl-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/condense/logistic  --results_file
      kdd_nsl/reports/condense/logistic.csv
    deps:
    - path: kdd_nsl/reports/condense/logistic/
      hash: md5
      md5: cb0f71beb071e7d6a7c76d50fd620936.dir
      size: 60239919
      nfiles: 20928
    outs:
    - path: kdd_nsl/reports/condense/logistic.csv
      hash: md5
      md5: 9595c121b5159c9a0b03a39fdfa331da
      size: 9188990
  clean@kdd_nsl-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/condense/logistic.csv
      -o kdd_nsl/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/condense/logistic.csv
      hash: md5
      md5: 9595c121b5159c9a0b03a39fdfa331da
      size: 9188990
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/condense/logistic.csv
      hash: md5
      md5: fb1aa72c0e5b8f22d594a0bcdd9899ea
      size: 7617985
  compile@kdd_nsl-modified/gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/modified/gzip_knn  --results_file
      kdd_nsl/reports/modified/gzip_knn.csv
    deps:
    - path: kdd_nsl/reports/modified/gzip_knn/
      hash: md5
      md5: c77870227850437eba50555b630c0d51.dir
      size: 2264248
      nfiles: 807
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn.csv
      hash: md5
      md5: a9bac9af5580f1334bf07d7efe45483b
      size: 311043
  clean@kdd_nsl-modified/gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/modified/gzip_knn.csv
      -o kdd_nsl/plots/clean/modified/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/modified/gzip_knn.csv
      hash: md5
      md5: a9bac9af5580f1334bf07d7efe45483b
      size: 311043
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/modified/gzip_knn.csv
      hash: md5
      md5: f81f97e3844fa1c6dae7b89fa122ada3
      size: 244331
  compile@kdd_nsl-modified/gzip_svc:
    cmd: python -m deckard.layers.compile  --report_folder kdd_nsl/reports/modified/gzip_svc  --results_file
      kdd_nsl/reports/modified/gzip_svc.csv
    deps:
    - path: kdd_nsl/reports/modified/gzip_svc/
      hash: md5
      md5: f6d3565722d690dcc7b26b67cd67eb83.dir
      size: 8658183
      nfiles: 3072
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc.csv
      hash: md5
      md5: f534f34104948828ee88cbccc0a4b427
      size: 1199089
  clean@kdd_nsl-modified/gzip_svc:
    cmd: python -m deckard.layers.clean_data  -i kdd_nsl/reports/modified/gzip_svc.csv
      -o kdd_nsl/plots/clean/modified/gzip_svc.csv -c conf/clean.yaml
    deps:
    - path: kdd_nsl/reports/modified/gzip_svc.csv
      hash: md5
      md5: f534f34104948828ee88cbccc0a4b427
      size: 1199089
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: kdd_nsl/plots/clean/modified/gzip_svc.csv
      hash: md5
      md5: 6bb3feabdce8feae4394a8c4d41d0d8a
      size: 944450
  copy@combined:
    cmd: rm -rf ~/Gzip-KNN/figs/combined/ && mkdir -p ~/Gzip-KNN/figs/combined/ &&
      cp -r combined/plots/* ~/Gzip-KNN/figs/combined/ && rm -rf ~/Gzip-KNN/figs/combined/.gitignore
    deps:
    - path: combined/plots/
      hash: md5
      md5: 87376514169fe39bbf4c836b2ae35adf.dir
      size: 47720536
      nfiles: 21
  compile@truthseeker-modified/gzip_knn:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/modified/gzip_knn  --results_file
      truthseeker/reports/modified/gzip_knn.csv
    deps:
    - path: truthseeker/reports/modified/gzip_knn/
      hash: md5
      md5: 1d81736b9c9c0b56acedca3a3fc0d4a5.dir
      size: 3838273
      nfiles: 1362
    outs:
    - path: truthseeker/reports/modified/gzip_knn.csv
      hash: md5
      md5: 15f397ec8a16ed80047379ad301f4304
      size: 539016
  compile@truthseeker-modified/gzip_logistic:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/modified/gzip_logistic  --results_file
      truthseeker/reports/modified/gzip_logistic.csv
    deps:
    - path: truthseeker/reports/modified/gzip_logistic/
      hash: md5
      md5: ac0e5154def18e631e93d183c41ffc3e.dir
      size: 12094570
      nfiles: 4224
    outs:
    - path: truthseeker/reports/modified/gzip_logistic.csv
      hash: md5
      md5: 8bbc64acf09ab7b9d274fdefd5e0c447
      size: 1788513
  clean@truthseeker-modified/gzip_knn:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/modified/gzip_knn.csv
      -o truthseeker/plots/clean/modified/gzip_knn.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/modified/gzip_knn.csv
      hash: md5
      md5: 15f397ec8a16ed80047379ad301f4304
      size: 539016
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/modified/gzip_knn.csv
      hash: md5
      md5: db32568d29d97e11d791cbcf8b3d2bc9
      size: 424960
  clean@truthseeker-modified/gzip_logistic:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/modified/gzip_logistic.csv
      -o truthseeker/plots/clean/modified/gzip_logistic.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/modified/gzip_logistic.csv
      hash: md5
      md5: 8bbc64acf09ab7b9d274fdefd5e0c447
      size: 1788513
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/modified/gzip_logistic.csv
      hash: md5
      md5: 845a8bfc113aa38c4735bac3d2592cd7
      size: 1443960
  condense@sms_spam-svc-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_sms_spam 
      files.reports=reports/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 87a7e9347c88e86aaa49f2e5ecb945fb
      size: 204
  condense@sms_spam-knn-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_sms_spam 
      files.reports=reports/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 310a59fbd620cf5302cea68ecc4ea06f
      size: 74
  condense@sms_spam-svc-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_sms_spam 
      files.reports=reports/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 87a7e9347c88e86aaa49f2e5ecb945fb
      size: 204
  condense@sms_spam-logistic-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_sms_spam 
      files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: b532a1b2caae150a13368294f5607f36
      size: 255
  condense@sms_spam-knn-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_sms_spam 
      files.reports=reports/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 94831536630022212b1da617c745a3e9
      size: 115
  condense@sms_spam-svc-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_sms_spam 
      files.reports=reports/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 7ca30ef54999325f0eefcf4cde1cc800
      size: 210
  condense@sms_spam-knn-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_sms_spam 
      files.reports=reports/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 94831536630022212b1da617c745a3e9
      size: 115
  condense@sms_spam-svc-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_sms_spam 
      files.reports=reports/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 7ca30ef54999325f0eefcf4cde1cc800
      size: 210
  condense@sms_spam-logistic-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_sms_spam 
      files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: b44a7a370fc90ca4194da24e0e98b615
      size: 261
  condense@sms_spam-logistic-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_sms_spam 
      files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: b44a7a370fc90ca4194da24e0e98b615
      size: 261
  condense@sms_spam-logistic-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_sms_spam 
      files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: b44a7a370fc90ca4194da24e0e98b615
      size: 261
  condense@sms_spam-knn-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_sms_spam 
      files.reports=reports/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 94831536630022212b1da617c745a3e9
      size: 115
  condense@sms_spam-logistic-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=sms_spam 
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_sms_spam 
      files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=sms_spam/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: b44a7a370fc90ca4194da24e0e98b615
      size: 261
  condense@truthseeker-svc-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_truthseeker 
      files.reports=reports/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5017761b042d84524fc91308aedddda4
      size: 205
  condense@truthseeker-knn-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_truthseeker 
      files.reports=reports/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 4a33eb81bce4e43599c5aaf8002056ea
      size: 76
  condense@truthseeker-svc-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_truthseeker 
      files.reports=reports/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5017761b042d84524fc91308aedddda4
      size: 205
  compile@truthseeker-condense/logistic:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/logistic  --results_file
      truthseeker/reports/condense/logistic.csv
    deps:
    - path: truthseeker/reports/condense/logistic/
      hash: md5
      md5: b9dc702a0e596bed70f950d41176ef2e.dir
      size: 5907696
      nfiles: 2048
    outs:
    - path: truthseeker/reports/condense/logistic.csv
      hash: md5
      md5: e5ac7142bcc025fb3e34a9b5eb2c674e
      size: 926557
  clean@truthseeker-condense/logistic:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/logistic.csv
      -o truthseeker/plots/clean/condense/logistic.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/logistic.csv
      hash: md5
      md5: e5ac7142bcc025fb3e34a9b5eb2c674e
      size: 926557
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/logistic.csv
      hash: md5
      md5: db289a8e0b7d19ddaabb373d60b97e80
      size: 762133
  compile@truthseeker-condense/svc:
    cmd: python -m deckard.layers.compile  --report_folder truthseeker/reports/condense/svc  --results_file
      truthseeker/reports/condense/svc.csv
    deps:
    - path: truthseeker/reports/condense/svc/
      hash: md5
      md5: da9a8c63820fac52c9f67be4e2cc7b80.dir
      size: 5520327
      nfiles: 1920
    outs:
    - path: truthseeker/reports/condense/svc.csv
      hash: md5
      md5: 225d227cff97343435af1a625f9b1096
      size: 831642
  clean@truthseeker-condense/svc:
    cmd: python -m deckard.layers.clean_data  -i truthseeker/reports/condense/svc.csv
      -o truthseeker/plots/clean/condense/svc.csv -c conf/clean.yaml
    deps:
    - path: truthseeker/reports/condense/svc.csv
      hash: md5
      md5: 225d227cff97343435af1a625f9b1096
      size: 831642
    params:
      conf/clean.yaml:
        drop_values:
          accuracy: 0.0
          predict_time: 1.0
        fillna:
          model.init.m: 1
          model.init.symmetric: false
          model.init.modified: false
          model.init.metric: gzip
        replace:
          model.init.metric:
            jaro: Jaro
            _winkler: -Winkler
            levenshtein: Levenshtein
            ncd: NCD
            ratio: Ratio
            seqRatio: SeqRatio
            hamming: Hamming
            gzip: GZIP
            bz2: BZ2
            zstd: ZSTD
            lzma: LZMA
          model_name:
            GzipSVC: k-SVC
            GzipLogisticRegressor: k-Logistic
            GzipKNN: k-KNN
          model.init.symmetric:
            true: Symmetric
            false: Asymmetric
          model.init.modified:
            true: Modified
            false: Vanilla
          model.init.condensing_method:
            random: Random
            medoid: Medoid
            sum: Sum
            svc: SVC
            hardness: Hardness
            nearmiss: NearMiss
            knn: KNN
          dataset:
            ddos: DDoS
            sms_spam: SMS Spam
            kdd_nsl: KDD NSL
            truthseeker: Truthseeker
          model.init.m:
            -1: 1
        replace_cols:
          dataset: Dataset
          model.init.metric: Metric
          model.init.symmetric: Symmetric
          model.init.condensing_method: Condensing Method
          model.init.m: Condensing Ratio
          model_name: Model
    outs:
    - path: truthseeker/plots/clean/condense/svc.csv
      hash: md5
      md5: 322ae8bdd1ac10192f9e5bbf2c7fcd60
      size: 678356
  merge_condense@truthseeker:
    cmd: python merge.py --big_dir truthseeker/plots/ --data_file clean/condense/knn.csv
      --little_dir_data_file  clean/condense/logistic.csv clean/condense/svc.csv --output_folder
      truthseeker/plots/ --output_file condensed_merged.csv
    deps:
    - path: truthseeker/plots/clean/condense/knn.csv
      hash: md5
      md5: b4a24958c454fe928e948ddac56d1475
      size: 119601
    - path: truthseeker/plots/clean/condense/logistic.csv
      hash: md5
      md5: db289a8e0b7d19ddaabb373d60b97e80
      size: 762133
    - path: truthseeker/plots/clean/condense/svc.csv
      hash: md5
      md5: 322ae8bdd1ac10192f9e5bbf2c7fcd60
      size: 678356
    outs:
    - path: truthseeker/plots/condensed_merged.csv
      hash: md5
      md5: 68583c1ee423f753762edcfebe0f23c3
      size: 1575899
  condense@truthseeker-knn-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_truthseeker 
      files.reports=reports/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 4a33eb81bce4e43599c5aaf8002056ea
      size: 76
  condense@truthseeker-logistic-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_truthseeker 
      files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 911d26648f063c07f5ae8579ff1b78ea
      size: 253
  condense@truthseeker-knn-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_truthseeker 
      files.reports=reports/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 4a33eb81bce4e43599c5aaf8002056ea
      size: 76
  condense@truthseeker-svc-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_truthseeker 
      files.reports=reports/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5017761b042d84524fc91308aedddda4
      size: 205
  condense@truthseeker-svc-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_truthseeker 
      files.reports=reports/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5017761b042d84524fc91308aedddda4
      size: 205
  condense@truthseeker-logistic-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_truthseeker 
      files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 911d26648f063c07f5ae8579ff1b78ea
      size: 253
  condense@truthseeker-logistic-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_truthseeker 
      files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 911d26648f063c07f5ae8579ff1b78ea
      size: 253
  condense@truthseeker-logistic-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_truthseeker 
      files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 911d26648f063c07f5ae8579ff1b78ea
      size: 253
  condense@truthseeker-knn-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_truthseeker 
      files.reports=reports/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 4a33eb81bce4e43599c5aaf8002056ea
      size: 76
  condense@truthseeker-svc-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_truthseeker 
      files.reports=reports/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5017761b042d84524fc91308aedddda4
      size: 205
  condense@truthseeker-logistic-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_truthseeker 
      files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 911d26648f063c07f5ae8579ff1b78ea
      size: 253
  condense@truthseeker-knn-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=truthseeker 
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_truthseeker 
      files.reports=reports/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=truthseeker/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 4a33eb81bce4e43599c5aaf8002056ea
      size: 76
  grid_search@20-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/20/symmetry_true files.directory=ddos
      files.reports=reports/gzip_knn/20/symmetry_true hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: 715d6ed46ebd38fd5d00edaef1f75671.dir
      size: 1536823
      nfiles: 513
    - path: ddos/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: c88e371c24ae363965d0f7ce5da576df.dir
      size: 541429
      nfiles: 481
  grid_search@20-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/20/symmetry_false
      files.directory=ddos files.reports=reports/gzip_knn/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: 6fee60b2e578e4ff8702d4c2311cc178.dir
      size: 1500336
      nfiles: 513
    - path: ddos/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 03056c1db0238a1f1e41f593c555f059.dir
      size: 161349
      nfiles: 144
  grid_search@20-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/20/symmetry_true
      files.directory=ddos files.reports=reports/gzip_logistic/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: d32b0b62292d108574abd4b7bdcac704.dir
      size: 1346769
      nfiles: 513
    - path: ddos/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 9f8de6c45140851381c9ddfedea16085.dir
      size: 446793
      nfiles: 384
  grid_search@20-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/20/symmetry_false
      files.directory=ddos files.reports=reports/gzip_logistic/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: 3d13e7e2e119f567b904999547da7339.dir
      size: 1344824
      nfiles: 513
    - path: ddos/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 41eb54c7bc49ad7a9db067b19465078c.dir
      size: 446593
      nfiles: 384
  grid_search@20-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/20/symmetry_true files.directory=ddos
      files.reports=reports/gzip_svc/20/symmetry_true hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: e49bfb186cd91e3d05f80b062d7935cf.dir
      size: 1258890
      nfiles: 513
    - path: ddos/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: fef833f6610b6c5c1c012ff22d288658.dir
      size: 435380
      nfiles: 384
  grid_search@20-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/20/symmetry_false
      files.directory=ddos files.reports=reports/gzip_svc/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 1f6c85a483495515c5b4e5e9b5bc1a3a.dir
      size: 1258923
      nfiles: 513
    - path: ddos/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: 8234b4e5b949adbde3aef6227679095b.dir
      size: 435282
      nfiles: 384
  grid_search@20-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/20/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_knn/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: e5bd751df99fb66230b378927ade556d.dir
      size: 1212319
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: 6d97a92314eca6d8656bf208dc26935a.dir
      size: 400095
      nfiles: 354
  grid_search@20-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/20/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_knn/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: 17197133ab2574fa61f3a035bd4a91ce.dir
      size: 1179649
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 291b1e8e63a1062417aa4a73d6524e87.dir
      size: 78720
      nfiles: 68
  grid_search@20-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/20/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: b0ecbc6d0774f5205c58ea01ae68ea7f.dir
      size: 1348998
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 6708ac29f7464ed5b65633d9c4fd14d0.dir
      size: 436752
      nfiles: 384
  grid_search@20-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/20/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: 4848dcbd3e70f20f5f9f6dbdb237559c.dir
      size: 1347312
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: c39513b61d0bdbc110fed615f0db8c7b.dir
      size: 436403
      nfiles: 384
  grid_search@20-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/20/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_svc/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: eb3d47ffc2c4fe0830574725df7affc6.dir
      size: 1261165
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: cb59116f466bdf13a47dada54a06a419.dir
      size: 425391
      nfiles: 384
  grid_search@20-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/20/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_svc/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 124b63152a1b8813d8c4e03dfced7d2b.dir
      size: 1256873
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: bcbb587fc9d4326e3da03fd2744b5b09.dir
      size: 424497
      nfiles: 384
  grid_search@20-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/20/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_knn/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: 3bff042b04d609cbcd779f07ec0e71a2.dir
      size: 1228152
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: bf3bb05e04cd04d55f370543e1cfa90f.dir
      size: 401325
      nfiles: 366
  grid_search@20-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/20/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_knn/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: 9caade90850d326b5b0a1095547785b3.dir
      size: 1186889
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 4052c9d24c2a2fdc38e7e6ad0557a102.dir
      size: 29612
      nfiles: 27
  grid_search@20-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/20/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: d11facae98e04cd463564e5d4c900584.dir
      size: 1352047
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 3c99ddf4e104954569ad5b15a1bdebc6.dir
      size: 437741
      nfiles: 384
  grid_search@20-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/20/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: c852e7d9868ddb2a53129229ba0b2bbb.dir
      size: 1352659
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 9a2672e63452da96e86b3fc5877242e3.dir
      size: 437752
      nfiles: 384
  grid_search@20-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/20/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_svc/20/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: 04f20c73d3ff843cc07543b0fcaca563.dir
      size: 1264276
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: 43bae1e4aa2b9411243e7e0156c8c67b.dir
      size: 426418
      nfiles: 384
  grid_search@20-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/20/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_svc/20/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: 3c3a6dfecac2443bb08a9930f09481e4.dir
      size: 1262768
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: 7e946e92140231a5329feebad9ef4f91.dir
      size: 426045
      nfiles: 384
  grid_search@20-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/20/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_knn/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/20/symmetry_true
      hash: md5
      md5: 272f7fc74d593709b9ced2f76a2f0ac6.dir
      size: 1237412
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/20/symmetry_true/train/
      hash: md5
      md5: 2c1bbf7bbb39ba103251fc29387e4cce.dir
      size: 405020
      nfiles: 366
  grid_search@20-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/20/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_knn/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/20/symmetry_false
      hash: md5
      md5: dabcf8f647a72c14573819a0004feaca.dir
      size: 1200135
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/20/symmetry_false/train/
      hash: md5
      md5: 25b32c3eb954273425679e7bb5ee675e.dir
      size: 43170
      nfiles: 39
  grid_search@20-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/20/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_logistic/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/20/symmetry_true
      hash: md5
      md5: 5c0b25af4c18697c12bfccfde7ec6183.dir
      size: 1361336
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/20/symmetry_true/train/
      hash: md5
      md5: 4a5580b1b89d1e2a16849b7f9c0b6338.dir
      size: 441658
      nfiles: 384
  grid_search@20-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/20/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_logistic/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/20/symmetry_false
      hash: md5
      md5: fb7ec16174e1bc68513b425804ecdf03.dir
      size: 1362511
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/20/symmetry_false/train/
      hash: md5
      md5: 09ef2de9e634ea382c040e008cb3585e.dir
      size: 441937
      nfiles: 384
  grid_search@20-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/20/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_svc/20/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/20/symmetry_true
      hash: md5
      md5: 03cd5bc403e52125a8be394635cb3cf0.dir
      size: 1273514
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/20/symmetry_true/train/
      hash: md5
      md5: 13177fa66449428d98438f54252058e0.dir
      size: 430276
      nfiles: 384
  grid_search@20-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/20/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_svc/20/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/20/symmetry_false
      hash: md5
      md5: ebccf2bd23dd264a6a5ae6c4416cc225.dir
      size: 1272008
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/20/symmetry_false/train/
      hash: md5
      md5: 31dea85c93f94eaa2b7fdee25c62ac5c.dir
      size: 429979
      nfiles: 384
  grid_search@100-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/100/symmetry_true
      files.directory=ddos files.reports=reports/gzip_knn/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: 5c1708f9f1c26af5a4eb15c296fb5ce1.dir
      size: 1199435
      nfiles: 513
    - path: ddos/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: eaa2becee64de1d6edc5fbe345e2e69b.dir
      size: 94176
      nfiles: 84
  grid_search@100-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/100/symmetry_false
      files.directory=ddos files.reports=reports/gzip_knn/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: 3b09965ed326b739a38ee2b29c2634a5.dir
      size: 1200716
      nfiles: 513
    - path: ddos/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: 6641dcdf293f2be2ae4fb8b6312ee513.dir
      size: 84180
      nfiles: 75
  grid_search@100-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/100/symmetry_true
      files.directory=ddos files.reports=reports/gzip_logistic/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: b42976ebe7c903597628efea8eab1d37.dir
      size: 1345426
      nfiles: 513
    - path: ddos/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: d4b073942c15a60b18902ff92dab4612.dir
      size: 446747
      nfiles: 384
  grid_search@100-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/100/symmetry_false
      files.directory=ddos files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: 80e3f0cb3fd04ace3d1acb61a3336ea4.dir
      size: 1347444
      nfiles: 513
    - path: ddos/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 29995c9ee46fa90c4cc5f7c91e66d62e.dir
      size: 447106
      nfiles: 384
  grid_search@100-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/100/symmetry_true
      files.directory=ddos files.reports=reports/gzip_svc/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: a14921e31a533c4edc51a4e909ba857b.dir
      size: 1594873
      nfiles: 513
    - path: ddos/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: f359228bdbbe75ec69196e4cf4576c82.dir
      size: 860140
      nfiles: 759
  modified_grid_search@20-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_svc/20/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_svc/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: 4d6287f8f027a52f7a7bea59bf793742.dir
      size: 4457180
      nfiles: 1576
  modified_grid_search@100-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_svc/100/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_svc/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 8520c5ca715a0fe8bdbec6c56f8377fc.dir
      size: 4072538
      nfiles: 1438
  modified_grid_search@100-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_knn/100/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_knn/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: dde20f379b4500fd0f17f221a8a6c240.dir
      size: 297335
      nfiles: 105
  modified_grid_search@20-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_knn/20/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_knn/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 5dfab3012b04da930e046cd92e0fc922.dir
      size: 1347460
      nfiles: 480
  modified_grid_search@300-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_knn/300/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_knn/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 7967e9c7aeb52915a9e6b6d6eb840bf9.dir
      size: 311714
      nfiles: 111
  modified_grid_search@20-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_svc/20/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_svc/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: d57ed285bab256965dad88f46248d2a3.dir
      size: 2165750
      nfiles: 768
  modified_grid_search@300-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_svc/300/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_svc/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: 0c77c67fcb36df313fb6ddeb9c1f8bc7.dir
      size: 4345463
      nfiles: 1533
  modified_grid_search@500-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_svc/500/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_svc/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 6cfaa0a47202978ac1caa78a84bdab93.dir
      size: 2164855
      nfiles: 768
  modified_grid_search@20-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_logistic/20/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_logistic/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: d240c8a517467104c4e9da748caead4f.dir
      size: 3295867
      nfiles: 1152
  modified_grid_search@20-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_svc/20/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_svc/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: e13d48ba560f180b517c6f0813c38c11.dir
      size: 2163512
      nfiles: 768
  modified_grid_search@20-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_knn/20/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_knn/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: eea21ab1020a8399956d449f117f34a8.dir
      size: 2104604
      nfiles: 747
  modified_grid_search@20-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_logistic/20/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_logistic/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: ecb0e42b4fd35c5e3af3040a6e144d3e.dir
      size: 2187114
      nfiles: 768
  modified_grid_search@500-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_svc/500/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_svc/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 9c211d9a499477399b3b9557c9939818.dir
      size: 4352724
      nfiles: 1536
  modified_grid_search@500-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_knn/500/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_knn/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: d36d7a4927a47af3b44d7db7f960f747.dir
      size: 676553
      nfiles: 240
  modified_grid_search@500-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_logistic/500/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_logistic/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: f657f3a40ae35a31b7a6834ef4be007a.dir
      size: 3300014
      nfiles: 1152
  modified_grid_search@100-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_logistic/100/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_logistic/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: 9dfe40926540c720b1f8a4be106ab853.dir
      size: 3298101
      nfiles: 1152
  modified_grid_search@20-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_knn/20/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_knn/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 32515243f861563fc1bcaa77fd9c941e.dir
      size: 1262129
      nfiles: 450
  modified_grid_search@100-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_svc/100/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_svc/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 072054b321040e91e5aecff2670cd03a.dir
      size: 2183974
      nfiles: 768
  modified_grid_search@500-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_knn/500/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_knn/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: ef3b38cee4dd507a92ad2d35dd8dc45f.dir
      size: 526915
      nfiles: 186
  modified_grid_search@500-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_svc/500/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_svc/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 65ed08a032c29ce402181a61b0def5df.dir
      size: 2166355
      nfiles: 768
  modified_grid_search@20-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_svc/20/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_svc/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/20/modified_true/train/
      hash: md5
      md5: 4d57fb526d2a2ceba97d9603c099d8cd.dir
      size: 2183626
      nfiles: 768
  modified_grid_search@100-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_logistic/100/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_logistic/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: 6bc0c61a9b88b07514087ca659ced17b.dir
      size: 2188631
      nfiles: 768
  modified_grid_search@100-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_svc/100/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_svc/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: c7b16194017551cec2f5d4e43738e9d9.dir
      size: 2164048
      nfiles: 768
  modified_grid_search@300-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_knn/300/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_knn/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: e6c787c9fc131d8c45cf6da545e08263.dir
      size: 626015
      nfiles: 222
  modified_grid_search@300-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_svc/300/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_svc/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: 230fb6587b3527fc5b6d7572819719de.dir
      size: 2185708
      nfiles: 768
  modified_grid_search@300-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_logistic/300/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_logistic/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: 29a6665dc94d5667715b6f5f8cb27080.dir
      size: 2200588
      nfiles: 768
  modified_grid_search@500-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_logistic/500/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_logistic/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: c9889f13b36b90cf35d76c3764bc0a8c.dir
      size: 2188376
      nfiles: 768
  modified_grid_search@300-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_logistic/300/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_logistic/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: aefc915e7221f5ad1ece8dc837cca064.dir
      size: 2209417
      nfiles: 768
  modified_grid_search@100-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_knn/100/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_knn/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: c4b3e005aaca6029ac1fcb5b6d183b29.dir
      size: 421179
      nfiles: 150
  modified_grid_search@20-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_knn/20/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_knn/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/20/modified_true/train/
      hash: md5
      md5: 09e9034b3bb6ed990819920864906e82.dir
      size: 1368512
      nfiles: 484
  modified_grid_search@300-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_logistic/300/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_logistic/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: c9822b2ebc94ffaa427f248d243b5bf4.dir
      size: 2190080
      nfiles: 768
  modified_grid_search@20-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=20 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_logistic/20/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_logistic/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: e3318c3afbddece5adf53e6d146d4445.dir
      size: 2189223
      nfiles: 768
  modified_grid_search@100-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_knn/100/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_knn/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: e07c6034c0e474bd6aa0ea91533c3f77.dir
      size: 303021
      nfiles: 108
  modified_grid_search@500-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_logistic/500/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_logistic/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: afec111dd4f75f631f23bb891e39d263.dir
      size: 2208430
      nfiles: 768
  modified_grid_search@100-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_logistic/100/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_logistic/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: b5077b03e1e88776f72e9a662cb4b5a4.dir
      size: 2190553
      nfiles: 768
  modified_grid_search@500-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_svc/500/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_svc/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_svc/500/modified_true/train/
      hash: md5
      md5: 77f4d34a1200ccab07fb76ef42121666.dir
      size: 2184923
      nfiles: 768
  modified_grid_search@300-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_svc/300/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_svc/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: 79950a646ce740f465ccfe2ad3567760.dir
      size: 2166999
      nfiles: 768
  modified_grid_search@500-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_knn/500/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_knn/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: a118ff7333d46ab4802c13e1d241c4b7.dir
      size: 387384
      nfiles: 138
  modified_grid_search@100-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_logistic/100/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_logistic/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/100/modified_true/train/
      hash: md5
      md5: af5bb6faa62378e3b489c03ac0d98dbb.dir
      size: 2207782
      nfiles: 768
  modified_grid_search@300-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_knn/300/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_knn/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 72dbd3e8de26e4a4539168bc99f83144.dir
      size: 561102
      nfiles: 198
  modified_grid_search@100-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/modified/gzip_knn/100/modified_true/
      files.directory=truthseeker files.reports=reports/modified/gzip_knn/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/reports/modified/gzip_knn/100/modified_true/train/
      hash: md5
      md5: df8ff6f7365a2eb2b3bd626a2841330b.dir
      size: 431101
      nfiles: 153
  modified_grid_search@300-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_logistic/300/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_logistic/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/300/modified_true/train/
      hash: md5
      md5: c55ca371f60385522a67d4819f6b271e.dir
      size: 2192348
      nfiles: 768
  modified_grid_search@20-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=20
      ++data.sample.test_size=400 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_ddos
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/modified/gzip_logistic/20/modified_true/
      files.directory=ddos files.reports=reports/modified/gzip_logistic/20/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/reports/modified/gzip_logistic/20/modified_true/train/
      hash: md5
      md5: bee644085db7bc8871a9338815c027d3.dir
      size: 2206820
      nfiles: 768
  modified_grid_search@500-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_knn/500/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_knn/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/500/modified_true/train/
      hash: md5
      md5: f3c1a1603f7fbdfd37a63b8ac74baafa.dir
      size: 429782
      nfiles: 153
  modified_grid_search@300-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_knn model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_knn_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_knn/300/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_knn/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_knn/300/modified_true/train/
      hash: md5
      md5: 15a56ae27c574d1a0768e67727665803.dir
      size: 522721
      nfiles: 186
  modified_grid_search@300-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/modified/gzip_svc/300/modified_true/
      files.directory=kdd_nsl files.reports=reports/modified/gzip_svc/300/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/reports/modified/gzip_svc/300/modified_true/train/
      hash: md5
      md5: a6fd335499fa1f0d5ecba5d594710456.dir
      size: 2165768
      nfiles: 768
  modified_grid_search@500-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 ++data.sample.test_size=400 model_name=gzip_logistic
      model.init.distance_matrix=null 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_logistic/500/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_logistic/500/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_logistic/500/modified_true/train/
      hash: md5
      md5: 90d92447817b350297001c07af6cd728.dir
      size: 2191168
      nfiles: 768
  modified_grid_search@100-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 ++data.sample.test_size=400 model_name=gzip_svc model.init.distance_matrix=null
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      model.init.symmetric=True ++model.init.modified=true hydra.sweeper.study_name=modified_gzip_svc_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/modified/gzip_svc/100/modified_true/
      files.directory=sms_spam files.reports=reports/modified/gzip_svc/100/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 ++raise_exception=True                --config-name
      gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/reports/modified/gzip_svc/100/modified_true/train/
      hash: md5
      md5: 62d544c5f92a4c5d48a069f2972c29ae.dir
      size: 2165278
      nfiles: 768
  grid_search@100-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=100
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/100/symmetry_false
      files.directory=ddos files.reports=reports/gzip_svc/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: d33a6bc06c8c01f0cb9841ea83296cf6.dir
      size: 1257541
      nfiles: 513
    - path: ddos/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: c9d77e5f5ab3a97036c0514dc4221a3f.dir
      size: 435342
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/100/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_knn/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: 98b90dd12dc6ed78a4e7a8e63f1ee4e6.dir
      size: 1174565
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: b5f4ce07d28ccddc829f8dcf1d4179de.dir
      size: 75388
      nfiles: 62
  grid_search@100-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/100/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_knn/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: 27d11eb93a33ac4e7d11cc8a2573b1f2.dir
      size: 1195647
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: da4f33191a487eb8b2045c3f9cfd0057.dir
      size: 118234
      nfiles: 102
  grid_search@100-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/100/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: f53aa2b62366e96633c4ce22a333e201.dir
      size: 1349109
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 9e7e8c559b46175a79737f169f489ef4.dir
      size: 437082
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/100/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: f8d53ee83466ebfd4b3de8c9f50a2191.dir
      size: 1355286
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 0acbf737addf5ee8b39da82759704832.dir
      size: 438181
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/100/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_svc/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: 0187e40e4997c54ec179fdac3b771443.dir
      size: 1257412
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 2be4bbc2cbc569c0d674d5a0fc4691be.dir
      size: 424773
      nfiles: 384
  grid_search@100-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/100/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_svc/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: e08eef5feaf145487b6e1fbe584820f5.dir
      size: 1260757
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: a04d603cbebaedb6d96639aaa1cdde57.dir
      size: 425334
      nfiles: 384
  grid_search@100-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/100/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_knn/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: e7caa5166f955d2ca0fffe40e230f618.dir
      size: 1211834
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: 45107b0e1fd5e79f6bdb96662fb9ff99.dir
      size: 128373
      nfiles: 116
  grid_search@100-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/100/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_knn/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: 89fd7942de9ec14121bb1104ff572efd.dir
      size: 1185664
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: a5a84fcece7e903433b593c04112057b.dir
      size: 95462
      nfiles: 83
  grid_search@100-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/100/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: dc2dc3bcc5451e2acbc40cc05b333d1d.dir
      size: 1353310
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 185c8ca7005735ff09866697fbbdcf4d.dir
      size: 438099
      nfiles: 384
  grid_search@100-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/100/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: 812d2008bb428cce0b0802a97b7fa024.dir
      size: 1355181
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: b280ef11c23b2f7dd066e943551d2286.dir
      size: 438365
      nfiles: 384
  grid_search@100-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/100/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_svc/100/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: 25304d2a52a87ff2a0d355a612277e97.dir
      size: 1263018
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 1e0148548dfb5601e97da11cf8c6a386.dir
      size: 426194
      nfiles: 384
  grid_search@100-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/100/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_svc/100/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: 1aef6e9ca8f5b944f3e7f50a7f06096b.dir
      size: 1263400
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: e5aaac7b5e69a8fa76f9e6d12a241d69.dir
      size: 426269
      nfiles: 384
  grid_search@100-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/100/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_knn/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/100/symmetry_true
      hash: md5
      md5: ef0c92196951d9ce388c19d4be15275a.dir
      size: 1210505
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/100/symmetry_true/train/
      hash: md5
      md5: c55a4b2dbeb9e8fc3c5a65c35a1c68b5.dir
      size: 116257
      nfiles: 103
  grid_search@100-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/100/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_knn/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/100/symmetry_false
      hash: md5
      md5: d2c4e58f6476826b6b93fe34d533d820.dir
      size: 1210127
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/100/symmetry_false/train/
      hash: md5
      md5: 8c422e1ec17ab2fb473dff2e30be9769.dir
      size: 179419
      nfiles: 156
  grid_search@100-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/100/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_logistic/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/100/symmetry_true
      hash: md5
      md5: 06cdb7b4c8d8ac85f51e5fcd08814317.dir
      size: 1362718
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/100/symmetry_true/train/
      hash: md5
      md5: 6f93537bb8ae6b19ab430458a478e8f2.dir
      size: 442042
      nfiles: 384
  grid_search@100-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/100/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_logistic/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/100/symmetry_false
      hash: md5
      md5: e19edb9a09fd001564016aeb03ac34a4.dir
      size: 1365716
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/100/symmetry_false/train/
      hash: md5
      md5: 9196b59cbdfc787851becc47a9a4c721.dir
      size: 442659
      nfiles: 384
  grid_search@100-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/100/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_svc/100/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/100/symmetry_true
      hash: md5
      md5: b503d14cd4b7e724c18d95adead8cb68.dir
      size: 1273550
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/100/symmetry_true/train/
      hash: md5
      md5: 0d787f0f103f6a60f4ddfa0765696b6d.dir
      size: 430386
      nfiles: 384
  grid_search@100-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=100 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/100/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_svc/100/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/100/symmetry_false
      hash: md5
      md5: 2dfe13c8b5f01e556b459409fbb1d4ba.dir
      size: 1275197
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/100/symmetry_false/train/
      hash: md5
      md5: 14fdc00dd5ae4ac11be744c41c556af7.dir
      size: 430650
      nfiles: 384
  grid_search@300-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/300/symmetry_true
      files.directory=ddos files.reports=reports/gzip_knn/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: 1ad4f254603894ac16c01c5112eb600d.dir
      size: 1204815
      nfiles: 513
    - path: ddos/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: 00ebb2d0c1f196333b67cf24f9e4d975.dir
      size: 101175
      nfiles: 90
  grid_search@300-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/300/symmetry_false
      files.directory=ddos files.reports=reports/gzip_knn/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 8c6a7c04df187beedea9f06ae7401338.dir
      size: 1198256
      nfiles: 513
    - path: ddos/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: aa479aaf8acfd67284a365d7d90db9e2.dir
      size: 131635
      nfiles: 117
  grid_search@300-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/300/symmetry_true
      files.directory=ddos files.reports=reports/gzip_logistic/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: 0f9002703d6510d2ca261f97c549606a.dir
      size: 1346362
      nfiles: 513
    - path: ddos/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: 50de352495626210d59fbba24b97e742.dir
      size: 447558
      nfiles: 384
  grid_search@300-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/300/symmetry_false
      files.directory=ddos files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 60c1f417c6dd9c21f0918bda053b5550.dir
      size: 1348352
      nfiles: 513
    - path: ddos/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: 85bbf66282a4be1bc904d0b79bb482f8.dir
      size: 447901
      nfiles: 384
  grid_search@300-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/300/symmetry_true
      files.directory=ddos files.reports=reports/gzip_svc/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: 2e092983dd491ae2e36ed2c114152d74.dir
      size: 1256884
      nfiles: 513
    - path: ddos/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 1848b9c93eee9958b3955891fd1c3cc0.dir
      size: 435897
      nfiles: 384
  grid_search@300-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=300
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/300/symmetry_false
      files.directory=ddos files.reports=reports/gzip_svc/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: 76298975df0f66979aa031677c8ee85d.dir
      size: 1258835
      nfiles: 513
    - path: ddos/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 22b695be0f9a8ed51a24e2a2c134e867.dir
      size: 436152
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/300/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_knn/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: 2f25b47a3629bd060d65cfccc3822a49.dir
      size: 1174214
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: 17d0ca50b31a6f1a7c54ccd84fd16283.dir
      size: 82055
      nfiles: 68
  grid_search@300-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/300/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_knn/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: c958366e4751f47c8413d21f1b2dd846.dir
      size: 1178297
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: ea0681463a7f6137b4babec436487c44.dir
      size: 115008
      nfiles: 98
  grid_search@300-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/300/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: 06ae7543abab053a2cddb8005d807e4e.dir
      size: 1355937
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: 037914c2ae5985babad8beb5818388ed.dir
      size: 438805
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/300/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 82bd1c613165ec9f9b2f7062eaf483a9.dir
      size: 1356546
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: 8e3c60e138efb736a206fcaaecfc4f43.dir
      size: 438988
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/300/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_svc/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: fcd1f5b938237c3bb6b25723c9979d17.dir
      size: 1261797
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: b7efbb3b676ee3170022ec20e1b1bdfb.dir
      size: 426251
      nfiles: 384
  grid_search@300-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/300/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_svc/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: ff928143850aea1c3b6300355a580d2f.dir
      size: 1263686
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 430c34782e78e574878f5e92a767237e.dir
      size: 426770
      nfiles: 384
  grid_search@300-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/300/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_knn/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: aa7ab0c2aaa977771a0db33e10167fa1.dir
      size: 1162363
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: b7ee668d0e59c4e5d722d9dae807b38d.dir
      size: 95926
      nfiles: 85
  grid_search@300-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/300/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_knn/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 8084b32ff92bb760948bc360520e6460.dir
      size: 1103176
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: 8108c4631275f809da57378890dcaccf.dir
      size: 6566
      nfiles: 5
  grid_search@300-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/300/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: f86b24e6e489c85d6194fa177dd1d381.dir
      size: 1354269
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: f84ffffbc6f1b700d9af59bd3ae9a35c.dir
      size: 438933
      nfiles: 384
  grid_search@300-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/300/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 0ce9fa265d1dfd1b21522cb3a189d8c2.dir
      size: 1355165
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: ff63f4982dd5d70986f661b85cde378b.dir
      size: 439041
      nfiles: 384
  grid_search@300-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/300/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_svc/300/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: 20527ae39a0c8368963712788385f544.dir
      size: 1260700
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 10d3b4fb7871b1f8172c63dfa0c3492d.dir
      size: 426369
      nfiles: 384
  grid_search@300-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/300/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_svc/300/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: fbfc546692fbaa6137fc0263bfb21011.dir
      size: 1263047
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 48f940046123446ec21837139912364f.dir
      size: 426830
      nfiles: 384
  grid_search@300-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/300/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_knn/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/300/symmetry_true
      hash: md5
      md5: 8e6cb5efdd7fe83dec6a5f242a3126fd.dir
      size: 1211079
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/300/symmetry_true/train/
      hash: md5
      md5: 236228f851d92b64af909f00b46f3544.dir
      size: 200271
      nfiles: 174
  grid_search@300-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/300/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_knn/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/300/symmetry_false
      hash: md5
      md5: 6d00773685808afe9ae09e8130da2897.dir
      size: 1201472
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/300/symmetry_false/train/
      hash: md5
      md5: eb25d85c537c804761efe232a26bed33.dir
      size: 171264
      nfiles: 151
  grid_search@300-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/300/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_logistic/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/300/symmetry_true
      hash: md5
      md5: af67fcf3c726fec3e17bc3ba4c22b09b.dir
      size: 1363259
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/300/symmetry_true/train/
      hash: md5
      md5: d3728bd1721b14afdcf3d51291e82d40.dir
      size: 442857
      nfiles: 384
  grid_search@300-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/300/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_logistic/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/300/symmetry_false
      hash: md5
      md5: 04fd086586d699fa40ffdc7f7d7458bc.dir
      size: 1365083
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/300/symmetry_false/train/
      hash: md5
      md5: eb0d93e53b6022ea0ba96c5c8c771eca.dir
      size: 442963
      nfiles: 384
  grid_search@300-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/300/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_svc/300/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/300/symmetry_true
      hash: md5
      md5: dfc8859e041a1c7ed531eb09d27019b9.dir
      size: 1274094
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/300/symmetry_true/train/
      hash: md5
      md5: 684a585382e811aa80b8dcdf0a15c5a5.dir
      size: 431059
      nfiles: 384
  grid_search@300-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=300 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/300/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_svc/300/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/300/symmetry_false
      hash: md5
      md5: d8119c0fe506ac0985d99a11ed20e37a.dir
      size: 1275743
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/300/symmetry_false/train/
      hash: md5
      md5: 17abdc6df1c9c17fad4ae6f42264254d.dir
      size: 431299
      nfiles: 384
  grid_search@500-ddos-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/500/symmetry_true
      files.directory=ddos files.reports=reports/gzip_knn/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 1f96352bfcd1b8505412d8d7170c6abd.dir
      size: 1202149
      nfiles: 513
    - path: ddos/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: 0beab1fb33df40645bf010e1319a9dab.dir
      size: 121243
      nfiles: 108
  grid_search@500-ddos-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_knn/500/symmetry_false
      files.directory=ddos files.reports=reports/gzip_knn/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: f7703d4d40b1ea9ad5d41e64cbabf8e9.dir
      size: 1205756
      nfiles: 513
    - path: ddos/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 035b3b8c28de52e1cda43c8066368138.dir
      size: 131401
      nfiles: 116
  grid_search@500-ddos-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/500/symmetry_true
      files.directory=ddos files.reports=reports/gzip_logistic/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: b2125e72a926dd50541509870789d5f8.dir
      size: 1346140
      nfiles: 513
    - path: ddos/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 9d55959b8057984d6643a64a9b06709e.dir
      size: 447242
      nfiles: 384
  grid_search@500-ddos-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_logistic model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_logistic/500/symmetry_false
      files.directory=ddos files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: bd12a448fbaeec72df93ca456661357f.dir
      size: 1347841
      nfiles: 513
    - path: ddos/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: ab82c48a5050d1e089e91fdbc32d3734.dir
      size: 447574
      nfiles: 384
  grid_search@500-ddos-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/500/symmetry_true
      files.directory=ddos files.reports=reports/gzip_svc/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: 4aa2ffffb4df25c71d636e0548c80758.dir
      size: 1256842
      nfiles: 513
    - path: ddos/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: d2a808b2cee23805c530590cc973d873.dir
      size: 435556
      nfiles: 384
  grid_search@500-ddos-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=500
      data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_ddos hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=ddos/logs/gzip_svc/500/symmetry_false
      files.directory=ddos files.reports=reports/gzip_svc/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: 5d6646f65d1a51936f5b16244e66d36f.dir
      size: 1258646
      nfiles: 513
    - path: ddos/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 1c13295c06d15ac4e97d337a27b63264.dir
      size: 435877
      nfiles: 384
  grid_search@500-kdd_nsl-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/500/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_knn/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 74722bad33670460023e82d0944430b4.dir
      size: 1173079
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: d548d5a51a767fa9a838215a209f9b71.dir
      size: 85303
      nfiles: 72
  grid_search@500-kdd_nsl-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_knn/500/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_knn/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: 5dce7c14969772c3f53cb6d9f5ca836d.dir
      size: 1169617
      nfiles: 513
    - path: kdd_nsl/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 5d75ca8edfb0f0cf53df8fa504c4c352.dir
      size: 32845
      nfiles: 28
  grid_search@500-kdd_nsl-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/500/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: e6f70de5f551b3e6d4e2d79c47d56041.dir
      size: 1354340
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: b1fcdee142b6ba4cb6f1f55eec86b080.dir
      size: 438222
      nfiles: 384
  grid_search@500-kdd_nsl-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_kdd_nsl
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_logistic/500/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: 1432d4dd1f5eb667289f6025e83e45ad.dir
      size: 1356051
      nfiles: 513
    - path: kdd_nsl/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: a4354e4a4e749c4498542d957dc7838c.dir
      size: 438519
      nfiles: 384
  grid_search@500-kdd_nsl-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/500/symmetry_true
      files.directory=kdd_nsl files.reports=reports/gzip_svc/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: 194fa4bc7f4637fd048e7b8ab1b4bca1.dir
      size: 1261470
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: d63ce8e17525155b63a5b946a12c97e5.dir
      size: 425946
      nfiles: 384
  grid_search@500-kdd_nsl-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_kdd_nsl hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=kdd_nsl/logs/gzip_svc/500/symmetry_false
      files.directory=kdd_nsl files.reports=reports/gzip_svc/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: 5fa5f7ab2888538f581adc83b06cd2f1.dir
      size: 1263448
      nfiles: 513
    - path: kdd_nsl/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 680abbd617fb9404f44215bf4fd27e90.dir
      size: 426305
      nfiles: 384
  grid_search@500-sms_spam-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/500/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_knn/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 6e6fc129d19bc5443ab90ad63eb42ac4.dir
      size: 1101640
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: f9944a4234f236b0b1b6f65f2aa44924.dir
      size: 6563
      nfiles: 5
  grid_search@500-sms_spam-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_knn/500/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_knn/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: 234718eebc523ba85e1a508c0c9c9700.dir
      size: 1103177
      nfiles: 513
    - path: sms_spam/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 139bd96197c01d737e44ada047b972d4.dir
      size: 6567
      nfiles: 5
  grid_search@500-sms_spam-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/500/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: 6ae34741e739da4558dcf664258c8c59.dir
      size: 1353216
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 1d623dd4b1974208861a8db2158cc690.dir
      size: 438441
      nfiles: 384
  grid_search@500-sms_spam-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_sms_spam
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_logistic/500/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: c992155a2e4968e722b864f2c7dac469.dir
      size: 1353505
      nfiles: 513
    - path: sms_spam/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: ea4eafb193d37136360e31e264640fed.dir
      size: 438326
      nfiles: 384
  grid_search@500-sms_spam-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/500/symmetry_true
      files.directory=sms_spam files.reports=reports/gzip_svc/500/symmetry_true hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: e3126fb385d19c1afdb064aed73e5d3b.dir
      size: 1264349
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: 36f627b3ccd8c11f8c3561eeeda13fa6.dir
      size: 426846
      nfiles: 384
  grid_search@500-sms_spam-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_sms_spam hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=sms_spam/logs/gzip_svc/500/symmetry_false
      files.directory=sms_spam files.reports=reports/gzip_svc/500/symmetry_false hydra.launcher.n_jobs=-1
      ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: b7544aeb4e84815f4e572900a35f5bec.dir
      size: 1265864
      nfiles: 513
    - path: sms_spam/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 14fc2f085b577e06c3216e451e97bd61.dir
      size: 427109
      nfiles: 384
  grid_search@500-truthseeker-gzip_knn-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/500/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_knn/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/500/symmetry_true
      hash: md5
      md5: 394084b8e76f2464a936d97dc308d978.dir
      size: 1194615
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/500/symmetry_true/train/
      hash: md5
      md5: c2469d75bb9a243fd56ab213e4391241.dir
      size: 185859
      nfiles: 153
  grid_search@500-truthseeker-gzip_knn-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_knn model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_knn_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_knn/500/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_knn/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_knn --multirun
    deps:
    - path: conf/gzip_knn.yaml
      hash: md5
      md5: ef305f9a1067e71d01137ac15ee1a13d
      size: 1960
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5,7,11
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              model.init.symmetric: True,False
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_knn/500/symmetry_false
      hash: md5
      md5: f32b5badacb1cff7f3157c2099f3c72b.dir
      size: 1199070
      nfiles: 513
    - path: truthseeker/reports/gzip_knn/500/symmetry_false/train/
      hash: md5
      md5: 9d6412974692fab4a35923cb090b846d.dir
      size: 162831
      nfiles: 139
  grid_search@500-truthseeker-gzip_logistic-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=true hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/500/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_logistic/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/500/symmetry_true
      hash: md5
      md5: a90dda29fb833e5893b5efe82ab3aaa3.dir
      size: 1363281
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/500/symmetry_true/train/
      hash: md5
      md5: 484651a351a5454d44e20e3312511dc2.dir
      size: 442444
      nfiles: 384
  grid_search@500-truthseeker-gzip_logistic-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_logistic
      model.init.distance_matrix=null model.init.symmetric=false hydra.sweeper.study_name=gzip_logistic_truthseeker
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_logistic/500/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_logistic/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_logistic --multirun
    deps:
    - path: conf/gzip_logistic.yaml
      hash: md5
      md5: 2c0a37a1635a08a5cda9593728045419
      size: 2047
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              model.init.max_iter: 1000
              model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_logistic/500/symmetry_false
      hash: md5
      md5: 62f72c3e098a6c4020f20189223a82d5.dir
      size: 1364780
      nfiles: 513
    - path: truthseeker/reports/gzip_logistic/500/symmetry_false/train/
      hash: md5
      md5: 58296a15760e8ba7a2b36d5381819770.dir
      size: 442663
      nfiles: 384
  grid_search@500-truthseeker-gzip_svc-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=true hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/500/symmetry_true
      files.directory=truthseeker files.reports=reports/gzip_svc/500/symmetry_true
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/500/symmetry_true
      hash: md5
      md5: dd342156de8cfb6d1df548c738db2059.dir
      size: 1273855
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/500/symmetry_true/train/
      hash: md5
      md5: 4cd3d121eda79e020df8d3bcaf0935ed.dir
      size: 430704
      nfiles: 384
  grid_search@500-truthseeker-gzip_svc-false:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=500 data.sample.test_size=100 model_name=gzip_svc model.init.distance_matrix=null
      model.init.symmetric=false hydra.sweeper.study_name=gzip_svc_truthseeker hydra.sweeper.n_trials=128
      hydra.sweeper.n_jobs=8 hydra.sweep.dir=truthseeker/logs/gzip_svc/500/symmetry_false
      files.directory=truthseeker files.reports=reports/gzip_svc/500/symmetry_false
      hydra.launcher.n_jobs=-1 ++data.sample.random_state=1,2,3,4,5,6,7,8,9,10 
      model.init.metric=gzip,lzma,bz2,zstd,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++raise_exception=True                --config-name gzip_svc --multirun
    deps:
    - path: conf/gzip_svc.yaml
      hash: md5
      md5: a26ecfa96a225aea16b94cb83cbb0f39
      size: 1938
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/gzip_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              model.init.symmetric: true,false
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/gzip_svc/500/symmetry_false
      hash: md5
      md5: c34179ee6f37646ae1bb6e67335d74aa.dir
      size: 1275480
      nfiles: 513
    - path: truthseeker/reports/gzip_svc/500/symmetry_false/train/
      hash: md5
      md5: 03dbead0f122c9445893d886db1c2dbc.dir
      size: 430970
      nfiles: 384
  precompute_matrices@ddos-knn-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip 
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a44f711355e9fc2429688e260dbd6f78.dir
      size: 13470
      nfiles: 5
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
  precompute_matrices@ddos-knn-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=lzma 
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: e036f7b2a1e6f50f66b378a03548b417.dir
      size: 13464
      nfiles: 5
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 65c042b543560f281b8b0adf061f9a81
      size: 1712512
  precompute_matrices@ddos-knn-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=bz2 
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 00a883b768f0099812d2829f5df1ee91.dir
      size: 13016
      nfiles: 5
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: e4c362f1a25897fb4a1e33851f31d478
      size: 3260247
  precompute_matrices@ddos-knn-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=zstd 
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 719bd5ca24c599dff8ff61be80535579.dir
      size: 13045
      nfiles: 5
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: b04a70ac83d9066e88d827d276223482
      size: 3140497
  precompute_matrices@ddos-knn-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=levenshtein 
      ++model.init.distance_matrix=ddos/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 6d97e5b186030c6a66b2db769cd6562f.dir
      size: 13197
      nfiles: 5
    - path: ddos/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 9e4f2411f322c896fe13b85751519fa1
      size: 1641519
  precompute_matrices@ddos-knn-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=ratio 
      ++model.init.distance_matrix=ddos/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: e3c88b0f3c9411770b5493ad7f9ae83f.dir
      size: 13470
      nfiles: 5
    - path: ddos/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 161879c9ce8d2ccc5abc2f1b1a92bbcd
      size: 6219570
  precompute_matrices@ddos-knn-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=hamming 
      ++model.init.distance_matrix=ddos/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: e57b1967a1e1b4122610bf6395f08f3e.dir
      size: 13106
      nfiles: 5
    - path: ddos/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 68de52551ad9779287f75a4d987f98fd
      size: 1672953
  precompute_matrices@ddos-knn-jaro-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro 
      ++model.init.distance_matrix=ddos/models/jaro/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a9aca527a847b870d652358bdfad679e.dir
      size: 13045
      nfiles: 5
    - path: ddos/models/jaro/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 9a46ce14be2915165a9b822f1358d5a4
      size: 7230176
  precompute_matrices@ddos-knn-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=jaro_winkler 
      ++model.init.distance_matrix=ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: cde51f6603571a96d3dbc405bc242791.dir
      size: 13218
      nfiles: 5
    - path: ddos/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: c6f1f89f32b23ab74435119742bc178c
      size: 7222296
  precompute_matrices@ddos-knn-seqratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=gzip_knn model=gzip_knn
      ++model.init.condensing_method=None ++model.init.m=1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=seqratio 
      ++model.init.distance_matrix=ddos/models/seqratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=ddos
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_ddos hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: ddos/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a0574a47d4bd93c9e61393db14736858.dir
      size: 13132
      nfiles: 5
    - path: ddos/models/seqratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: bc85276038c43e7de01bde04a0df27e0
      size: 6164894
  precompute_matrices@kdd_nsl-knn-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: cdc7b9323a158f13d111dd78208285ce.dir
      size: 13128
      nfiles: 5
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
  precompute_matrices@kdd_nsl-knn-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=lzma
      ++model.init.distance_matrix=kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 61d848ddd58eb1a4385087740ec4dcf8.dir
      size: 13124
      nfiles: 5
    - path: kdd_nsl/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 6f26f197e3bb145f01e5b855358317e3
      size: 942302
  precompute_matrices@kdd_nsl-knn-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.distance_matrix=kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 22bd944bd00e1724974651b6111a25eb.dir
      size: 13099
      nfiles: 5
    - path: kdd_nsl/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: fe86c4d069369b3aa8d32a8ae84d2eda
      size: 1582137
  precompute_matrices@kdd_nsl-knn-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=zstd
      ++model.init.distance_matrix=kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: dbaa9a024c8570e62061eba08b11f5b3.dir
      size: 13122
      nfiles: 5
    - path: kdd_nsl/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f40b5c9b852c8d220586e5eeb3161d01
      size: 1794085
  precompute_matrices@kdd_nsl-knn-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.distance_matrix=kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: d176e658e52d785946be9972984a2261.dir
      size: 13276
      nfiles: 5
    - path: kdd_nsl/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 748cf9b1cfcecedee9e7cbdf54f1af97
      size: 1067164
  precompute_matrices@kdd_nsl-knn-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.distance_matrix=kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: b01bbc78db4904a3ac46d6438fe2730a.dir
      size: 13149
      nfiles: 5
    - path: kdd_nsl/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 02b9d072b7848e159ab510d410dae0dc
      size: 1872997
  precompute_matrices@kdd_nsl-knn-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.distance_matrix=kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 2e3eb58afc8eb5d4f2338f6013cbdc1c.dir
      size: 13187
      nfiles: 5
    - path: kdd_nsl/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2e23e6ba3459ad938f1fc82a67e130e8
      size: 1472053
  precompute_matrices@kdd_nsl-knn-jaro-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro
      ++model.init.distance_matrix=kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 4ff8300727c2419d790cecb0fe3d2108.dir
      size: 13120
      nfiles: 5
    - path: kdd_nsl/models/jaro/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4840e682905bcc78805bc7128de28224
      size: 6223899
  precompute_matrices@kdd_nsl-knn-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro_winkler
      ++model.init.distance_matrix=kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: b7b850988a5f8566209e804957aaa6a4.dir
      size: 13292
      nfiles: 5
    - path: kdd_nsl/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 8d46e6211b4eaccee84c839d798e6d7f
      size: 6408770
  precompute_matrices@kdd_nsl-knn-seqratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=seqratio
      ++model.init.distance_matrix=kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=kdd_nsl
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_kdd_nsl hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: kdd_nsl/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: ed96ac40926e729cb10f7202ea84d2f1.dir
      size: 13213
      nfiles: 5
    - path: kdd_nsl/models/seqratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2dbe1232ce35019ee2800a12b77d2112
      size: 1815230
  precompute_matrices@truthseeker-knn-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 148f01a47efbf3460d45ff5eaadd102c.dir
      size: 18386
      nfiles: 5
    - path: truthseeker/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 4e046a571d582479317193a032037423
      size: 2437346
  precompute_matrices@truthseeker-knn-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=lzma
      ++model.init.distance_matrix=truthseeker/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: dca622ee27e71060237523f7e283e510.dir
      size: 16014
      nfiles: 5
    - path: truthseeker/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 686c2395a610053cea370803e97808b0
      size: 1431702
  precompute_matrices@truthseeker-knn-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.distance_matrix=truthseeker/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 093217f1511346078f64e5cabf32f4f4.dir
      size: 15983
      nfiles: 5
    - path: truthseeker/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 582e678472c73f21a27236bef047eeee
      size: 3002168
  precompute_matrices@truthseeker-knn-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=zstd
      ++model.init.distance_matrix=truthseeker/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a4bd5f6e7b96f08e5000cbf8af9c693d.dir
      size: 16014
      nfiles: 5
    - path: truthseeker/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 00121b15829308dc87d40cda7a4d716f
      size: 2450064
  precompute_matrices@truthseeker-knn-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.distance_matrix=truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 66642e0fa79e96660e04ace3df9de3e7.dir
      size: 16174
      nfiles: 5
    - path: truthseeker/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 20e4bbbfcfff11c52875362f7079d75c
      size: 1424254
  precompute_matrices@truthseeker-knn-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.distance_matrix=truthseeker/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: e99ff03f8308f7028db9db48be1daf12.dir
      size: 16034
      nfiles: 5
    - path: truthseeker/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 18f89d4a49870a4d2a97c37633b08ee7
      size: 4525175
  precompute_matrices@truthseeker-knn-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.distance_matrix=truthseeker/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 618c63ff26582fdf97d373eed9d6d810.dir
      size: 16077
      nfiles: 5
    - path: truthseeker/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: a269e6013f790cfaf69d5c1104cce656
      size: 1416961
  precompute_matrices@truthseeker-knn-jaro-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro
      ++model.init.distance_matrix=truthseeker/models/jaro/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: c7a8c19dfc7588fde359e294cdc92dd0.dir
      size: 16007
      nfiles: 5
    - path: truthseeker/models/jaro/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 7a7f9a0e31e4cbbe69bb9fb55eca3567
      size: 7193211
  precompute_matrices@truthseeker-knn-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro_winkler
      ++model.init.distance_matrix=truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        truthseeker/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: dd9ac5dfe15a717879b0e619a9675099.dir
      size: 16195
      nfiles: 5
    - path: truthseeker/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f242434e5d5a57d93d248c20856e1ddd
      size: 7229328
  precompute_matrices@truthseeker-knn-seqratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=truthseeker dataset=truthseeker
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=seqratio
      ++model.init.distance_matrix=truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=truthseeker
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_truthseeker hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: truthseeker/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: ff9276d7e485888a91f2d11d4e84ac6c.dir
      size: 16112
      nfiles: 5
    - path: truthseeker/models/seqratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 33e33cabf8bf65e9b2c42c3a2f391de5
      size: 4514701
  precompute_matrices@sms_spam-knn-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.distance_matrix=sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/gzip/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: b2de4cfc22d5d3acedaaf09a402228b8.dir
      size: 18723
      nfiles: 5
    - path: sms_spam/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: ae5656a1e963ef31f4a109fa59159fb2
      size: 2358962
  precompute_matrices@sms_spam-knn-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=lzma
      ++model.init.distance_matrix=sms_spam/models/lzma/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/lzma/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: a9410531a6d29e16c9d68af96ffa8248.dir
      size: 16355
      nfiles: 5
    - path: sms_spam/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: c5db7d6724520d3f5807932acf433286
      size: 1296843
  precompute_matrices@sms_spam-knn-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.distance_matrix=sms_spam/models/bz2/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/bz2/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 78278a39e87770b3d922f940aa38c4c4.dir
      size: 16332
      nfiles: 5
    - path: sms_spam/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 2491cd346921e052098acb28c6231f91
      size: 2534166
  precompute_matrices@sms_spam-knn-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=zstd
      ++model.init.distance_matrix=sms_spam/models/zstd/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/zstd/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: dbc3348ba17690edb5093f4d67501445.dir
      size: 16356
      nfiles: 5
    - path: sms_spam/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 548bab2acc7b23fccbdd89d54d49d44c
      size: 2344400
  precompute_matrices@sms_spam-knn-levenshtein-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=levenshtein
      ++model.init.distance_matrix=sms_spam/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/levenshtein/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: d354539285cb15d11365562e21dd8867.dir
      size: 16515
      nfiles: 5
    - path: sms_spam/models/levenshtein/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 405a8edb15bba835befd725e2c8389fb
      size: 1338309
  precompute_matrices@sms_spam-knn-ratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=ratio
      ++model.init.distance_matrix=sms_spam/models/ratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/ratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: f11759f4399b221932de84b44aaaaf06.dir
      size: 16368
      nfiles: 5
    - path: sms_spam/models/ratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 391570ee9bbb1fd6db9b742d788b46d8
      size: 3268326
  precompute_matrices@sms_spam-knn-hamming-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=hamming
      ++model.init.distance_matrix=sms_spam/models/hamming/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/hamming/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: c22fc25478d2d12ded3d9e06202b564e.dir
      size: 16422
      nfiles: 5
    - path: sms_spam/models/hamming/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: d3f52d89abcd6b7576a19c283e5f9333
      size: 1298847
  precompute_matrices@sms_spam-knn-jaro-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro
      ++model.init.distance_matrix=sms_spam/models/jaro/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/jaro/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 56d3bc29e2dd20a60ed8881bcaa28eae.dir
      size: 16356
      nfiles: 5
    - path: sms_spam/models/jaro/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 18ad56c9addcae403527f2f7cd46ee01
      size: 6534977
  precompute_matrices@sms_spam-knn-jaro_winkler-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=jaro_winkler
      ++model.init.distance_matrix=sms_spam/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        sms_spam/logs/precompute/knn/jaro_winkler/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: 0ae682092ade8247502d0870ab7fe94d.dir
      size: 16542
      nfiles: 5
    - path: sms_spam/models/jaro_winkler/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: d09df7f69acac3845408df08a40221ea
      size: 6536453
  precompute_matrices@sms_spam-knn-seqratio-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam dataset=sms_spam
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=gzip_knn model=gzip_knn ++model.init.condensing_method=None ++model.init.m=1
      ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=seqratio
      ++model.init.distance_matrix=sms_spam/models/seqratio/symmetry_true/modified_true/1000-400-0.npz  files.directory=sms_spam
      files.reports=reports/condense/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=1 hydra.sweeper.n_jobs=1 
      hydra.sweep.dir=sms_spam/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.study_name=condense_knn_sms_spam hydra.launcher.n_jobs=-1 --config-name
      condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/condense/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 24
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}
            storage: sqlite:///optuna.db
            n_jobs: 2
            n_trials: 2
            direction: ${direction}
            max_failure_rate: 1.0
            params:
              ++data.sample.train_size: 1000
              ++data.sample.random_state: int(interval(10000, 20000))
              model.init.m: tag(log, interval(.01, .1))
              model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: sms_spam/logs/precompute/knn/seqratio/symmetry_true/modified_true/1000-400-0/
      hash: md5
      md5: c21d197ffd9a49bc987b03f031b05e12.dir
      size: 16452
      nfiles: 5
    - path: sms_spam/models/seqratio/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: c52354119865afaaa18113d50daa38a9
      size: 3217750
  condense@ddos-knn-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  condense@ddos-knn-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  condense@ddos-knn-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.3 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  condense@ddos-knn-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.2 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  condense@ddos-knn-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.1 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  condense@ddos-svc-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 09f5a34d43d61c9ef1c738dd9203e223
      size: 205
  condense@ddos-svc-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.5 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 09f5a34d43d61c9ef1c738dd9203e223
      size: 205
  condense@ddos-svc-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.3 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 09f5a34d43d61c9ef1c738dd9203e223
      size: 205
  condense@ddos-svc-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.2 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 09f5a34d43d61c9ef1c738dd9203e223
      size: 205
  condense@ddos-svc-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=svc model=gzip_svc
      ++model.init.m=0.1 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_ddos 
      files.reports=reports/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 09f5a34d43d61c9ef1c738dd9203e223
      size: 205
  condense@ddos-logistic-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: c7c8972f3e491ea489c11591d80830d2
      size: 256
  condense@ddos-logistic-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.5 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: c7c8972f3e491ea489c11591d80830d2
      size: 256
  condense@ddos-logistic-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.3 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: c7c8972f3e491ea489c11591d80830d2
      size: 256
  condense@ddos-logistic-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.2 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: c7c8972f3e491ea489c11591d80830d2
      size: 256
  condense@ddos-logistic-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=logistic model=gzip_logistic
      ++model.init.m=0.1 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=gzip
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_ddos 
      files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: ddos/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 3673a8f222b9ed47a3eaab7e36704f7f
      size: 2941034
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: c7c8972f3e491ea489c11591d80830d2
      size: 256
  condense@kdd_nsl-knn-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5ad9781184b233000fa6cedde4253ba0
      size: 115
  condense@kdd_nsl-knn-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5ad9781184b233000fa6cedde4253ba0
      size: 115
  condense@kdd_nsl-knn-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5ad9781184b233000fa6cedde4253ba0
      size: 115
  condense@kdd_nsl-knn-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5ad9781184b233000fa6cedde4253ba0
      size: 115
  condense@kdd_nsl-knn-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=knn model=gzip_knn ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_kdd_nsl 
      files.reports=reports/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/knn/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 5ad9781184b233000fa6cedde4253ba0
      size: 115
  condense@kdd_nsl-svc-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: f36386b96cef036df25261b988cf028b
      size: 207
  condense@kdd_nsl-svc-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: f36386b96cef036df25261b988cf028b
      size: 207
  condense@kdd_nsl-svc-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: f36386b96cef036df25261b988cf028b
      size: 207
  condense@kdd_nsl-svc-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: f36386b96cef036df25261b988cf028b
      size: 207
  condense@kdd_nsl-svc-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=svc model=gzip_svc ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_svc_kdd_nsl 
      files.reports=reports/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_svc --multirun
    deps:
    - path: conf/condense_svc.yaml
      hash: md5
      md5: 877d20bf74c7870bf108434f70d41d2e
      size: 1953
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: false
              n_startup_trials: 10
              n_ei_candidates: 256
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_condense
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.kernel: rbf,precomputed
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/svc/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: f36386b96cef036df25261b988cf028b
      size: 207
  condense@kdd_nsl-logistic-0.9-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.9 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: fb100d0a63b4eda8af8cee88b5400df5
      size: 256
  condense@kdd_nsl-logistic-0.5-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.5 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: fb100d0a63b4eda8af8cee88b5400df5
      size: 256
  condense@kdd_nsl-logistic-0.3-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.3 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.3/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: fb100d0a63b4eda8af8cee88b5400df5
      size: 256
  condense@kdd_nsl-logistic-0.2-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.2 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.2/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: fb100d0a63b4eda8af8cee88b5400df5
      size: 256
  condense@kdd_nsl-logistic-0.1-gzip-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl dataset=kdd_nsl
      data.sample.train_size=1000 data.sample.test_size=400 data.sample.random_state=0
      model_name=logistic model=gzip_logistic ++model.init.m=0.1 ++model.init.symmetric=true
      ++model.init.modified=true ++model.init.metric=gzip ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn
      files.directory=kdd_nsl 
      ++model.init.distance_matrix=kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_logistic_kdd_nsl 
      files.reports=reports/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_logistic --multirun
    deps:
    - path: conf/condense_logistic.yaml
      hash: md5
      md5: a64395c428fab39ab8a24d3e900916ca
      size: 2011
    - path: kdd_nsl/models/gzip/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: f0a4176819e998f8acd51203badb05f0
      size: 1695876
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ???
            storage: sqlite:///optuna.db
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.max_iter: 1000
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        kdd_nsl/logs/condense/logistic/gzip/0.1/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: fb100d0a63b4eda8af8cee88b5400df5
      size: 256
  condense@ddos-knn-0.9-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=lzma
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/lzma/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/lzma/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 65c042b543560f281b8b0adf061f9a81
      size: 1712512
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/lzma/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  condense@ddos-knn-0.9-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/bz2/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/bz2/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: e4c362f1a25897fb4a1e33851f31d478
      size: 3260247
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/bz2/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  condense@ddos-knn-0.9-zstd-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.9 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=zstd
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/zstd/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/zstd/0.9/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/zstd/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: b04a70ac83d9066e88d827d276223482
      size: 3140497
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/zstd/0.9/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  condense@ddos-knn-0.5-lzma-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=lzma
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/lzma/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/lzma/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/lzma/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: 65c042b543560f281b8b0adf061f9a81
      size: 1712512
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/lzma/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
  metric_space_check:
    cmd: python metric_space_check.py --max_alphabet_size 52 --max_string_size 144
      --sig_figs 10 --data random --samples 1000 --folder metric_space_check/plots
      --log_file metric_space_check.log --results_file results.csv --plot_file results.pdf
    deps:
    - path: combined/plots/
      hash: md5
      md5: 87376514169fe39bbf4c836b2ae35adf.dir
      size: 47720536
      nfiles: 21
    outs:
    - path: metric_space_check/metric_space_check.log
      hash: md5
      md5: d41d8cd98f00b204e9800998ecf8427e
      size: 0
    - path: metric_space_check/results.csv
      hash: md5
      md5: 85816f7f37a364d202843df945a6f4da
      size: 151039
    - path: metric_space_check/results.pdf
      hash: md5
      md5: b5d99dd135fcb8c3d7a5b7f795f77f86
      size: 26871
  copy_metric_space_check:
    cmd: cp -r metric_space_check/*pdf ~/Gzip-KNN/images/ && cp -r metric_space_check/*csv
      ~/Gzip-KNN/data/
    deps:
    - path: metric_space_check/
      hash: md5
      md5: 24764114388589678270dc5f9427b117.dir
      size: 177910
      nfiles: 3
  condense@ddos-knn-0.5-bz2-true-0-1000-400-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos dataset=ddos data.sample.train_size=1000
      data.sample.test_size=400 data.sample.random_state=0 model_name=knn model=gzip_knn
      ++model.init.m=0.5 ++model.init.symmetric=true ++model.init.modified=true ++model.init.metric=bz2
      ++model.init.condensing_method=medoid,sum,svc,random,hardness,nearmiss,knn files.directory=ddos
      ++model.init.distance_matrix=ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hydra.sweeper.study_name=condense_knn_ddos 
      files.reports=reports/condense/knn/bz2/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.sweeper.n_trials=128 hydra.sweeper.n_jobs=8 
      hydra.sweep.dir=ddos/logs/condense/knn/bz2/0.5/symmetry_true/modified_true/1000-400-0/
      hydra.launcher.n_jobs=-1 --config-name condense_knn --multirun
    deps:
    - path: conf/condense_knn.yaml
      hash: md5
      md5: 8dd7ea55087d559a415fc631c65062f0
      size: 1753
    - path: ddos/models/bz2/symmetry_true/modified_true/1000-400-0.npz
      hash: md5
      md5: e4c362f1a25897fb4a1e33851f31d478
      size: 3260247
    - path: params.yaml
      hash: md5
      md5: 039d42409bc7343a6b8b07b996ec2526
      size: 1086
    params:
      conf/condense_knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              seed: 123
              consider_prior: true
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 32
              n_ei_candidates: 32
              multivariate: true
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///optuna.db
            study_name: ???
            n_trials: ${oc.env:DECKARD_TRIALS, 128}
            n_jobs: ${oc.env:DECKARD_JOBS, 8}
            max_failure_rate: 1.0
            params:
              model.init.k: 3
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: -1
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        ddos/logs/condense/knn/bz2/0.5/symmetry_true/modified_true/1000-400-0/optimization_results.yaml
      hash: md5
      md5: 9b3c614c5610585a10678c874efb5de0
      size: 76
