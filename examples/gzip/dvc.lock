schema: '2.0'
stages:
  parse_params:
    cmd: python -m deckard.layers.parse  --config_file knn
    deps:
    - path: conf/data
      hash: md5
      md5: d405445aa6668eb8895082ecc2b863c5.dir
      size: 2452
      nfiles: 9
    - path: conf/files
      hash: md5
      md5: 175540655649901489a4254f6e136ce5.dir
      size: 346
      nfiles: 1
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: conf/model
      hash: md5
      md5: 9c35472b0e7762870606ecf055221520.dir
      size: 1213
      nfiles: 4
    - path: conf/scorers
      hash: md5
      md5: e3e4a85af427799284ed28f899af4a90.dir
      size: 376
      nfiles: 2
    outs:
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
  data:
    cmd: python data_prep.py
    deps:
    - path: data_prep.py
      hash: md5
      md5: 18244c921ed2d7cbf25b8362b3ca33aa
      size: 5146
    outs:
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
  train:
    cmd: python -m deckard.layers.experiment train
    deps:
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    - path: raw_data/
      hash: md5
      md5: 33d46673e0631bef98be9e8991ed1ed1.dir
      size: 50328647
      nfiles: 8
    params:
      params.yaml:
        data:
          drop:
          - id
          name: raw_data/kdd_nsl_undersampled_5000.csv
          sample:
            random_state: 0
            stratify: true
            test_size: 100
            train_size: 100
          target: label
        dataset: kdd_nsl
        device_id: cpu
        files:
          data_dir: data
          data_file: kdd_nsl-0-100-100
          data_type: .pkl
          directory: output/kdd_nsl
          model_dir: models
          model_file: default
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          reports: reports
          score_dict_file: score_dict.json
        model:
          data:
            drop:
            - id
            name: raw_data/kdd_nsl_undersampled_5000.csv
            sample:
              random_state: 0
              stratify: true
              test_size: 100
              train_size: 100
            target: label
          init:
            condensing_method: None
            distance_matrix: output/kdd_nsl/models/gzip/False/100-100-0.npz
            k: 1
            m: -1
            metric: gzip
            modified: false
            name: gzip_classifier.GzipKNN
            symmetric: false
            transform: None
          library: sklearn
        model_name: knn
        scorers:
          accuracy:
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/kdd_nsl/data/kdd_nsl-0-100-100.pkl/
      hash: md5
      md5: e4ba3bf8bf9a5602aa0b3df493f6a438
      size: 39291
    - path: output/kdd_nsl/reports/train/default/predictions.json
      hash: md5
      md5: 01b717fd4735f5bdc3cf2f9f77fd92ec
      size: 1608
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f550726ddc7ba55cafea94f8b2f67b2a
      size: 476
  grid_search@10-ddos-knn-true-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/10/symmetry_true/modified_true/transforms/
      files.directory=output/ddos files.reports=reports/knn/10/symmetry_true/modified_true/transforms/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 5c31296af4d0010165a4b8fca5acaebf
      size: 2055
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 7c3a5805cfe40b38dd0ddae9cfcae8f2
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/10/symmetry_true/modified_true/transforms/
      hash: md5
      md5: 7f4bc99f129b5bbfc8c16b7576840733.dir
      size: 1386610
      nfiles: 513
    - path: output/ddos/reports/knn/10/symmetry_true/modified_true/transforms/
      hash: md5
      md5: 7d36cd6514f5b7002570179d80b05264.dir
      size: 451968
      nfiles: 383
  grid_search@10-ddos-knn-false-true:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/10/symmetry_true/modified_false/transforms/
      files.directory=output/ddos files.reports=reports/knn/10/symmetry_true/modified_false/transforms/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 5c31296af4d0010165a4b8fca5acaebf
      size: 2055
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 7c3a5805cfe40b38dd0ddae9cfcae8f2
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/10/symmetry_true/modified_false/transforms/
      hash: md5
      md5: 89124123c8d416b73b668da27ff02977.dir
      size: 1455935
      nfiles: 514
    - path: output/ddos/reports/knn/10/symmetry_true/modified_false/transforms/
      hash: md5
      md5: 00225b29b4940d3d254991bd351ff43f.dir
      size: 437861
      nfiles: 372
  grid_search@10-ddos-knn:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=True ++model.init.modified=True,False
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/10/transforms/
      files.directory=output/ddos files.reports=reports/knn/10/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 5c31296af4d0010165a4b8fca5acaebf
      size: 2055
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/10/transforms/
      hash: md5
      md5: 6dae99fd20aab0a6fef24af137ad490e.dir
      size: 1356168
      nfiles: 513
    - path: output/ddos/reports/knn/10/transforms/
      hash: md5
      md5: ac4e6c81198e61ddd17704afe8e8788f.dir
      size: 448273
      nfiles: 381
  grid_search@10-ddos-logistic:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=True
      ++model.init.modified=True,False hydra.sweeper.study_name=logistic_ddos hydra.sweep.dir=output/ddos/logs/logistic/10/transforms/
      files.directory=output/ddos files.reports=reports/logistic/10/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: 269e73972914ae2bc2626a5f7c3fb2b4
      size: 2243
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              ++model.init.kernel: None,rbf,poly,linear
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/10/transforms/
      hash: md5
      md5: 46f7a34eaa14569150b25e64bb3e9944.dir
      size: 1482827
      nfiles: 513
    - path: output/ddos/reports/logistic/10/transforms/
      hash: md5
      md5: 645c346db44c578790ed4350145d7f88.dir
      size: 464829
      nfiles: 384
  grid_search@10-ddos-svc:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=True ++model.init.modified=True,False
      hydra.sweeper.study_name=svc_ddos hydra.sweep.dir=output/ddos/logs/svc/10/transforms/
      files.directory=output/ddos files.reports=reports/svc/10/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 7d0e9970953e43401719eba311456928
      size: 2086
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/svc/10/transforms/
      hash: md5
      md5: b2f09a06bbe04c65bb7e0d41b3287ba5.dir
      size: 1373618
      nfiles: 513
    - path: output/ddos/reports/svc/10/transforms/
      hash: md5
      md5: bf9cada7f72c8913a5df962ad4864feb.dir
      size: 449783
      nfiles: 382
  grid_search@10-kdd_nsl-knn:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl ++dataset=kdd_nsl
      ++data.sample.train_size=10 data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=True
      ++model.init.modified=True,False hydra.sweeper.study_name=knn_kdd_nsl hydra.sweep.dir=output/kdd_nsl/logs/knn/10/transforms/
      files.directory=output/kdd_nsl files.reports=reports/knn/10/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 5c31296af4d0010165a4b8fca5acaebf
      size: 2055
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/knn/10/transforms/
      hash: md5
      md5: a06a2153aa17b46a40129cb0cf9c54c4.dir
      size: 1358488
      nfiles: 513
    - path: output/kdd_nsl/reports/knn/10/transforms/
      hash: md5
      md5: dc51ddf5175153ce41eb5ebc1b10b005.dir
      size: 438022
      nfiles: 381
  grid_search@10-kdd_nsl-logistic:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl ++dataset=kdd_nsl
      ++data.sample.train_size=10 data.sample.test_size=100 ++model_name=logistic
      ++model.init.symmetric=True ++model.init.modified=True,False hydra.sweeper.study_name=logistic_kdd_nsl
      hydra.sweep.dir=output/kdd_nsl/logs/logistic/10/transforms/ files.directory=output/kdd_nsl
      files.reports=reports/logistic/10/transforms/ hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice,
      tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: 269e73972914ae2bc2626a5f7c3fb2b4
      size: 2243
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              ++model.init.kernel: None,rbf,poly,linear
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/logistic/10/transforms/
      hash: md5
      md5: 21089caf3c6e13718511c1cf5116d93e.dir
      size: 1485162
      nfiles: 513
    - path: output/kdd_nsl/reports/logistic/10/transforms/
      hash: md5
      md5: 982228f12bf56f2065d1a90bc63a615c.dir
      size: 454866
      nfiles: 384
  grid_search@10-kdd_nsl-svc:
    cmd: python -m deckard.layers.optimise stage=train data=kdd_nsl ++dataset=kdd_nsl
      ++data.sample.train_size=10 data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=True
      ++model.init.modified=True,False hydra.sweeper.study_name=svc_kdd_nsl hydra.sweep.dir=output/kdd_nsl/logs/svc/10/transforms/
      files.directory=output/kdd_nsl files.reports=reports/svc/10/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 7d0e9970953e43401719eba311456928
      size: 2086
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/kdd_nsl/logs/svc/10/transforms/
      hash: md5
      md5: ddbc2b9292f63fc99f89e6fd97546ee3.dir
      size: 1376752
      nfiles: 513
    - path: output/kdd_nsl/reports/svc/10/transforms/
      hash: md5
      md5: 68490900d2e49e1cda7be2e1b25cfb72.dir
      size: 439669
      nfiles: 383
  grid_search@10-sms_spam-knn:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam ++dataset=sms_spam
      ++data.sample.train_size=10 data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=True
      ++model.init.modified=True,False hydra.sweeper.study_name=knn_sms_spam hydra.sweep.dir=output/sms_spam/logs/knn/10/transforms/
      files.directory=output/sms_spam files.reports=reports/knn/10/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 5c31296af4d0010165a4b8fca5acaebf
      size: 2055
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 128
            n_jobs: 8
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/knn/10/transforms/
      hash: md5
      md5: e035b85eb67096a76e89608bb58bb07e.dir
      size: 1362437
      nfiles: 513
    - path: output/sms_spam/reports/knn/10/transforms/
      hash: md5
      md5: 2809fc8e6f85e2891a9984629176828a.dir
      size: 439050
      nfiles: 382
  grid_search@10-sms_spam-logistic:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam ++dataset=sms_spam
      ++data.sample.train_size=10 data.sample.test_size=100 ++model_name=logistic
      ++model.init.symmetric=True ++model.init.modified=True,False hydra.sweeper.study_name=logistic_sms_spam
      hydra.sweep.dir=output/sms_spam/logs/logistic/10/transforms/ files.directory=output/sms_spam
      files.reports=reports/logistic/10/transforms/ hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice,
      tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: 269e73972914ae2bc2626a5f7c3fb2b4
      size: 2243
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              ++model.init.kernel: None,rbf,poly,linear
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/logistic/10/transforms/
      hash: md5
      md5: 21df1501fae28643402047ca6509b89c.dir
      size: 1594068
      nfiles: 514
    - path: output/sms_spam/reports/logistic/10/transforms/
      hash: md5
      md5: 3753f32b235bf2dbac5a207fb1cf0054.dir
      size: 455725
      nfiles: 384
  grid_search@10-sms_spam-svc:
    cmd: python -m deckard.layers.optimise stage=train data=sms_spam ++dataset=sms_spam
      ++data.sample.train_size=10 data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=True
      ++model.init.modified=True,False hydra.sweeper.study_name=svc_sms_spam hydra.sweep.dir=output/sms_spam/logs/svc/10/transforms/
      files.directory=output/sms_spam files.reports=reports/svc/10/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,log,square,exp,exp_neg,sigmoid ++model.init.condensing_method=None
      ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: 7d0e9970953e43401719eba311456928
      size: 2086
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: 988028c45747aae31c06082880c6c369
      size: 477
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 128
            n_jobs: 8
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: None,abs,log,square,exp,exp_neg,sigmoid
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/sms_spam/logs/svc/10/transforms/
      hash: md5
      md5: 5d2340cca8a28333e227b5aafec7bf5c.dir
      size: 1379015
      nfiles: 513
    - path: output/sms_spam/reports/svc/10/transforms/
      hash: md5
      md5: f431d596c8ac41bb36e5d5a58107c096.dir
      size: 440179
      nfiles: 382
  grid_search@ddos-knn-10:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=True ++model.init.modified=True,False
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/10/transforms/
      files.directory=output/ddos files.reports=reports/knn/10/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 4bbacc3bba93db7a579a060f386ecd5b
      size: 2142
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: b2058466345308f138bfe472f8a6863c
      size: 476
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/10/transforms/
      hash: md5
      md5: 1df4eda3885f063ae66ba0f0047ae57c.dir
      size: 2748536
      nfiles: 1025
    - path: output/ddos/reports/knn/10/transforms/
      hash: md5
      md5: 13035a9e2af0654e3800056a0cae82ad.dir
      size: 873899
      nfiles: 762
  grid_search@ddos-knn-20:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=True ++model.init.modified=True,False
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/20/transforms/
      files.directory=output/ddos files.reports=reports/knn/20/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 4bbacc3bba93db7a579a060f386ecd5b
      size: 2142
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: b2058466345308f138bfe472f8a6863c
      size: 476
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/20/transforms/
      hash: md5
      md5: b5083190222947621887c41e111afedb.dir
      size: 2873193
      nfiles: 1026
    - path: output/ddos/reports/knn/20/transforms/
      hash: md5
      md5: d709b448b0fe899ef6bdbdb3f856d5de.dir
      size: 809494
      nfiles: 705
  grid_search@ddos-knn-35:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=35
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=True ++model.init.modified=True,False
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/35/transforms/
      files.directory=output/ddos files.reports=reports/knn/35/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 4bbacc3bba93db7a579a060f386ecd5b
      size: 2142
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: b2058466345308f138bfe472f8a6863c
      size: 476
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/35/transforms/
      hash: md5
      md5: d98eee2a579f4a20c300202011274f19.dir
      size: 2928239
      nfiles: 1026
    - path: output/ddos/reports/knn/35/transforms/
      hash: md5
      md5: e022153c8c6b396329b6dd9f84bbd2cd.dir
      size: 799750
      nfiles: 696
  grid_search@ddos-knn-60:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=60
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=True ++model.init.modified=True,False
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/60/transforms/
      files.directory=output/ddos files.reports=reports/knn/60/transforms/ hydra.launcher.n_jobs=-1
      ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))" 
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  ++model.init.kernel=None
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: 4bbacc3bba93db7a579a060f386ecd5b
      size: 2142
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: b2058466345308f138bfe472f8a6863c
      size: 476
    - path: params.yaml
      hash: md5
      md5: 69c7eac8bfa7e64441b9def7ef3cfba5
      size: 1203
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.kernel: None,rbf,poly,linear
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/60/transforms/
      hash: md5
      md5: 63a8ff5b8cc78637a0b8e0be0ebe31f9.dir
      size: 2995343
      nfiles: 1026
    - path: output/ddos/reports/knn/60/transforms/
      hash: md5
      md5: 2b27ee996fe7933adc1febc4986c35fa.dir
      size: 858374
      nfiles: 747
  grid_search@ddos-knn-10-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      ++algorithm=Vanilla data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=false
      ++model.init.modified=false hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/10/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/knn/10/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio  
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: 
        output/ddos/logs/knn/10/transforms/symmetric_false/modified_false/optimization_results.yaml
      hash: md5
      md5: ac9d559247693f9bdf6b712b3ef65180
      size: 187
    - path: output/ddos/reports/knn/10/transforms/symmetric_false/modified_false/
      hash: md5
      md5: ebaffbf41cba3ec9e2a52c9534cb0f56.dir
      size: 826970
      nfiles: 721
  grid_search@ddos-knn-10-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/10/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/knn/10/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/10/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 37a54620378c3f127564e8c8a3e05ff0.dir
      size: 4127931
      nfiles: 1025
    - path: output/ddos/reports/knn/10/transforms/symmetric_true/modified_false/
      hash: md5
      md5: ff32219bd65f317ca83ce807f1b92eef.dir
      size: 2404552
      nfiles: 2103
  grid_search@ddos-knn-10-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/10/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/knn/10/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/10/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 8f40601fb2d999c2284a5adb40aa25e7.dir
      size: 4117008
      nfiles: 1025
    - path: output/ddos/reports/knn/10/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 0c09381309db1649b384ae36bac1e5d0.dir
      size: 2347234
      nfiles: 2053
  grid_search@ddos-knn-20-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/20/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/knn/20/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/20/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 0d93b545a4403dc2529847a6f5b22e8c.dir
      size: 4138580
      nfiles: 1025
    - path: output/ddos/reports/knn/20/transforms/symmetric_false/modified_false/
      hash: md5
      md5: eb98cf698e5df93b68119d5e6540d32a.dir
      size: 2481634
      nfiles: 2168
  grid_search@ddos-knn-20-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/20/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/knn/20/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/20/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 6e60b1befbaf1d71a8c0ec60cbcc89cf.dir
      size: 4127845
      nfiles: 1025
    - path: output/ddos/reports/knn/20/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 7bef1aa999f132df69c1fb7c9250000d.dir
      size: 2428917
      nfiles: 2124
  grid_search@ddos-knn-20-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/20/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/knn/20/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/20/transforms/symmetric_true/modified_true/
      hash: md5
      md5: b6cd377a50a2cdbaa660652fd0d68dd1.dir
      size: 4128116
      nfiles: 1025
    - path: output/ddos/reports/knn/20/transforms/symmetric_true/modified_true/
      hash: md5
      md5: a14ffde16c61ed7bbf30d1fe0e86c019.dir
      size: 2434311
      nfiles: 2130
  grid_search@ddos-knn-35-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=35
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/35/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/knn/35/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/35/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 497e3ce1b953ec881ac5f9888788fbc8.dir
      size: 4142947
      nfiles: 1025
    - path: output/ddos/reports/knn/35/transforms/symmetric_false/modified_false/
      hash: md5
      md5: a16dfde8b7ab8e46ce6c396f144a6260.dir
      size: 2452030
      nfiles: 2139
  grid_search@ddos-knn-35-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=35
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/35/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/knn/35/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/35/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 006d958cf3f5b409cd9465e2578b5b76.dir
      size: 3832512
      nfiles: 1025
    - path: output/ddos/reports/knn/35/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 5e3b6b9126d4d42e1aebc752ad3ad0f9.dir
      size: 2076003
      nfiles: 1812
  grid_search@ddos-knn-35-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=35
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/35/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/knn/35/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/35/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 7586f61f0b6a0b2cead3cb04edd73fbb.dir
      size: 3443541
      nfiles: 1025
    - path: output/ddos/reports/knn/35/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 5c07d468d6a991ccd86dd3e1fcc7ecfb.dir
      size: 1642008
      nfiles: 1434
  grid_search@ddos-knn-60-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=60
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/60/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/knn/60/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f550726ddc7ba55cafea94f8b2f67b2a
      size: 476
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/60/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 7e87021236fb5418ab157a5e153bc61e.dir
      size: 2760089
      nfiles: 1025
    - path: output/ddos/reports/knn/60/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 03666cdc5156ee1ba6427226dbcf4721.dir
      size: 848953
      nfiles: 741
  grid_search@ddos-knn-60-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=60
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/60/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/knn/60/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f550726ddc7ba55cafea94f8b2f67b2a
      size: 476
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/60/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 6dcc4a9788ea4e0483e66eacdfe619a1.dir
      size: 2757296
      nfiles: 1025
    - path: output/ddos/reports/knn/60/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 80fbc6268c225389783f3f5cedec0288.dir
      size: 859020
      nfiles: 750
  grid_search@ddos-knn-60-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=60
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true
      hydra.sweeper.study_name=knn_ddos hydra.sweep.dir=output/ddos/logs/knn/60/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/knn/60/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f550726ddc7ba55cafea94f8b2f67b2a
      size: 476
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/60/transforms/symmetric_true/modified_true/
      hash: md5
      md5: f90164ef764fe4e26c3a7d91ae70250d.dir
      size: 2752994
      nfiles: 1025
    - path: output/ddos/reports/knn/60/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 11746a291268bcc494c112d0125fce67.dir
      size: 830981
      nfiles: 726
  grid_search@ddos-knn-100-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=100
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=false ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/100/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/knn/100/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f550726ddc7ba55cafea94f8b2f67b2a
      size: 476
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/100/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 561827b5a365cc4eac860484027586da.dir
      size: 2763194
      nfiles: 1025
    - path: output/ddos/reports/knn/100/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 8ce077ce4033c2a856219f97c0e551d7.dir
      size: 845442
      nfiles: 738
  grid_search@ddos-knn-100-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=100
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=false
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/100/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/knn/100/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f550726ddc7ba55cafea94f8b2f67b2a
      size: 476
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/100/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 1ecb52012f1f168053e245725c53ca52.dir
      size: 2761354
      nfiles: 1025
    - path: output/ddos/reports/knn/100/transforms/symmetric_true/modified_false/
      hash: md5
      md5: b67e86184b03625da0eaebc30a0eb422.dir
      size: 838089
      nfiles: 732
  grid_search@ddos-knn-100-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=100
      data.sample.test_size=100 ++model_name=knn ++model.init.symmetric=true ++model.init.modified=true
      hydra.sweeper.study_name=knn_ddos 
      hydra.sweep.dir=output/ddos/logs/knn/100/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/knn/100/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      knn --multirun
    deps:
    - path: conf/knn.yaml
      hash: md5
      md5: ab5e60412c5b4b283231448b15cd1dda
      size: 2090
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: f550726ddc7ba55cafea94f8b2f67b2a
      size: 476
    - path: params.yaml
      hash: md5
      md5: ff768842179023ccce74283f331396d3
      size: 1180
    params:
      conf/knn.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.num}
          callbacks:
            study_dump:
              _target_: optuna_database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            direction: ${direction}
            storage: sqlite:///output/optuna.db
            study_name: ${dataset}_${model_name}_${stage}
            n_trials: 256
            n_jobs: 16
            max_failure_rate: 1.0
            params:
              model.init.k: 1,3,5
              +model.init.weights: uniform,distance
              +model.init.algorithm: brute
              model_name: ${model_name}
              ++model.init.symmetric: True,False
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/knn/100/transforms/symmetric_true/modified_true/
      hash: md5
      md5: ee203a67ec3eeb86f40d4153d6cb0478.dir
      size: 2755693
      nfiles: 1025
    - path: output/ddos/reports/knn/100/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 2486b60c13abaa2cd20bd730a6996954.dir
      size: 861655
      nfiles: 753
  grid_search@ddos-logistic-10-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=false
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/10/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/10/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/10/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 893d91efce89b7aeccff918fc2dd000f.dir
      size: 3007429
      nfiles: 1025
    - path: output/ddos/reports/logistic/10/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 044ce25d4e37c07ca308d3af0e63eef2.dir
      size: 915213
      nfiles: 765
  grid_search@ddos-logistic-10-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/10/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/10/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/10/transforms/symmetric_true/modified_false/
      hash: md5
      md5: f6771f835841926f2184e4373cbec16a.dir
      size: 3176109
      nfiles: 1026
    - path: output/ddos/reports/logistic/10/transforms/symmetric_true/modified_false/
      hash: md5
      md5: ba94329035131329d8c7933e6b4d2e2f.dir
      size: 912535
      nfiles: 768
  grid_search@ddos-logistic-10-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=true hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/10/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/logistic/10/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/10/transforms/symmetric_true/modified_true/
      hash: md5
      md5: d8c5c8493580ba51ce95907ccc3cc667.dir
      size: 3256025
      nfiles: 1026
    - path: output/ddos/reports/logistic/10/transforms/symmetric_true/modified_true/
      hash: md5
      md5: c11b6d211c959ab6481dc779cfec42cf.dir
      size: 911992
      nfiles: 768
  grid_search@ddos-logistic-20-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=false
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/20/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/20/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/20/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 3f56943ef249983759d35644aa801e34.dir
      size: 3329068
      nfiles: 1026
    - path: output/ddos/reports/logistic/20/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 583f1f7a81873e41a43788950f4b1674.dir
      size: 910250
      nfiles: 768
  grid_search@ddos-logistic-20-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/20/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/20/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/20/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 1d6782a91ce70c51337bcbae2226157a.dir
      size: 3409366
      nfiles: 1026
    - path: output/ddos/reports/logistic/20/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 5604245a74f458242cfc8ba799507033.dir
      size: 910188
      nfiles: 768
  grid_search@ddos-logistic-20-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=true hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/20/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/logistic/20/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/20/transforms/symmetric_true/modified_true/
      hash: md5
      md5: f31ad0815d7ec9d653d7e0a6784ad07b.dir
      size: 3486958
      nfiles: 1026
    - path: output/ddos/reports/logistic/20/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 98f37d7f877c603bdd13b4d9ca7875ef.dir
      size: 909585
      nfiles: 768
  grid_search@ddos-logistic-35-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=35
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=false
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/35/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/35/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/35/transforms/symmetric_false/modified_false/
      hash: md5
      md5: b3d1fbb00d56b2d82d94e6ad204da8de.dir
      size: 3577055
      nfiles: 1026
    - path: output/ddos/reports/logistic/35/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 5b254912fae4a50d8930c9e4ef9f8720.dir
      size: 913235
      nfiles: 767
  grid_search@ddos-logistic-35-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=35
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/35/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/35/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/35/transforms/symmetric_true/modified_false/
      hash: md5
      md5: f0cf84bd0320f8b0e09e64cc6b36e018.dir
      size: 3656383
      nfiles: 1026
    - path: output/ddos/reports/logistic/35/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 2c5e01178c41a0921adb5f1825e519f7.dir
      size: 912925
      nfiles: 767
  grid_search@ddos-logistic-35-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=35
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=true hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/35/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/logistic/35/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/35/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 9910c6c88119fc2b0b88998da12c3170.dir
      size: 3735387
      nfiles: 1026
    - path: output/ddos/reports/logistic/35/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 35d85055fd134311aec759d3fb1ef2e1.dir
      size: 911588
      nfiles: 768
  grid_search@ddos-logistic-60-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=60
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=false
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/60/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/60/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/60/transforms/symmetric_false/modified_false/
      hash: md5
      md5: d589fb51bb90ec5bb6957b30f3f7a10f.dir
      size: 3823874
      nfiles: 1026
    - path: output/ddos/reports/logistic/60/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 12d6bc027e1a760e2bc9e7c76d4e4f40.dir
      size: 912407
      nfiles: 768
  grid_search@ddos-logistic-60-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=60
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/60/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/60/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/60/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 8c9a98efcbaa569dcdb26e30865ad630.dir
      size: 3901949
      nfiles: 1026
    - path: output/ddos/reports/logistic/60/transforms/symmetric_true/modified_false/
      hash: md5
      md5: ded41cb49842b35466892db0d853af94.dir
      size: 912808
      nfiles: 767
  grid_search@ddos-logistic-60-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=60
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=true hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/60/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/logistic/60/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/60/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 27106046a42d4a35e66fb457e093c47a.dir
      size: 3980852
      nfiles: 1026
    - path: output/ddos/reports/logistic/60/transforms/symmetric_true/modified_true/
      hash: md5
      md5: ed80f1d9c3052bbfbf5579fca656a19d.dir
      size: 911370
      nfiles: 768
  grid_search@ddos-logistic-100-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=100
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=false
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/100/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/100/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/100/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 57d8084ba54b0a48b9486b6905a15753.dir
      size: 4072820
      nfiles: 1026
    - path: output/ddos/reports/logistic/100/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 9022f8272f38781c33118ba8072b8aeb.dir
      size: 912186
      nfiles: 768
  grid_search@ddos-logistic-100-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=100
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=false hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/100/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/logistic/100/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/100/transforms/symmetric_true/modified_false/
      hash: md5
      md5: a4cc5cd52b24a06271c037c5db7d5e82.dir
      size: 4151411
      nfiles: 1026
    - path: output/ddos/reports/logistic/100/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 4e7adac6ef903c26a6bf890672cb6336.dir
      size: 911588
      nfiles: 768
  grid_search@ddos-logistic-100-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=100
      data.sample.test_size=100 ++model_name=logistic ++model.init.symmetric=true
      ++model.init.modified=true hydra.sweeper.study_name=logistic_ddos 
      hydra.sweep.dir=output/ddos/logs/logistic/100/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/logistic/100/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      logistic --multirun
    deps:
    - path: conf/logistic.yaml
      hash: md5
      md5: ac3bdb53cee989e02431623d10b00c94
      size: 2282
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/logistic.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions: ${direction}
              metric_names: ${optimizers}
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.solver: saga
              +model.init.penalty: l2,l1
              +model.init.tol: tag(log, interval(1e-5, 1e-1))
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.fit_intercept: True,False
              +model.init.class_weight: balanced,None
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
              model.init.max_iter: 1000
              ++model.init.symmetric: True,False
              model_name: ${model_name}
            direction: ${direction}
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/logistic/100/transforms/symmetric_true/modified_true/
      hash: md5
      md5: d8cc8a1416c03bf9ba89e97967117610.dir
      size: 4230251
      nfiles: 1026
    - path: output/ddos/reports/logistic/100/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 7eb6d2d4c062a138e2e1f7fe790485ac.dir
      size: 911117
      nfiles: 768
  grid_search@ddos-svc-10-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=false ++model.init.modified=false
      hydra.sweeper.study_name=svc_ddos 
      hydra.sweep.dir=output/ddos/logs/svc/10/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/svc/10/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: f798d069adda93015a2af630cf707a73
      size: 2097
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/svc/10/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 9df75dbc083bd5e151857808a97ed3cf.dir
      size: 2789155
      nfiles: 1025
    - path: output/ddos/reports/svc/10/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 1be7609b87a774c1620392089242f6a1.dir
      size: 882736
      nfiles: 768
  grid_search@ddos-svc-10-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=true ++model.init.modified=false
      hydra.sweeper.study_name=svc_ddos 
      hydra.sweep.dir=output/ddos/logs/svc/10/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/svc/10/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: f798d069adda93015a2af630cf707a73
      size: 2097
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/svc/10/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 801a9c9a5ece7509da6b7a5e021341dd.dir
      size: 2918979
      nfiles: 1026
    - path: output/ddos/reports/svc/10/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 598b763437b59e2ccfb213c748c1701c.dir
      size: 880842
      nfiles: 768
  grid_search@ddos-svc-10-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=10
      data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=true ++model.init.modified=true
      hydra.sweeper.study_name=svc_ddos hydra.sweep.dir=output/ddos/logs/svc/10/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/svc/10/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: f798d069adda93015a2af630cf707a73
      size: 2097
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/svc/10/transforms/symmetric_true/modified_true/
      hash: md5
      md5: c7151fa3fb5966c39ad29600d82d832b.dir
      size: 2986757
      nfiles: 1026
    - path: output/ddos/reports/svc/10/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 87ed8267887416f7497e58843b0d61c9.dir
      size: 880848
      nfiles: 768
  grid_search@ddos-svc-20-algorithm0:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=false ++model.init.modified=false
      hydra.sweeper.study_name=svc_ddos 
      hydra.sweep.dir=output/ddos/logs/svc/20/transforms/symmetric_false/modified_false/
      files.directory=output/ddos files.reports=reports/svc/20/transforms/symmetric_false/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: f798d069adda93015a2af630cf707a73
      size: 2097
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/svc/20/transforms/symmetric_false/modified_false/
      hash: md5
      md5: d607e0d7e78d03fc04e51038d2f33fa5.dir
      size: 3061416
      nfiles: 1026
    - path: output/ddos/reports/svc/20/transforms/symmetric_false/modified_false/
      hash: md5
      md5: 2f9a12b442e01ebd054994490a0291de.dir
      size: 881817
      nfiles: 768
  grid_search@ddos-svc-20-algorithm1:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=true ++model.init.modified=false
      hydra.sweeper.study_name=svc_ddos 
      hydra.sweep.dir=output/ddos/logs/svc/20/transforms/symmetric_true/modified_false/
      files.directory=output/ddos files.reports=reports/svc/20/transforms/symmetric_true/modified_false/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: f798d069adda93015a2af630cf707a73
      size: 2097
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/svc/20/transforms/symmetric_true/modified_false/
      hash: md5
      md5: 507b78677c8f7ee2e919c41a1207b5eb.dir
      size: 3127584
      nfiles: 1026
    - path: output/ddos/reports/svc/20/transforms/symmetric_true/modified_false/
      hash: md5
      md5: bf3ba9e0173e2ea5dbfd51e8d08efd73.dir
      size: 881312
      nfiles: 768
  grid_search@ddos-svc-20-algorithm2:
    cmd: python -m deckard.layers.optimise stage=train data=ddos ++dataset=ddos ++data.sample.train_size=20
      data.sample.test_size=100 ++model_name=svc ++model.init.symmetric=true ++model.init.modified=true
      hydra.sweeper.study_name=svc_ddos hydra.sweep.dir=output/ddos/logs/svc/20/transforms/symmetric_true/modified_true/
      files.directory=output/ddos files.reports=reports/svc/20/transforms/symmetric_true/modified_true/
      hydra.launcher.n_jobs=-1 ++data.sample.random_state="tag(choice, tag(int, range(1,1000)))"
      ++model.init.metric=gzip,lzma,bz2,zstd,brotli,levenshtein,ratio,hamming,jaro,jaro_winkler,seqratio
      ++model.init.transform=None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
      ++model.init.condensing_method=None ~model.init.distance_matrix ++raise_exception=True                --config-name
      svc --multirun
    deps:
    - path: conf/svc.yaml
      hash: md5
      md5: f798d069adda93015a2af630cf707a73
      size: 2097
    - path: output/kdd_nsl/reports/train/default/score_dict.json
      hash: md5
      md5: e2f95e56e99e0f86a2a4b4cdc467e7ee
      size: 475
    - path: params.yaml
      hash: md5
      md5: c09db4b4c7f6bf0a6dd455b7d5dc3beb
      size: 1184
    params:
      conf/svc.yaml:
        hydra:
          run:
            dir: ${dataset}/logs/${stage}/
          sweep:
            dir: ???
            subdir: ${hydra.job.id}
          callbacks:
            study_dump:
              _target_: database.OptunaStudyDumpCallback
              storage: ${hydra.sweeper.storage}
              study_name: ${hydra.sweeper.study_name}
              directions:
              - maximize
              metric_names:
              - accuracy
              output_file: ${hydra.sweep.dir}/study.csv
          sweeper:
            sampler:
              _target_: optuna.samplers.TPESampler
              consider_prior: true
              seed: 123
              prior_weight: 1.0
              consider_magic_clip: true
              consider_endpoints: true
              n_startup_trials: 128
              n_ei_candidates: 8
            _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
            study_name: ${dataset}_${model_name}_${stage}
            storage: sqlite:///output/optuna.db
            n_trials: 256
            n_jobs: 16
            params:
              +model.init.C: tag(log, interval(1e-3, 1e3))
              +model.init.gamma: scale,auto
              +model.init.class_weight: balanced,null
              model_name: ${model_name}
              ++model.init.symmetric: true,false
              ++model.init.modified: True,False
              ++model.init.condensing_method: medoid,sum,svc,random,hardness,nearmiss,knn,None
              ++model.init.transform: 
                None,abs,square,exp_neg,exp_neg_gamma_001,exp_neg_gamma_01,exp_neg_gamma_1,exp_neg_gamma10,exp_neg_gamma100,exp_neg_gamma1000
            max_failure_rate: 1.0
          launcher:
            _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
            n_jobs: 8
            prefer: processes
            verbose: 1
            timeout:
            pre_dispatch: ${hydra.sweeper.n_jobs}
            batch_size: auto
            temp_folder: /tmp/deckard
            max_nbytes: 100000
            mmap_mode: r
    outs:
    - path: output/ddos/logs/svc/20/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 24ad564b3f0ebc306c949db23860a12a.dir
      size: 3193907
      nfiles: 1026
    - path: output/ddos/reports/svc/20/transforms/symmetric_true/modified_true/
      hash: md5
      md5: 8c8346170d4793f4c1c994d76c3c638d.dir
      size: 880945
      nfiles: 768
