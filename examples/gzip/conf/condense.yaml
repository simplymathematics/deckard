defaults:
    # - _target_ : deckard.base.experiment.Experiment
    - _self_
    - data: ???
    - model: gzip_knn
    - files: default
    - scorers: default
    - override hydra/sweeper : optuna
    - override hydra/sweeper/sampler : tpe
    - override hydra/launcher : joblib
dataset : ???
model_name : ???
stage : train
direction : 
  - maximize
  - minimize
optimizers: 
   - accuracy
   - predict_time
device_id : ${oc.env:DECKARD_DEVICE_ID, "cpu"}
hydra:
  run:
    dir: ${dataset}/logs/condense/
  sweep:
    dir: ???
    subdir : ${hydra.job.num}
  callbacks:
    study_dump:
      _target_ : database.OptunaStudyDumpCallback
      storage : ${hydra.sweeper.storage}
      study_name : ${hydra.sweeper.study_name}
      directions : ${direction}
      metric_names : ${optimizers}
      output_file : ${dataset}/logs/${model_name}/${data.sample.train_size}/study.csv
  sweeper:
    sampler:
      _target_: optuna.samplers.TPESampler
      seed : ???
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    study_name: ${dataset}_${model_name}
    storage: sqlite:///optuna.db
    n_jobs: 1
    n_trials : 2
    direction: ${direction}
    params: 
      ++data.sample.train_size : tag(log, int(interval(100, 1000)))
      ++data.sample.random_state: int(interval(10000, 20000))
      model.init.m : tag(log, interval(.1, 1))
      +model.init.sampling_method : knn,medoid,sum,svc,random
      model.init.symmetric : True,False
  launcher:
    _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
    n_jobs: 8
    prefer : processes
    verbose: 1
    timeout: null
    pre_dispatch: ${hydra.sweeper.n_jobs}
    batch_size: auto
    temp_folder: /tmp/deckard
    max_nbytes: 100000
    mmap_mode: r
