schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 5000
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 5000
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: 6225c0aefe4059bfae7f5b0e04ae549a
      size: 2189
    - path: output/reports/train/default/predictions.json
      hash: md5
      md5: 3c5089245ae71f1b860304a02a224078
      size: 70072
    - path: output/reports/train/default/probabilities.json
      hash: md5
      md5: 3c5089245ae71f1b860304a02a224078
      size: 70072
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: cc368afafd0e89f04fb0ae89e64f5e0d
      size: 716
  attack:
    cmd: python -m deckard.layers.experiment attack
    deps:
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: 6225c0aefe4059bfae7f5b0e04ae549a
      size: 2189
    - path: output/reports/train/default/predictions.json
      hash: md5
      md5: 3c5089245ae71f1b860304a02a224078
      size: 70072
    - path: output/reports/train/default/probabilities.json
      hash: md5
      md5: 3c5089245ae71f1b860304a02a224078
      size: 70072
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: cc368afafd0e89f04fb0ae89e64f5e0d
      size: 716
    params:
      params.yaml:
        attack:
          _target_: deckard.base.attack.Attack
          attack_size: 10
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 5000
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            model:
              _target_: deckard.base.model.Model
              art:
                _target_: deckard.base.model.art_pipeline.ArtPipeline
                initialize:
                library: sklearn-svc
              data:
                _target_: deckard.base.data.Data
                name: 
                  https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
                sample:
                  _target_: deckard.base.data.SklearnDataSampler
                  random_state: 0
                  stratify: true
                  test_size: 1000
                  train_size: 5000
                sklearn_pipeline:
                  encoder:
                    handle_unknown: use_encoded_value
                    name: sklearn.preprocessing.OrdinalEncoder
                    unknown_value: -1
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
                target: label
              init:
                C: 1.0
                _target_: deckard.base.model.ModelInitializer
                kernel: rbf
                max_iter: 10
                name: sklearn.svm.SVC
                probability: true
                random_state: 0
              library: sklearn-svc
            name: art.attacks.evasion.HopSkipJump
          method: evasion
          model:
            _target_: deckard.base.model.Model
            art:
              _target_: deckard.base.model.art_pipeline.ArtPipeline
              initialize:
              library: sklearn-svc
            data:
              _target_: deckard.base.data.Data
              name: 
                https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
              sample:
                _target_: deckard.base.data.SklearnDataSampler
                random_state: 0
                stratify: true
                test_size: 1000
                train_size: 5000
              sklearn_pipeline:
                encoder:
                  handle_unknown: use_encoded_value
                  name: sklearn.preprocessing.OrdinalEncoder
                  unknown_value: -1
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
              target: label
            init:
              C: 1.0
              _target_: deckard.base.model.ModelInitializer
              kernel: rbf
              max_iter: 10
              name: sklearn.svm.SVC
              probability: true
              random_state: 0
            library: sklearn-svc
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 5000
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 5000
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/attacks/attack.pkl
      hash: md5
      md5: e250ed2062f12ee9f024bf1be33abf73
      size: 1832
    - path: output/reports/attack/default/adv_predictions.json
      hash: md5
      md5: 8cb93c0ec6db31d94298f831ac081c64
      size: 700
    - path: output/reports/attack/default/adv_probabilities.json
      hash: md5
      md5: 8cb93c0ec6db31d94298f831ac081c64
      size: 700
    - path: output/reports/attack/default/params.yaml
      hash: md5
      md5: 3aa13a2e1e66b911f66d9bd8a8823369
      size: 5310
    - path: output/reports/attack/default/predictions.json
      hash: md5
      md5: 3c5089245ae71f1b860304a02a224078
      size: 70072
    - path: output/reports/attack/default/probabilities.json
      hash: md5
      md5: 3c5089245ae71f1b860304a02a224078
      size: 70072
    - path: output/reports/attack/default/score_dict.json
      hash: md5
      md5: 595fabb17f79dca7ef3d7799e6a43388
      size: 1235
  models:
    cmd: bash other_data.sh +stage=train --config-name=model.yaml
    deps:
    - path: conf/model.yaml
      hash: md5
      md5: 7895842addd2cae0477e8bd3d1c3a075
      size: 950
    - path: other_data.sh
      hash: md5
      md5: 1d49cb0ca8b7c49389e2a41d2d40dcb2
      size: 1314
    - path: params.yaml
      hash: md5
      md5: c7e85851f691450d5050508ebe39b823
      size: 5442
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 5000
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 5000
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 155463edba880de94ed717294def04a8
      size: 208896
  compile_models:
    cmd: python -m deckard.layers.compile --report_folder output/reports/train/ --results_file
      output/train.csv
    deps:
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 155463edba880de94ed717294def04a8
      size: 208896
    - path: output/reports/train/
      hash: md5
      md5: df8221c356532e382e7f6909027e1648.dir
      size: 11786125
      nfiles: 336
    outs:
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
  find_best_model@rbf:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_rbf --study_name=rbf  --default_config default.yaml --storage_name
      sqlite:///model.db
    deps:
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 155463edba880de94ed717294def04a8
      size: 208896
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
    outs:
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 7210f1655e71b637d09822e3faa1f0ff
      size: 358
  find_best_model@linear:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_linear --study_name=linear  --default_config default.yaml
      --storage_name sqlite:///model.db
    deps:
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 155463edba880de94ed717294def04a8
      size: 208896
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
    outs:
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: e4ae7059114d8724d4947e952145d4fe
      size: 330
  find_best_model@poly:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_poly --study_name=poly  --default_config default.yaml --storage_name
      sqlite:///model.db
    deps:
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 155463edba880de94ed717294def04a8
      size: 208896
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
    outs:
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: 49c26d851f36ef980b4a5bb1dabfebd8
      size: 370
  attacks:
    cmd: bash attacks.sh ++stage=attack   --config-name=attack.yaml
    deps:
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: e4ae7059114d8724d4947e952145d4fe
      size: 330
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: 49c26d851f36ef980b4a5bb1dabfebd8
      size: 370
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 7210f1655e71b637d09822e3faa1f0ff
      size: 358
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 155463edba880de94ed717294def04a8
      size: 208896
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
    outs:
    - path: attack.db
      hash: md5
      md5: 37f5c17e7689935a334caf09c8aac40c
      size: 315392
    - path: logs/attacks/
      hash: md5
      md5: 18f2cba5502fa20600145eb551f2e64b.dir
      size: 1695110
      nfiles: 3
  compile_attacks:
    cmd: python -m deckard.layers.compile --report_folder output/reports/attack/ --results_file
      output/attack.csv
    deps:
    - path: attack.db
      hash: md5
      md5: 37f5c17e7689935a334caf09c8aac40c
      size: 315392
    - path: logs/attacks/
      hash: md5
      md5: 18f2cba5502fa20600145eb551f2e64b.dir
      size: 1695110
      nfiles: 3
    - path: output/reports/attack/
      hash: md5
      md5: b71df3c8f2374573d6170f3223aa9b9c.dir
      size: 39783146
      nfiles: 2169
    outs:
    - path: output/attack.csv
      hash: md5
      md5: 3ba52610fa5c0f042ceb92c3139f5596
      size: 983830
  find_best_attack@linear:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_linear --study_name=best_linear  --default_config default.yaml
      --storage_name sqlite:///attack.db --direction minimize
    deps:
    - path: attack.db
      hash: md5
      md5: 37f5c17e7689935a334caf09c8aac40c
      size: 315392
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
    outs:
    - path: conf/attack/best_linear.yaml
      hash: md5
      md5: d154a851ce6ec4fd55b11dbc50bea318
      size: 249
  find_best_attack@rbf:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_rbf --study_name=best_rbf  --default_config default.yaml
      --storage_name sqlite:///attack.db --direction minimize
    deps:
    - path: attack.db
      hash: md5
      md5: 37f5c17e7689935a334caf09c8aac40c
      size: 315392
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
    outs:
    - path: conf/attack/best_rbf.yaml
      hash: md5
      md5: c68a838c04899ee68e0072f640af2f21
      size: 248
  find_best_attack@poly:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_poly --study_name=best_poly  --default_config default.yaml
      --storage_name sqlite:///attack.db --direction minimize
    deps:
    - path: attack.db
      hash: md5
      md5: 37f5c17e7689935a334caf09c8aac40c
      size: 315392
    - path: logs/models/
      hash: md5
      md5: 3bdfd76f9298422ef6c1b55ef111802c.dir
      size: 202845
      nfiles: 3
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
    outs:
    - path: conf/attack/best_poly.yaml
      hash: md5
      md5: 33974287420fdf63175bb6e0212a1e9b
      size: 251
  other_data_train@kdd_nsl:
    cmd: DATASET_NAME=kdd_nsl bash other_data.sh data=kdd_nsl +stage=train --config-name=model.yaml
    deps:
    - path: conf/model.yaml
      hash: md5
      md5: daaa0663d05972a5b8645c35d364da88
      size: 990
    - path: other_data.sh
      hash: md5
      md5: 6ebecf100cc02847ad31901bebb2ee5a
      size: 2759
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: d4e0a34b2b15765ca71fa5ecaf7e3826
      size: 2100
    outs:
    - path: kdd_nsl.db
      hash: md5
      md5: 06933f8fc0a1feca0944c131b6a3854b
      size: 348160
    - path: kdd_nsl/
      hash: md5
      md5: 9076c4e55fd1058e7446588d99930d58.dir
      size: 39137423
      nfiles: 1072
    - path: logs/kdd_nsl/
      hash: md5
      md5: e7c227947468122b62f891c0d54e0c54.dir
      size: 1314288
      nfiles: 12
  retrain:
    cmd: python retrain.py
    deps:
    - path: conf/attack/best_linear.yaml
      hash: md5
      md5: d154a851ce6ec4fd55b11dbc50bea318
      size: 249
    - path: conf/attack/best_poly.yaml
      hash: md5
      md5: 33974287420fdf63175bb6e0212a1e9b
      size: 251
    - path: conf/attack/best_rbf.yaml
      hash: md5
      md5: c68a838c04899ee68e0072f640af2f21
      size: 248
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: e4ae7059114d8724d4947e952145d4fe
      size: 330
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: 49c26d851f36ef980b4a5bb1dabfebd8
      size: 370
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 7210f1655e71b637d09822e3faa1f0ff
      size: 358
    - path: output/attacks/
      hash: md5
      md5: fa1bb6df926ae12f22c2651ab77c3a86.dir
      size: 4070312
      nfiles: 241
    outs:
    - path: plots/after_retrain_confidence.csv
      hash: md5
      md5: d06f8ccd3410c566773776bee2933753
      size: 785930
    - path: plots/before_retrain_confidence.csv
      hash: md5
      md5: 7289fa5bcd5712d52801b76b36159d80
      size: 785913
    - path: retrain/
      hash: md5
      md5: 9f340584668054abbc4cda10df68f660.dir
      size: 172962
      nfiles: 12
  plots:
    cmd: python plots.py
    deps:
    - path: output/attack.csv
      hash: md5
      md5: 3ba52610fa5c0f042ceb92c3139f5596
      size: 983830
    - path: output/train.csv
      hash: md5
      md5: 4508b28e78d9b4d38dd60a10b54798dc
      size: 164189
    - path: plots.py
      hash: md5
      md5: 6f0729bdca6bafc3c92faca71dc8c97e
      size: 10164
    - path: plots/after_retrain_confidence.csv
      hash: md5
      md5: d06f8ccd3410c566773776bee2933753
      size: 785930
    - path: plots/before_retrain_confidence.csv
      hash: md5
      md5: 7289fa5bcd5712d52801b76b36159d80
      size: 785913
    outs:
    - path: plots/accuracy_vs_attack_parameters.eps
      hash: md5
      md5: 8174380cd1e3153249aa7f4095905d82
      size: 39189
    - path: plots/confidence_vs_attack_parameters.eps
      hash: md5
      md5: e612551ce45bfb4fbd134c0058ae038d
      size: 41785
    - path: plots/retrain_accuracy.eps
      hash: md5
      md5: 5d0161b9c44e397e167e200738709fe3
      size: 30829
    - path: plots/retrain_confidence_vs_attack_parameters.eps
      hash: md5
      md5: 76c457aeabd26983a5fc3a129e942c0a
      size: 42149
    - path: plots/retrain_time.eps
      hash: md5
      md5: 461075c4b7f2f693c22f96e34db026ca
      size: 28368
    - path: plots/train_time_vs_attack_parameters.eps
      hash: md5
      md5: 59de7016df4a8380776a7ea0dd160359
      size: 39247
  move_files:
    cmd: cp -r plots/* ~/KDD-Paper-EAI-AISEC/kdd-nsl/
