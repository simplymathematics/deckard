schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          generate:
            n_features: 20
            n_samples: 1100
            name: classification
            random_state: 0
          sample:
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 100
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            generate:
              n_features: 20
              n_samples: 1100
              name: classification
              random_state: 0
            sample:
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 100
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: d4e0a34b2b15765ca71fa5ecaf7e3826
      size: 2100
    - path: output/reports/train/default/predictions.json
      hash: md5
      md5: 1bfeaf1fa0cb4e90604169e61dc95892
      size: 42667
    - path: output/reports/train/default/probabilities.json
      hash: md5
      md5: 1bfeaf1fa0cb4e90604169e61dc95892
      size: 42667
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: b5002e336c23ad2c890f50dcb4ae88a5
      size: 353
  attack:
    cmd: python -m deckard.layers.experiment attack
    deps:
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: d4e0a34b2b15765ca71fa5ecaf7e3826
      size: 2100
    - path: output/reports/train/default/predictions.json
      hash: md5
      md5: 1bfeaf1fa0cb4e90604169e61dc95892
      size: 42667
    - path: output/reports/train/default/probabilities.json
      hash: md5
      md5: 1bfeaf1fa0cb4e90604169e61dc95892
      size: 42667
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: b5002e336c23ad2c890f50dcb4ae88a5
      size: 353
    params:
      params.yaml:
        attack:
          _target_: deckard.base.attack.Attack
          attack_size: 10
          data:
            _target_: deckard.base.data.Data
            generate:
              n_features: 20
              n_samples: 1100
              name: classification
              random_state: 0
            sample:
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 100
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            model:
              _target_: deckard.base.model.Model
              art:
                _target_: deckard.base.model.art_pipeline.ArtPipeline
                initialize:
                library: sklearn-svc
              data:
                _target_: deckard.base.data.Data
                generate:
                  n_features: 20
                  n_samples: 1100
                  name: classification
                  random_state: 0
                sample:
                  random_state: 0
                  stratify: true
                  test_size: 1000
                  train_size: 100
                sklearn_pipeline:
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
              init:
                C: 1.0
                _target_: deckard.base.model.ModelInitializer
                kernel: rbf
                max_iter: 10
                name: sklearn.svm.SVC
                probability: true
                random_state: 0
              library: sklearn-svc
            name: art.attacks.evasion.ProjectedGradientDescent
          method: evasion
          model:
            _target_: deckard.base.model.Model
            art:
              _target_: deckard.base.model.art_pipeline.ArtPipeline
              initialize:
              library: sklearn-svc
            data:
              _target_: deckard.base.data.Data
              generate:
                n_features: 20
                n_samples: 1100
                name: classification
                random_state: 0
              sample:
                random_state: 0
                stratify: true
                test_size: 1000
                train_size: 100
              sklearn_pipeline:
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
            init:
              C: 1.0
              _target_: deckard.base.model.ModelInitializer
              kernel: rbf
              max_iter: 10
              name: sklearn.svm.SVC
              probability: true
              random_state: 0
            library: sklearn-svc
        data:
          _target_: deckard.base.data.Data
          generate:
            n_features: 20
            n_samples: 1100
            name: classification
            random_state: 0
          sample:
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 100
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            generate:
              n_features: 20
              n_samples: 1100
              name: classification
              random_state: 0
            sample:
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 100
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/attacks/attack.pkl
      hash: md5
      md5: bbce7d8f6ca5653f7cb6a6dd5f974582
      size: 952
    - path: output/reports/attack/default/adv_predictions.json
      hash: md5
      md5: 2ad26f915f08b13757e052dda7146c7d
      size: 427
    - path: output/reports/attack/default/adv_probabilities.json
      hash: md5
      md5: 2ad26f915f08b13757e052dda7146c7d
      size: 427
    - path: output/reports/attack/default/params.yaml
      hash: md5
      md5: 5be65828d59c309890bae9649e491dba
      size: 5010
    - path: output/reports/attack/default/predictions.json
      hash: md5
      md5: 1bfeaf1fa0cb4e90604169e61dc95892
      size: 42667
    - path: output/reports/attack/default/probabilities.json
      hash: md5
      md5: 1bfeaf1fa0cb4e90604169e61dc95892
      size: 42667
    - path: output/reports/attack/default/score_dict.json
      hash: md5
      md5: 10fee78b3899c113c799a056cf9a20ee
      size: 577
  models:
    cmd: bash models.sh +stage=train --config-name=model.yaml
    deps:
    - path: conf/model.yaml
      hash: md5
      md5: d2fdcee453cdf1eb749eb28931e8ebbf
      size: 950
    - path: models.sh
      hash: md5
      md5: 509157bdd5b524a21b8294dc2409a969
      size: 5887
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: d4e0a34b2b15765ca71fa5ecaf7e3826
      size: 2100
    - path: params.yaml
      hash: md5
      md5: 4b1c07b7f8c3a67f5c257b7c5fa72c85
      size: 4223
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          generate:
            n_features: 20
            n_samples: 1100
            name: classification
            random_state: 0
          sample:
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 100
          sklearn_pipeline:
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            generate:
              n_features: 20
              n_samples: 1100
              name: classification
              random_state: 0
            sample:
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 100
            sklearn_pipeline:
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
  compile_models:
    cmd: python -m deckard.layers.compile --report_folder output/reports/train/ --results_file
      output/train.csv
    deps:
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
    - path: output/reports/train/
      hash: md5
      md5: 702efbf0ca05f21241fbfcbaeac9712b.dir
      size: 52545076
      nfiles: 1548
    outs:
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
  find_best_model@rbf:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_rbf --study_name=rbf_100_10000  --default_config default.yaml
      --storage_name sqlite:///model.db
    deps:
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
    outs:
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 4932ceac75d6256ce2a7864aa4a5ea3c
      size: 359
  find_best_model@linear:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_linear --study_name=linear_100_10000  --default_config default.yaml
      --storage_name sqlite:///model.db
    deps:
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
    outs:
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: 23a7c49f5a8ddf63a7ac89fb61c0034d
      size: 332
  find_best_model@poly:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_poly --study_name=poly_100_10000  --default_config default.yaml
      --storage_name sqlite:///model.db
    deps:
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
    outs:
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: bd9e29f3e2e34263e48401a682a84a06
      size: 370
  attacks:
    cmd: bash attacks.sh ++stage=attack  --config-name=attack.yaml
    deps:
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: 23a7c49f5a8ddf63a7ac89fb61c0034d
      size: 332
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: bd9e29f3e2e34263e48401a682a84a06
      size: 370
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 4932ceac75d6256ce2a7864aa4a5ea3c
      size: 359
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
    outs:
    - path: attack.db
      hash: md5
      md5: e4f26ccdc30870d9fea230d7e2f3d517
      size: 303104
    - path: logs/attacks/
      hash: md5
      md5: 9d63507c9eccf50f94d1e8bcca1e9b9a.dir
      size: 876433
      nfiles: 3
  compile_attacks:
    cmd: python -m deckard.layers.compile --report_folder output/reports/attack/ --results_file
      output/attack.csv
    deps:
    - path: attack.db
      hash: md5
      md5: e4f26ccdc30870d9fea230d7e2f3d517
      size: 303104
    - path: logs/attacks/
      hash: md5
      md5: 9d63507c9eccf50f94d1e8bcca1e9b9a.dir
      size: 876433
      nfiles: 3
    - path: output/reports/attack/
      hash: md5
      md5: e8550da3b609d9d52ee496b0cbda8dcd.dir
      size: 20185965
      nfiles: 1089
    outs:
    - path: output/attack.csv
      hash: md5
      md5: e83df99bc4ec73458235032d34d479a3
      size: 395210
  find_best_attack@linear:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_linear --study_name=best_linear  --default_config default.yaml
      --storage_name sqlite:///attack.db --direction minimize
    deps:
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
    outs:
    - path: conf/attack/best_linear.yaml
      hash: md5
      md5: b7ef4b4d709a4511ebd4f0a5e9002cdb
      size: 248
  find_best_attack@rbf:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_rbf --study_name=best_rbf  --default_config default.yaml
      --storage_name sqlite:///attack.db --direction minimize
    deps:
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
    outs:
    - path: conf/attack/best_rbf.yaml
      hash: md5
      md5: 74476a2360110c0c8c4e728857da2472
      size: 252
  find_best_attack@poly:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_poly --study_name=best_poly  --default_config default.yaml
      --storage_name sqlite:///attack.db --direction minimize
    deps:
    - path: logs/models/
      hash: md5
      md5: fd9e6aad79d8a1be29d42da86fd11a98.dir
      size: 1366301
      nfiles: 24
    - path: model.db
      hash: md5
      md5: 676963d31977a42501b4243cb25ab935
      size: 593920
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
    outs:
    - path: conf/attack/best_poly.yaml
      hash: md5
      md5: 0e7533628e42f20dc5a34c35e2fb701a
      size: 250
  other_data_train@kdd_nsl:
    cmd: DATASET_NAME=kdd_nsl bash other_data.sh data=kdd_nsl +stage=train --config-name=model.yaml
    deps:
    - path: conf/model.yaml
      hash: md5
      md5: daaa0663d05972a5b8645c35d364da88
      size: 990
    - path: other_data.sh
      hash: md5
      md5: 6ebecf100cc02847ad31901bebb2ee5a
      size: 2759
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: d4e0a34b2b15765ca71fa5ecaf7e3826
      size: 2100
    outs:
    - path: kdd_nsl.db
      hash: md5
      md5: 06933f8fc0a1feca0944c131b6a3854b
      size: 348160
    - path: kdd_nsl/
      hash: md5
      md5: 9076c4e55fd1058e7446588d99930d58.dir
      size: 39137423
      nfiles: 1072
    - path: logs/kdd_nsl/
      hash: md5
      md5: e7c227947468122b62f891c0d54e0c54.dir
      size: 1314288
      nfiles: 12
  retrain:
    cmd: python retrain.py
    deps:
    - path: conf/attack/best_linear.yaml
      hash: md5
      md5: b7ef4b4d709a4511ebd4f0a5e9002cdb
      size: 248
    - path: conf/attack/best_poly.yaml
      hash: md5
      md5: 0e7533628e42f20dc5a34c35e2fb701a
      size: 250
    - path: conf/attack/best_rbf.yaml
      hash: md5
      md5: 74476a2360110c0c8c4e728857da2472
      size: 252
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: 23a7c49f5a8ddf63a7ac89fb61c0034d
      size: 332
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: bd9e29f3e2e34263e48401a682a84a06
      size: 370
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 4932ceac75d6256ce2a7864aa4a5ea3c
      size: 359
    - path: output/attacks/
      hash: md5
      md5: 658e0a848877fbafbddd62ec5dd22dc3.dir
      size: 4819192
      nfiles: 121
    outs:
    - path: plots/after_retrain_confidence.csv
      hash: md5
      md5: c2273c7a9d789de1939d5006a7a087eb
      size: 326367
    - path: plots/before_retrain_confidence.csv
      hash: md5
      md5: 1a52061abda8e60e503ea271439b8f8a
      size: 326350
    - path: retrain/
      hash: md5
      md5: 22c8403d05f0f866398b504f6f3c4d37.dir
      size: 173285
      nfiles: 12
  plots:
    cmd: python plots.py
    deps:
    - path: output/attack.csv
      hash: md5
      md5: e83df99bc4ec73458235032d34d479a3
      size: 395210
    - path: output/train.csv
      hash: md5
      md5: f0e4e7434085d033c5038fb1723acc25
      size: 610341
    - path: plots.py
      hash: md5
      md5: d7b45f7ef670728e8a238909265334f2
      size: 12114
    - path: plots/after_retrain_confidence.csv
      hash: md5
      md5: c2273c7a9d789de1939d5006a7a087eb
      size: 326367
    - path: plots/before_retrain_confidence.csv
      hash: md5
      md5: 1a52061abda8e60e503ea271439b8f8a
      size: 326350
    outs:
    - path: plots/accuracy_vs_attack_parameters.eps
      hash: md5
      md5: 13be25e57708a0b2e7c6d062ad310b97
      size: 38999
    - path: plots/accuracy_vs_features.eps
      hash: md5
      md5: 3cf6dc9eb9913ab3babc82002abc5ad4
      size: 21548
    - path: plots/accuracy_vs_samples.eps
      hash: md5
      md5: be2def33826b2131795cf599a87f12de
      size: 25049
    - path: plots/confidence_vs_attack_parameters.eps
      hash: md5
      md5: 24d6d00ad927000bc60ab2012f56520c
      size: 41436
    - path: plots/retrain_accuracy.eps
      hash: md5
      md5: 2b62b83a5b7a37c16d25319602e102f4
      size: 30833
    - path: plots/retrain_confidence_vs_attack_parameters.eps
      hash: md5
      md5: 860ffadab6254488091c8bc1c619f56c
      size: 41628
    - path: plots/retrain_time.eps
      hash: md5
      md5: e32d6c3cc459943ea418eea1e20fdc2f
      size: 28407
    - path: plots/train_time_vs_attack_parameters.eps
      hash: md5
      md5: 5e88339288029b1f53f7f02d6a88bafe
      size: 39252
    - path: plots/train_time_vs_features.eps
      hash: md5
      md5: 2bf86c698e490164eb5fe4f76743f21b
      size: 19529
    - path: plots/train_time_vs_samples.eps
      hash: md5
      md5: 99b6bb26684bccd5092e92e095f2b484
      size: 24348
  move_files:
    cmd: 'cp -r ./plots/* ~/KDD-Paper-EAI-AISEC/generated/ '
