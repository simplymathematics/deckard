schema: '2.0'
stages:
  train:
    cmd: python -m deckard.layers.experiment train
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 5000
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 5000
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: 7234aab7d5edae504afa2090d96e4c3f
      size: 2434
    - path: output/reports/train/default/predictions.json
      hash: md5
      md5: 7e3dec7b2d06af151bf81addc33fba5a
      size: 44061
    - path: output/reports/train/default/probabilities.json
      hash: md5
      md5: 7e3dec7b2d06af151bf81addc33fba5a
      size: 44061
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: 1b659aed969c2f3dbd29681d381ce1d0
      size: 360
  attack:
    cmd: python -m deckard.layers.experiment attack
    deps:
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: 7234aab7d5edae504afa2090d96e4c3f
      size: 2434
    - path: output/reports/train/default/predictions.json
      hash: md5
      md5: 7e3dec7b2d06af151bf81addc33fba5a
      size: 44061
    - path: output/reports/train/default/probabilities.json
      hash: md5
      md5: 7e3dec7b2d06af151bf81addc33fba5a
      size: 44061
    - path: output/reports/train/default/score_dict.json
      hash: md5
      md5: 1b659aed969c2f3dbd29681d381ce1d0
      size: 360
    params:
      params.yaml:
        attack:
          _target_: deckard.base.attack.Attack
          attack_size: 10
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 5000
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            model:
              _target_: deckard.base.model.Model
              art:
                _target_: deckard.base.model.art_pipeline.ArtPipeline
                initialize:
                library: sklearn-svc
              data:
                _target_: deckard.base.data.Data
                name: 
                  https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
                sample:
                  _target_: deckard.base.data.SklearnDataSampler
                  random_state: 0
                  stratify: true
                  test_size: 1000
                  train_size: 5000
                sklearn_pipeline:
                  encoder:
                    handle_unknown: use_encoded_value
                    name: sklearn.preprocessing.OrdinalEncoder
                    unknown_value: -1
                  preprocessor:
                    name: sklearn.preprocessing.StandardScaler
                    with_mean: true
                    with_std: true
                target: label
              init:
                C: 1.0
                _target_: deckard.base.model.ModelInitializer
                kernel: rbf
                max_iter: 10
                name: sklearn.svm.SVC
                probability: true
                random_state: 0
              library: sklearn-svc
            name: art.attacks.evasion.HopSkipJump
          method: evasion
          model:
            _target_: deckard.base.model.Model
            art:
              _target_: deckard.base.model.art_pipeline.ArtPipeline
              initialize:
              library: sklearn-svc
            data:
              _target_: deckard.base.data.Data
              name: 
                https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
              sample:
                _target_: deckard.base.data.SklearnDataSampler
                random_state: 0
                stratify: true
                test_size: 1000
                train_size: 5000
              sklearn_pipeline:
                encoder:
                  handle_unknown: use_encoded_value
                  name: sklearn.preprocessing.OrdinalEncoder
                  unknown_value: -1
                preprocessor:
                  name: sklearn.preprocessing.StandardScaler
                  with_mean: true
                  with_std: true
              target: label
            init:
              C: 1.0
              _target_: deckard.base.model.ModelInitializer
              kernel: rbf
              max_iter: 10
              name: sklearn.svm.SVC
              probability: true
              random_state: 0
            library: sklearn-svc
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 5000
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 5000
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: output/attacks/attack.pkl
      hash: md5
      md5: 2b7587aefdfa486e84fb3c4ccb5f640c
      size: 1832
    - path: output/reports/attack/default/adv_predictions.json
      hash: md5
      md5: 18482a5b7773de281dc9e127a6febf98
      size: 438
    - path: output/reports/attack/default/adv_probabilities.json
      hash: md5
      md5: 18482a5b7773de281dc9e127a6febf98
      size: 438
    - path: output/reports/attack/default/params.yaml
      hash: md5
      md5: b300c684dc58fc23684ccefbb9f83265
      size: 5832
    - path: output/reports/attack/default/predictions.json
      hash: md5
      md5: 7e3dec7b2d06af151bf81addc33fba5a
      size: 44061
    - path: output/reports/attack/default/probabilities.json
      hash: md5
      md5: 7e3dec7b2d06af151bf81addc33fba5a
      size: 44061
    - path: output/reports/attack/default/score_dict.json
      hash: md5
      md5: fe6164548c98534ee88f439f91a5151a
      size: 585
  models:
    cmd: bash other_data.sh +stage=train --config-name=model.yaml
    deps:
    - path: conf/model.yaml
      hash: md5
      md5: bfdd4743dda1272364c4bdf8c569972c
      size: 990
    - path: models.sh
      hash: md5
      md5: 710ccd3bf4330b28472bdafa8ff7b4ba
      size: 2971
    - path: params.yaml
      hash: md5
      md5: c7e85851f691450d5050508ebe39b823
      size: 5442
    params:
      params.yaml:
        data:
          _target_: deckard.base.data.Data
          name: 
            https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
          sample:
            _target_: deckard.base.data.SklearnDataSampler
            random_state: 0
            stratify: true
            test_size: 1000
            train_size: 5000
          sklearn_pipeline:
            encoder:
              handle_unknown: use_encoded_value
              name: sklearn.preprocessing.OrdinalEncoder
              unknown_value: -1
            preprocessor:
              name: sklearn.preprocessing.StandardScaler
              with_mean: true
              with_std: true
          target: label
        files:
          _target_: deckard.base.files.FileConfig
          adv_predictions_file: adv_predictions.json
          adv_probabilities_file: adv_probabilities.json
          attack_dir: attacks
          attack_file: attack
          attack_type: .pkl
          data_dir: data
          data_file: data
          data_type: .pkl
          directory: output
          model_dir: models
          model_file: model
          model_type: .pkl
          name: default
          params_file: params.yaml
          predictions_file: predictions.json
          probabilities_file: probabilities.json
          reports: reports
          score_dict_file: score_dict.json
          test_labels_file: test_labels.json
          train_labels_file: train_labels.json
        model:
          _target_: deckard.base.model.Model
          art:
            _target_: deckard.base.model.art_pipeline.ArtPipeline
            initialize:
            library: sklearn-svc
          data:
            _target_: deckard.base.data.Data
            name: 
              https://gist.githubusercontent.com/simplymathematics/8c6c04bd151950d5ea9e62825db97fdd/raw/d6a22cdb42a1db624c89f0298cb4f654d3812703/kdd_nsl.csv
            sample:
              _target_: deckard.base.data.SklearnDataSampler
              random_state: 0
              stratify: true
              test_size: 1000
              train_size: 5000
            sklearn_pipeline:
              encoder:
                handle_unknown: use_encoded_value
                name: sklearn.preprocessing.OrdinalEncoder
                unknown_value: -1
              preprocessor:
                name: sklearn.preprocessing.StandardScaler
                with_mean: true
                with_std: true
            target: label
          init:
            C: 1.0
            _target_: deckard.base.model.ModelInitializer
            kernel: rbf
            max_iter: 10
            name: sklearn.svm.SVC
            probability: true
            random_state: 0
          library: sklearn-svc
        scorers:
          _target_: deckard.base.scorer.ScorerDict
          accuracy:
            _target_: deckard.base.scorer.ScorerConfig
            direction: maximize
            name: sklearn.metrics.accuracy_score
          log_loss:
            _target_: deckard.base.scorer.ScorerConfig
            direction: minimize
            name: sklearn.metrics.log_loss
    outs:
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 0b595e029e8e9d6e99c3da6511906eb7
      size: 778240
  compile_models:
    cmd: python -m deckard.layers.compile --report_folder output/reports/train/ --results_file
      output/train.csv
    deps:
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 0b595e029e8e9d6e99c3da6511906eb7
      size: 778240
    - path: output/reports/train/
      hash: md5
      md5: 0f4c497909d988c75851e5e56a440b89.dir
      size: 42005082
      nfiles: 1637
    outs:
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
  find_best_model@rbf:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_rbf --study_name=rbf  --default_config model.yaml
    deps:
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 0b595e029e8e9d6e99c3da6511906eb7
      size: 778240
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
    outs:
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 4932ceac75d6256ce2a7864aa4a5ea3c
      size: 359
  find_best_model@linear:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_linear --study_name=linear  --default_config model.yaml
    deps:
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 0b595e029e8e9d6e99c3da6511906eb7
      size: 778240
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
    outs:
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: e4ae7059114d8724d4947e952145d4fe
      size: 330
  find_best_model@poly:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir model
      --params_file best_poly --study_name=poly  --default_config model.yaml
    deps:
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 0b595e029e8e9d6e99c3da6511906eb7
      size: 778240
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
    outs:
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: 12f892f3ba4ef8bab095b36bd7558d3e
      size: 372
  attacks:
    cmd: bash attacks.sh ++stage=attack   --config-name=attack.yaml
    deps:
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: e4ae7059114d8724d4947e952145d4fe
      size: 330
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: 12f892f3ba4ef8bab095b36bd7558d3e
      size: 372
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 4932ceac75d6256ce2a7864aa4a5ea3c
      size: 359
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: model.db
      hash: md5
      md5: 0b595e029e8e9d6e99c3da6511906eb7
      size: 778240
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
    outs:
    - path: attack.db
      hash: md5
      md5: 32b63718640047c18ed7bb1aff484595
      size: 389120
    - path: logs/attacks/
      hash: md5
      md5: 61801da5096fd94a88d69f6de5be2413.dir
      size: 3180296
      nfiles: 3
  compile_attacks:
    cmd: python -m deckard.layers.compile --report_folder output/reports/attack/ --results_file
      output/attack.csv
    deps:
    - path: attack.db
      hash: md5
      md5: 32b63718640047c18ed7bb1aff484595
      size: 389120
    - path: logs/attacks/
      hash: md5
      md5: 61801da5096fd94a88d69f6de5be2413.dir
      size: 3180296
      nfiles: 3
    - path: output/reports/attack/
      hash: md5
      md5: 84a4553074e952b76f6a4f228dddbb47.dir
      size: 29299858
      nfiles: 1968
    outs:
    - path: output/attack.csv
      hash: md5
      md5: 188c5eda3a172c9a30808781f429aed4
      size: 703053
  find_best_attack@linear:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_linear --study_name=best_linear  --default_config attack.yaml
    deps:
    - path: attack.db
      hash: md5
      md5: 32b63718640047c18ed7bb1aff484595
      size: 389120
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
    outs:
    - path: conf/attack/best_linear.yaml
      hash: md5
      md5: df65ae18996a57abebd38df98db37edb
      size: 245
  find_best_attack@rbf:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_rbf --study_name=best_rbf  --default_config attack.yaml
    deps:
    - path: attack.db
      hash: md5
      md5: 32b63718640047c18ed7bb1aff484595
      size: 389120
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
    outs:
    - path: conf/attack/best_rbf.yaml
      hash: md5
      md5: 9871a9d8d50ef211c7f0ae884bb39fe4
      size: 247
  find_best_attack@poly:
    cmd: python -m deckard.layers.find_best --config_folder conf --config_subdir attack
      --params_file best_poly --study_name=best_poly  --default_config attack.yaml
    deps:
    - path: attack.db
      hash: md5
      md5: 32b63718640047c18ed7bb1aff484595
      size: 389120
    - path: logs/models/
      hash: md5
      md5: f7c1d4ea5ab2d8cc5d5214e2f7b4e149.dir
      size: 357091
      nfiles: 3
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
    outs:
    - path: conf/attack/best_poly.yaml
      hash: md5
      md5: d4c4945873617b0652018e6f27e52b89
      size: 247
  other_data_train@kdd_nsl:
    cmd: DATASET_NAME=kdd_nsl bash other_data.sh data=kdd_nsl +stage=train --config-name=model.yaml
    deps:
    - path: conf/model.yaml
      hash: md5
      md5: daaa0663d05972a5b8645c35d364da88
      size: 990
    - path: other_data.sh
      hash: md5
      md5: 6ebecf100cc02847ad31901bebb2ee5a
      size: 2759
    - path: output/reports/train/default/params.yaml
      hash: md5
      md5: d4e0a34b2b15765ca71fa5ecaf7e3826
      size: 2100
    outs:
    - path: kdd_nsl.db
      hash: md5
      md5: 06933f8fc0a1feca0944c131b6a3854b
      size: 348160
    - path: kdd_nsl/
      hash: md5
      md5: 9076c4e55fd1058e7446588d99930d58.dir
      size: 39137423
      nfiles: 1072
    - path: logs/kdd_nsl/
      hash: md5
      md5: e7c227947468122b62f891c0d54e0c54.dir
      size: 1314288
      nfiles: 12
  retrain:
    cmd: python retrain.py
    deps:
    - path: conf/attack/best_linear.yaml
      hash: md5
      md5: df65ae18996a57abebd38df98db37edb
      size: 245
    - path: conf/attack/best_poly.yaml
      hash: md5
      md5: d4c4945873617b0652018e6f27e52b89
      size: 247
    - path: conf/attack/best_rbf.yaml
      hash: md5
      md5: 9871a9d8d50ef211c7f0ae884bb39fe4
      size: 247
    - path: conf/model/best_linear.yaml
      hash: md5
      md5: e4ae7059114d8724d4947e952145d4fe
      size: 330
    - path: conf/model/best_poly.yaml
      hash: md5
      md5: 12f892f3ba4ef8bab095b36bd7558d3e
      size: 372
    - path: conf/model/best_rbf.yaml
      hash: md5
      md5: 4932ceac75d6256ce2a7864aa4a5ea3c
      size: 359
    - path: output/attacks/
      hash: md5
      md5: cde8aa6baa7c2646a1fc09ea3956b5e6.dir
      size: 327928
      nfiles: 179
    - path: output/models/
      hash: md5
      md5: 420131f3b75400bb25e03920f359494a.dir
      size: 2326552
      nfiles: 272
    outs:
    - path: plots/after_retrain_confidence.csv
      hash: md5
      md5: 6818046e86115df423cf15e24a43536f
      size: 52143
    - path: plots/before_retrain_confidence.csv
      hash: md5
      md5: d479df2e41303c4466ff8f9218d0fe66
      size: 52126
    - path: retrain/
      hash: md5
      md5: 2360b46dfe437da0aff771c4522c37eb.dir
      size: 174505
      nfiles: 12
  plots:
    cmd: python plots.py
    deps:
    - path: output/attack.csv
      hash: md5
      md5: 188c5eda3a172c9a30808781f429aed4
      size: 703053
    - path: output/train.csv
      hash: md5
      md5: 348d49dcbf81f9db4f7abb76fcc2f06e
      size: 598748
    - path: plots/after_retrain_confidence.csv
      hash: md5
      md5: 6818046e86115df423cf15e24a43536f
      size: 52143
    - path: plots/before_retrain_confidence.csv
      hash: md5
      md5: d479df2e41303c4466ff8f9218d0fe66
      size: 52126
    outs:
    - path: plots/accuracy_vs_attack_parameters.pdf
      hash: md5
      md5: 9a97f9f585f99c7794818b8fa38ac311
      size: 15792
    - path: plots/confidence_vs_attack_parameters.pdf
      hash: md5
      md5: 65d58bfd40e40bea5e9114c84e353ea2
      size: 17506
    - path: plots/retrain_accuracy.pdf
      hash: md5
      md5: 577e89d46eb6f2446d0a3ed83b4f9e19
      size: 13913
    - path: plots/retrain_confidence_vs_attack_parameters.pdf
      hash: md5
      md5: e1fa2d6ebd91b406426215c07d9df11a
      size: 18683
    - path: plots/retrain_time.pdf
      hash: md5
      md5: d48a53f11dd9db3b30b9382e3404963d
      size: 12916
    - path: plots/train_time_vs_attack_parameters.pdf
      hash: md5
      md5: f0a52d3088d3b90f7d6e157b87e6fc5a
      size: 17167
