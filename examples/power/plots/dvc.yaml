vars:
  - ../conf/plots.yaml:line_plot
  - ../conf/plots.yaml:scatter_plot
  # - ../conf/plots.yaml:cat_plot
  - ../conf/clean.yaml:attacks
  - ../conf/clean.yaml:defences
  - ../conf/clean.yaml:params
  - ../conf/clean.yaml:fillna
stages:
  # compile:
  #   foreach: # iterates through each stage
  #     - mnist
  #     - cifar
  #     - cifar100
  #     - bit_depth/mnist/
  #     - bit_depth/cifar/
  #     - bit_depth/cifar100/
  #   do:
  #     cmd: python -m deckard.layers.compile --report_folder /result/${item}/reports/attack/ --results_file raw.csv --results_folder data/${item} --config "../conf/compile.yaml"
  #     deps:
  #      - /result/${item}/reports/attack/
  #     outs:
  #     - data/${item}/raw.csv
  # get_power_data:
  #   foreach:
  #     - mnist
  #     - cifar
  #     - cifar100
  #     - bit_depth/mnist/
  #     - bit_depth/cifar/
  #     - bit_depth/cifar100/
  #   do:
  #     cmd: python -m deckard.layers.query_kepler --input_file data/${item}/raw.csv --output_file data/${item}/power.csv
  #     deps:
  #       -  data/bit_depth/${item}/raw.csv
  #       -  data/${item}/raw.csv
  #     outs:
  #       - data/${item}/power.csv
  merge:
    foreach:
       - mnist
       - cifar
       - cifar100
    do:
      cmd : python merge.py  --big_dir data/bit_depth/${item} --little_dir data/${item} --config ../conf/afr.yaml --data_file power.csv --output_folder ${item}/ --output_file merged.csv
      deps:
        -  data/bit_depth/${item}/power.csv
        -  data/${item}/power.csv
        - ../conf/clean.yaml
      outs:
        - ${item}/merged.csv
      params:
        - ../conf/clean.yaml:
          - fillna
  clean:
    foreach:
      - mnist
      - cifar
      - cifar100
    do:
      cmd: python -m deckard.layers.clean_data --i ${item}/merged.csv --o ${item}/clean.csv --config "../conf/clean.yaml"
      deps:
        - ${item}/merged.csv
        - ../conf/clean.yaml
      outs:
        - ${item}/clean.csv
      params:
        - ../conf/clean.yaml:
          - attacks
          - defences
          - params
          - fillna
  afr:
    foreach:
       - mnist
       - cifar
       - cifar100
    do:
      cmd: python -m deckard.layers.afr --dataset ${item} --data_file ${item}/clean.csv --config_file "../conf/afr.yaml" --plots_folder ${item}/ --target adv_failures --duration_col adv_fit_time
      deps:
        - ${item}/clean.csv
        - ../conf/afr.yaml
      plots:
        - ${item}/weibull_aft.pdf # You can also define them manually
        - ${item}/weibull_epochs_partial_effect.pdf
        - ${item}/cox_epochs_partial_effect.pdf
        - ${item}/cox_aft.pdf
        - ${item}/log_logistic_aft.pdf
        - ${item}/log_logistic_epochs_partial_effect.pdf
        - ${item}/log_normal_aft.pdf
        - ${item}/log_normal_epochs_partial_effect.pdf
      metrics:
        - ${item}/aft_comparison.csv
      outs:
        - ${item}/aft_comparison.tex

  
  combined_plots:
    cmd : python combined_plots.py
    deps:
      - mnist/aft_comparison.csv
      - cifar/aft_comparison.csv
      - cifar100/aft_comparison.csv
      - combined_plots.py
    outs:
      - data/combined/combined.csv
    plots:
       - combined/acc.pdf
       - combined/time.pdf
       - combined/cost.pdf
       - combined/power.pdf
  combined_clean:
    cmd: python -m deckard.layers.clean_data --i data/combined/combined.csv --o combined/clean.csv --config "../conf/clean.yaml"
    deps:
      - data/combined/combined.csv
      - ../conf/clean.yaml
    outs:
     - combined/clean.csv
    params:
     - ../conf/clean.yaml:
       - attacks
       - defences
       - params
       - fillna
  combined_afr:
    cmd: python -m deckard.layers.afr --dataset Combined --data_file combined/clean.csv --config_file "../conf/combined_afr.yaml" --plots_folder combined/ --target adv_failures --duration_col adv_fit_time
    deps:
      - combined/clean.csv
      - ../conf/combined_afr.yaml
    plots:
      - combined/weibull_aft.pdf # You can also define them manually
      - combined/weibull_qq.pdf
      - combined/log_logistic_aft.pdf
      - combined/log_logistic_qq.pdf
      - combined/log_normal_aft.pdf
      - combined/log_normal_qq.pdf
    metrics:
      - combined/aft_comparison.csv
      - combined/log_normal_summary.csv
      - combined/log_logistic_summary.csv
      - combined/weibull_summary.csv
    outs:
      - combined/aft_comparison.tex
  predict_survival_time:
    foreach:
      - weibull
      - log_normal
      - log_logistic
    do:
      cmd: >-
        python predict_with_best.py 
        --data combined/clean.csv 
        --config_file ../conf/combined_afr.yaml 
        --model ${item}
        --target adv_failures 
        --duration_col adv_fit_time
        --output combined/${item}.csv
      deps:
        - combined/clean.csv
        - ../conf/combined_afr.yaml
        - combined/aft_comparison.tex
        - predict_with_best.py
      outs:
        - combined/${item}.csv
  plot_trash_score:
    foreach:
      - weibull
      - log_normal
      - log_logistic
    do:
      cmd: >-
        python plot_trash_score.py 
        --input_file combined/${item}.csv 
        --output_file combined/${item}_trash_score.pdf
        --title ${item}
      deps:
        - combined/${item}.csv
        - plot_trash_score.py
      plots:
        - combined/${item}_trash_score.pdf
  copy:
    foreach:
      - mnist
      - cifar
      - cifar100
      - combined
    do:
      cmd: >-
        rm -rf ~/kepler-ml/plots/${item}/ && mkdir -p ~/kepler-ml/plots/${item}/ && cp -r ${item}/* ~/kepler-ml/plots/${item}/
      deps:
        - ${item}/
