vars:
  - ../conf/plots.yaml:line_plot
  - ../conf/plots.yaml:scatter_plot
  # - ../conf/plots.yaml:cat_plot
  - ../conf/clean.yaml:attacks
  - ../conf/clean.yaml:defences
  - ../conf/clean.yaml:params
  - ../conf/clean.yaml:fillna
stages:
  compile:
    foreach: # iterates through each stage
      - mnist
      - cifar
      - cifar100
      - bit_depth/mnist/
      - bit_depth/cifar/
      - bit_depth/cifar100/
    do:
      cmd: python -m deckard.layers.compile --report_folder /result/${item}/reports/attack/ --results_file raw.csv --results_folder data/${item} --config "../conf/compile.yaml"
      deps:
       - /result/${item}/reports/attack/
      outs:
      - data/${item}/raw.csv
  get_power_data:
    foreach:
      - mnist
      - cifar
      - cifar100
      - bit_depth/mnist/
      - bit_depth/cifar/
      - bit_depth/cifar100/
    do:
      cmd: python -m deckard.layers.query_kepler --input_file data/${item}/raw.csv --output_file data/${item}/power.csv
      deps:
        -  data/bit_depth/${item}/raw.csv
        -  data/${item}/raw.csv
      outs:
        - data/${item}/power.csv
  merge:
    foreach:
       - mnist
       - cifar
       - cifar100
    do:
      cmd : python merge.py  --big_dir data/bit_depth/${item} --little_dir data/${item} --config ../conf/afr.yaml --data_file raw.csv --output_folder plots/${item}/ --output_file merged.csv
      deps:
        -  data/bit_depth/${item}/raw.csv
        -  data/${item}/raw.csv
        - ../conf/clean.yaml
      outs:
        - plots/${item}/merged.csv
      params:
        - ../conf/clean.yaml:
          - fillna
  clean:
    foreach:
      - mnist
      - cifar
      - cifar100
    do:
      cmd: python -m deckard.layers.clean_data --i plots/${item}/merged.csv --o plots/${item}/clean.csv --config "../conf/clean.yaml"
      deps:
        - plots/${item}/merged.csv
        - ../conf/clean.yaml
      outs:
        - plots/${item}/clean.csv
      params:
        - ../conf/clean.yaml:
          - attacks
          - defences
          - params
          - fillna
  plot:
    foreach:
       - mnist
       - cifar
       - cifar100
    do:
      cmd: python -m deckard.layers.plots --path plots/${item} --file plots/${item}/clean.csv  -c "../conf/plots.yaml" 
      deps:
        - plots/${item}/clean.csv  # This should be uncommented, but I don't have enough disk space to cache the hashes of the results.
        - "../conf/plots.yaml"
      plots:
        - plots/${item}/${scatter_plot[0].file} # You can use the file specified in each list entry from the parameters specified above in vars
        - plots/${item}/${scatter_plot[1].file}
        - plots/${item}/${line_plot[0].file}
        # - plots/${item}/${cat_plot[0].file}
  afr:
    foreach:
       - mnist
       - cifar
       - cifar100
    do:
      cmd: python -m deckard.layers.afr --dataset ${item} --data_file plots/${item}/clean.csv --config_file "../conf/afr.yaml" --plots_folder plots/${item}/ 
      deps:
        - plots/${item}/clean.csv
        - ../conf/afr.yaml
      plots:
        - plots/${item}/weibull_aft.pdf # You can also define them manually
        - plots/${item}/weibull_epochs_partial_effect.pdf
        - plots/${item}/cox_epochs_partial_effect.pdf
        - plots/${item}/cox_aft.pdf
        - plots/${item}/log_logistic_aft.pdf
        - plots/${item}/log_logistic_epochs_partial_effect.pdf
        - plots/${item}/log_normal_aft.pdf
        - plots/${item}/log_normal_epochs_partial_effect.pdf
      metrics:
        - plots/${item}/aft_comparison.csv
      outs:
        - plots/${item}/aft_comparison.tex
