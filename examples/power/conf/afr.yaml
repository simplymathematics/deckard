covariates:
  - accuracy
  - train_time
  - predict_proba_time
  - model.trainer.np_epochs
  - model.trainer.batch_size
  - data.sample.random_state
  - adv_fit_time
  - attack.init.eps
  - adv_failures
fillna:
  model.trainer.np_epochs: 20
  model.trainer.batch_size: 1024
  model.art.preprocessor.bit_depth: 32
weibull:
  plot:
    file : weibull_aft.pdf
    title : Weibull AFT Model
    labels:
      "Intercept: rho_": "$\\rho$"
      "Intercept: lambda_": "$\\lambda$" 
      "data.sample.random_state: lambda_": "Random State"
      "atk_value: lambda_": "Attack Strength"
      "train_time: lambda_": "$t_{train}$"
      "predict_proba_time: lambda_": "$t_{predict}$"
      "adv_accuracy: lambda_": "Adv. Accuracy"
      "accuracy: lambda_": "Ben. Accuracy"
      "adv_fit_time: lambda_": "$t_{attack}$"
      "adv_failure_rate: lambda_": "$h_{adv.}(t;\\theta)$"
      "failure_rate: lambda_": "$h_{ben.}(t;\\theta)$"
      "model.trainer.np_epochs: lambda_": "No. of Epochs"
      "model.trainer.batch_size: lambda_": "Batch Size"
      "def_gen": "Defence"
      "attack.init.eps: lambda_": "$\\varepsilon$"
  partial_effect:
    - "file": "weibull_epochs_partial_effect.pdf"
      "covariate_array": "model.trainer.np_epochs"
      "values_array": [1,10,25,50]
      "title": "$S(t)$ for Weibull AFT"
      "ylabel": "$\\mathbb{P}~(T>t)$"
      "xlabel": "Time $t$ (seconds)"
      "legend_kwargs": {
          "title": "Epochs",
          "labels": ["1", "10", "25", "50"]
      }
cox:
  plot:
    file : cox_aft.pdf
    title : Cox AFT Model
    labels:
      "data.sample.random_state": "Random State"
      "atk_value": "Attack Strength"
      "train_time": "$t_{train}$"
      "predict_proba_time": "$t_{predict}$"
      "adv_accuracy": "Adv. Accuracy"
      "accuracy": "Ben. Accuracy"
      "adv_fit_time": "$t_{attack}$"
      "adv_failure_rate": "$h_{adv.}(t;\\theta)$"
      "failure_rate": "$h_{ben.}(t;\\theta)$"
      "model.trainer.np_epochs": "No. of Epochs"
      "model.trainer.batch_size": "Batch Size"
      "def_gen": "Defence"
      "attack.init.eps": "$\\varepsilon$"
  partial_effect:
    - "file": "cox_epochs_partial_effect.pdf"
      "covariate_array": "model.trainer.np_epochs"
      "values_array": [1,10,25,50]
      "title": "$S(t)$ for Cox AFT"
      "ylabel": "$\\mathbb{P}~(T>t)$"
      "xlabel": "Time $t$ (seconds)"
      "legend_kwargs": {
          "title": "Epochs",
          "labels": ["1", "10", "25", "50"]
      }
log_logistic:
  plot:
    file : log_logistic_aft.pdf
    title : Log logistic AFT Model
    labels:
      "Intercept: beta_": "$\\beta$"
      "Intercept: alpha_": "$\\alpha$"
      "data.sample.random_state: alpha_": "Random State"
      "atk_value: alpha_": "Attack Strength"
      "train_time: alpha_": "$t_{train}$"
      "predict_proba_time: alpha_": "$t_{predict}$"
      "adv_accuracy: alpha_": "Adv. Accuracy"
      "accuracy: alpha_": "Ben. Accuracy"
      "adv_fit_time: alpha_": "$t_{attack}$"
      "adv_failure_rate: alpha_": "$h_{adv.}(t;\\theta)$"
      "failure_rate: alpha_": "$h_{ben.}(t;\\theta)$"
      "model.trainer.np_epochs: alpha_": "No. of Epochs"
      "model.trainer.batch_size: alpha_": "Batch Size"
      "def_gen": "Defence"
      "attack.init.eps: alpha_": "$\\varepsilon$"
  partial_effect:
    - "file": "log_logistic_epochs_partial_effect.pdf"
      "covariate_array": "model.trainer.np_epochs"
      "values_array": [1,10,25,50]
      "title": "$S(t)$ for Log-Logistic AFT"
      "ylabel": "$\\mathbb{P}~(T>t)$"
      "xlabel": "Time $t$ (seconds)"
      "legend_kwargs": {
          "title": "Epochs",
          "labels": ["1", "10", "25", "50"]
      }
log_normal:
  plot:
    file : log_normal_aft.pdf
    title : Log Normal AFT Model
    labels:
      "Intercept: sigma_": "$\\sigma$" 
      "Intercept: mu_": "$\\mu$"
      "atk_value: mu_": "Attack Strength"
      "train_time: mu_": "$t_{train}$"
      "predict_proba_time: mu_": "$t_{predict}$"
      "adv_accuracy: mu_": "Adv. Accuracy"
      "accuracy: mu_": "Ben. Accuracy"
      "adv_fit_time: mu_": "$t_{attack}$"
      "adv_failure_rate: mu_": "$h_{adv.}(t;\\theta)$"
      "failure_rate: mu_": "$h_{ben.}(t;\\theta)$"
      "model.trainer.np_epochs: mu_": "No. of Epochs"
      "model.trainer.batch_size: mu_": "Batch Size"
      "def_gen": "Defence"
      "attack.init.eps: mu_": "$\\varepsilon$"
      "data.sample.random_state: mu_": "Random State"
  partial_effect:
    - "file": "log_normal_epochs_partial_effect.pdf"
      "covariate_array": "model.trainer.np_epochs"
      "values_array": [1,10,25,50]
      "title": "$S(t)$ for Log-Normal AFT"
      "ylabel": "$\\mathbb{P}~(T>t)$"
      "xlabel": "Time $t$ (seconds)"
      "legend_kwargs": {
          "title": "Epochs",
          "labels": ["1", "10", "25", "50"]
      }
